#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4918
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace mjjames.AdminSystem.DataContexts
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="Abellandscapes.co.uk")]
	public partial class adminDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Inserttestimony(mjjames.AdminSystem.DataEntities.testimony instance);
    partial void Updatetestimony(mjjames.AdminSystem.DataEntities.testimony instance);
    partial void Deletetestimony(mjjames.AdminSystem.DataEntities.testimony instance);
    partial void Insertbanner(mjjames.AdminSystem.DataEntities.banner instance);
    partial void Updatebanner(mjjames.AdminSystem.DataEntities.banner instance);
    partial void Deletebanner(mjjames.AdminSystem.DataEntities.banner instance);
    partial void Insertlookup(mjjames.AdminSystem.DataEntities.lookup instance);
    partial void Updatelookup(mjjames.AdminSystem.DataEntities.lookup instance);
    partial void Deletelookup(mjjames.AdminSystem.DataEntities.lookup instance);
    partial void Insertmedia(mjjames.AdminSystem.DataEntities.media instance);
    partial void Updatemedia(mjjames.AdminSystem.DataEntities.media instance);
    partial void Deletemedia(mjjames.AdminSystem.DataEntities.media instance);
    partial void Insertmedia_link(mjjames.AdminSystem.DataEntities.media_link instance);
    partial void Updatemedia_link(mjjames.AdminSystem.DataEntities.media_link instance);
    partial void Deletemedia_link(mjjames.AdminSystem.DataEntities.media_link instance);
    partial void InsertNewsletterReciprient(mjjames.AdminSystem.DataEntities.NewsletterReciprient instance);
    partial void UpdateNewsletterReciprient(mjjames.AdminSystem.DataEntities.NewsletterReciprient instance);
    partial void DeleteNewsletterReciprient(mjjames.AdminSystem.DataEntities.NewsletterReciprient instance);
    partial void InsertNewsletter(mjjames.AdminSystem.DataEntities.Newsletter instance);
    partial void UpdateNewsletter(mjjames.AdminSystem.DataEntities.Newsletter instance);
    partial void DeleteNewsletter(mjjames.AdminSystem.DataEntities.Newsletter instance);
    partial void Insertproject(mjjames.AdminSystem.DataEntities.project instance);
    partial void Updateproject(mjjames.AdminSystem.DataEntities.project instance);
    partial void Deleteproject(mjjames.AdminSystem.DataEntities.project instance);
    partial void Insertpage(mjjames.AdminSystem.DataEntities.page instance);
    partial void Updatepage(mjjames.AdminSystem.DataEntities.page instance);
    partial void Deletepage(mjjames.AdminSystem.DataEntities.page instance);
    partial void Insertarticle(mjjames.AdminSystem.DataEntities.article instance);
    partial void Updatearticle(mjjames.AdminSystem.DataEntities.article instance);
    partial void Deletearticle(mjjames.AdminSystem.DataEntities.article instance);
    partial void Insertoffer(mjjames.AdminSystem.DataEntities.offer instance);
    partial void Updateoffer(mjjames.AdminSystem.DataEntities.offer instance);
    partial void Deleteoffer(mjjames.AdminSystem.DataEntities.offer instance);
    #endregion
		
		public adminDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["Abellandscapes_co_ukConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public adminDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public adminDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public adminDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public adminDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<mjjames.AdminSystem.DataEntities.testimony> testimonies
		{
			get
			{
				return this.GetTable<mjjames.AdminSystem.DataEntities.testimony>();
			}
		}
		
		public System.Data.Linq.Table<mjjames.AdminSystem.DataEntities.banner> banners
		{
			get
			{
				return this.GetTable<mjjames.AdminSystem.DataEntities.banner>();
			}
		}
		
		public System.Data.Linq.Table<mjjames.AdminSystem.DataEntities.lookup> lookups
		{
			get
			{
				return this.GetTable<mjjames.AdminSystem.DataEntities.lookup>();
			}
		}
		
		public System.Data.Linq.Table<mjjames.AdminSystem.DataEntities.media> medias
		{
			get
			{
				return this.GetTable<mjjames.AdminSystem.DataEntities.media>();
			}
		}
		
		public System.Data.Linq.Table<mjjames.AdminSystem.DataEntities.media_link> media_links
		{
			get
			{
				return this.GetTable<mjjames.AdminSystem.DataEntities.media_link>();
			}
		}
		
		public System.Data.Linq.Table<mjjames.AdminSystem.DataEntities.NewsletterReciprient> NewsletterReciprients
		{
			get
			{
				return this.GetTable<mjjames.AdminSystem.DataEntities.NewsletterReciprient>();
			}
		}
		
		public System.Data.Linq.Table<mjjames.AdminSystem.DataEntities.Newsletter> Newsletters
		{
			get
			{
				return this.GetTable<mjjames.AdminSystem.DataEntities.Newsletter>();
			}
		}
		
		public System.Data.Linq.Table<mjjames.AdminSystem.DataEntities.project> projects
		{
			get
			{
				return this.GetTable<mjjames.AdminSystem.DataEntities.project>();
			}
		}
		
		public System.Data.Linq.Table<mjjames.AdminSystem.DataEntities.page> pages
		{
			get
			{
				return this.GetTable<mjjames.AdminSystem.DataEntities.page>();
			}
		}
		
		public System.Data.Linq.Table<mjjames.AdminSystem.DataEntities.article> articles
		{
			get
			{
				return this.GetTable<mjjames.AdminSystem.DataEntities.article>();
			}
		}
		
		public System.Data.Linq.Table<mjjames.AdminSystem.DataEntities.offer> offers
		{
			get
			{
				return this.GetTable<mjjames.AdminSystem.DataEntities.offer>();
			}
		}
		
		[Function(Name="dbo.getFeatured")]
		public int getFeatured([Parameter(DbType="Int")] System.Nullable<int> maxnumber, [Parameter(DbType="TinyInt")] System.Nullable<byte> randomize)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), maxnumber, randomize);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.proc_GetSiteMap")]
		public int proc_GetSiteMap([Parameter(DbType="NVarChar(MAX)")] string filter, [Parameter(DbType="NVarChar(50)")] string urlprefix, [Parameter(DbType="Bit")] System.Nullable<bool> urlwriting)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), filter, urlprefix, urlwriting);
			return ((int)(result.ReturnValue));
		}
	}
}
namespace mjjames.AdminSystem.DataEntities
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.ComponentModel;
	using System;
	
	
	[Table(Name="dbo.testimonies")]
	public partial class testimony : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _testimony_key;
		
		private string _title;
		
		private string _description;
		
		private System.Nullable<int> _project_fkey;
		
		private bool _active;
		
		private string _video_id;
		
		private string _url;
		
		private EntityRef<project> _project;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ontestimony_keyChanging(int value);
    partial void Ontestimony_keyChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void Onproject_fkeyChanging(System.Nullable<int> value);
    partial void Onproject_fkeyChanged();
    partial void OnactiveChanging(bool value);
    partial void OnactiveChanged();
    partial void Onvideo_idChanging(string value);
    partial void Onvideo_idChanged();
    partial void OnurlChanging(string value);
    partial void OnurlChanged();
    #endregion
		
		public testimony()
		{
			this._project = default(EntityRef<project>);
			OnCreated();
		}
		
		[Column(Storage="_testimony_key", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int testimony_key
		{
			get
			{
				return this._testimony_key;
			}
			set
			{
				if ((this._testimony_key != value))
				{
					this.Ontestimony_keyChanging(value);
					this.SendPropertyChanging();
					this._testimony_key = value;
					this.SendPropertyChanged("testimony_key");
					this.Ontestimony_keyChanged();
				}
			}
		}
		
		[Column(Storage="_title", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[Column(Storage="_description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_project_fkey", DbType="Int NULL")]
		public System.Nullable<int> project_fkey
		{
			get
			{
				return this._project_fkey;
			}
			set
			{
				if ((this._project_fkey != value))
				{
					if (this._project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onproject_fkeyChanging(value);
					this.SendPropertyChanging();
					this._project_fkey = value;
					this.SendPropertyChanged("project_fkey");
					this.Onproject_fkeyChanged();
				}
			}
		}
		
		[Column(Storage="_active", DbType="Bit NOT NULL")]
		public bool active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[Column(Storage="_video_id", DbType="NVarChar(50)")]
		public string video_id
		{
			get
			{
				return this._video_id;
			}
			set
			{
				if ((this._video_id != value))
				{
					this.Onvideo_idChanging(value);
					this.SendPropertyChanging();
					this._video_id = value;
					this.SendPropertyChanged("video_id");
					this.Onvideo_idChanged();
				}
			}
		}
		
		[Column(Storage="_url", DbType="NVarChar(MAX)")]
		public string url
		{
			get
			{
				return this._url;
			}
			set
			{
				if ((this._url != value))
				{
					this.OnurlChanging(value);
					this.SendPropertyChanging();
					this._url = value;
					this.SendPropertyChanged("url");
					this.OnurlChanged();
				}
			}
		}
		
		[Association(Name="project_testimony", Storage="_project", ThisKey="project_fkey", OtherKey="project_key", IsForeignKey=true)]
		public project project
		{
			get
			{
				return this._project.Entity;
			}
			set
			{
				project previousValue = this._project.Entity;
				if (((previousValue != value) 
							|| (this._project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._project.Entity = null;
						previousValue.testimonies.Remove(this);
					}
					this._project.Entity = value;
					if ((value != null))
					{
						value.testimonies.Add(this);
						this._project_fkey = value.project_key;
					}
					else
					{
						this._project_fkey = default(Nullable<int>);
					}
					this.SendPropertyChanged("project");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.banners")]
	public partial class banner : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _bannerdid;
		
		private string _name;
		
		private string _image;
		
		private string _alttext;
		
		private string _url;
		
		private string _category;
		
		private int _randomness;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnbannerdidChanging(int value);
    partial void OnbannerdidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnimageChanging(string value);
    partial void OnimageChanged();
    partial void OnalttextChanging(string value);
    partial void OnalttextChanged();
    partial void OnurlChanging(string value);
    partial void OnurlChanged();
    partial void OncategoryChanging(string value);
    partial void OncategoryChanged();
    partial void OnrandomnessChanging(int value);
    partial void OnrandomnessChanged();
    #endregion
		
		public banner()
		{
			OnCreated();
		}
		
		[Column(Storage="_bannerdid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int bannerdid
		{
			get
			{
				return this._bannerdid;
			}
			set
			{
				if ((this._bannerdid != value))
				{
					this.OnbannerdidChanging(value);
					this.SendPropertyChanging();
					this._bannerdid = value;
					this.SendPropertyChanged("bannerdid");
					this.OnbannerdidChanged();
				}
			}
		}
		
		[Column(Storage="_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[Column(Storage="_image", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string image
		{
			get
			{
				return this._image;
			}
			set
			{
				if ((this._image != value))
				{
					this.OnimageChanging(value);
					this.SendPropertyChanging();
					this._image = value;
					this.SendPropertyChanged("image");
					this.OnimageChanged();
				}
			}
		}
		
		[Column(Storage="_alttext", DbType="NVarChar(MAX)")]
		public string alttext
		{
			get
			{
				return this._alttext;
			}
			set
			{
				if ((this._alttext != value))
				{
					this.OnalttextChanging(value);
					this.SendPropertyChanging();
					this._alttext = value;
					this.SendPropertyChanged("alttext");
					this.OnalttextChanged();
				}
			}
		}
		
		[Column(Storage="_url", DbType="NVarChar(255)")]
		public string url
		{
			get
			{
				return this._url;
			}
			set
			{
				if ((this._url != value))
				{
					this.OnurlChanging(value);
					this.SendPropertyChanging();
					this._url = value;
					this.SendPropertyChanged("url");
					this.OnurlChanged();
				}
			}
		}
		
		[Column(Storage="_category", DbType="NVarChar(20)")]
		public string category
		{
			get
			{
				return this._category;
			}
			set
			{
				if ((this._category != value))
				{
					this.OncategoryChanging(value);
					this.SendPropertyChanging();
					this._category = value;
					this.SendPropertyChanged("category");
					this.OncategoryChanged();
				}
			}
		}
		
		[Column(Storage="_randomness", DbType="Int NOT NULL")]
		public int randomness
		{
			get
			{
				return this._randomness;
			}
			set
			{
				if ((this._randomness != value))
				{
					this.OnrandomnessChanging(value);
					this.SendPropertyChanging();
					this._randomness = value;
					this.SendPropertyChanged("randomness");
					this.OnrandomnessChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.lookup")]
	public partial class lookup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _lookup_key;
		
		private string _lookup_id;
		
		private string _title;
		
		private string _type;
		
		private string _value;
		
		private byte _active;
		
		private EntitySet<media> _medias;
		
		private EntitySet<media_link> _media_links;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onlookup_keyChanging(int value);
    partial void Onlookup_keyChanged();
    partial void Onlookup_idChanging(string value);
    partial void Onlookup_idChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OntypeChanging(string value);
    partial void OntypeChanged();
    partial void OnvalueChanging(string value);
    partial void OnvalueChanged();
    partial void OnactiveChanging(byte value);
    partial void OnactiveChanged();
    #endregion
		
		public lookup()
		{
			this._medias = new EntitySet<media>(new Action<media>(this.attach_medias), new Action<media>(this.detach_medias));
			this._media_links = new EntitySet<media_link>(new Action<media_link>(this.attach_media_links), new Action<media_link>(this.detach_media_links));
			OnCreated();
		}
		
		[Column(Storage="_lookup_key", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int lookup_key
		{
			get
			{
				return this._lookup_key;
			}
			set
			{
				if ((this._lookup_key != value))
				{
					this.Onlookup_keyChanging(value);
					this.SendPropertyChanging();
					this._lookup_key = value;
					this.SendPropertyChanged("lookup_key");
					this.Onlookup_keyChanged();
				}
			}
		}
		
		[Column(Storage="_lookup_id", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string lookup_id
		{
			get
			{
				return this._lookup_id;
			}
			set
			{
				if ((this._lookup_id != value))
				{
					this.Onlookup_idChanging(value);
					this.SendPropertyChanging();
					this._lookup_id = value;
					this.SendPropertyChanged("lookup_id");
					this.Onlookup_idChanged();
				}
			}
		}
		
		[Column(Storage="_title", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[Column(Storage="_type", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[Column(Storage="_value", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string value
		{
			get
			{
				return this._value;
			}
			set
			{
				if ((this._value != value))
				{
					this.OnvalueChanging(value);
					this.SendPropertyChanging();
					this._value = value;
					this.SendPropertyChanged("value");
					this.OnvalueChanged();
				}
			}
		}
		
		[Column(Storage="_active", DbType="TinyInt NOT NULL")]
		public byte active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[Association(Name="lookup_media", Storage="_medias", ThisKey="lookup_key", OtherKey="mediatype_lookup")]
		public EntitySet<media> medias
		{
			get
			{
				return this._medias;
			}
			set
			{
				this._medias.Assign(value);
			}
		}
		
		[Association(Name="lookup_media_link", Storage="_media_links", ThisKey="lookup_key", OtherKey="linktype_lookup")]
		public EntitySet<media_link> media_links
		{
			get
			{
				return this._media_links;
			}
			set
			{
				this._media_links.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_medias(media entity)
		{
			this.SendPropertyChanging();
			entity.lookup = this;
		}
		
		private void detach_medias(media entity)
		{
			this.SendPropertyChanging();
			entity.lookup = null;
		}
		
		private void attach_media_links(media_link entity)
		{
			this.SendPropertyChanging();
			entity.lookup = this;
		}
		
		private void detach_media_links(media_link entity)
		{
			this.SendPropertyChanging();
			entity.lookup = null;
		}
	}
	
	[Table(Name="dbo.media")]
	public partial class media : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _media_key;
		
		private string _title;
		
		private string _description;
		
		private string _filename;
		
		private int _mediatype_lookup;
		
		private bool _active;
		
		private EntitySet<media_link> _media_links;
		
		private EntityRef<lookup> _lookup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onmedia_keyChanging(int value);
    partial void Onmedia_keyChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnfilenameChanging(string value);
    partial void OnfilenameChanged();
    partial void Onmediatype_lookupChanging(int value);
    partial void Onmediatype_lookupChanged();
    partial void OnactiveChanging(bool value);
    partial void OnactiveChanged();
    #endregion
		
		public media()
		{
			this._media_links = new EntitySet<media_link>(new Action<media_link>(this.attach_media_links), new Action<media_link>(this.detach_media_links));
			this._lookup = default(EntityRef<lookup>);
			OnCreated();
		}
		
		[Column(Storage="_media_key", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int media_key
		{
			get
			{
				return this._media_key;
			}
			set
			{
				if ((this._media_key != value))
				{
					this.Onmedia_keyChanging(value);
					this.SendPropertyChanging();
					this._media_key = value;
					this.SendPropertyChanged("media_key");
					this.Onmedia_keyChanged();
				}
			}
		}
		
		[Column(Storage="_title", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[Column(Storage="_description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_filename", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string filename
		{
			get
			{
				return this._filename;
			}
			set
			{
				if ((this._filename != value))
				{
					this.OnfilenameChanging(value);
					this.SendPropertyChanging();
					this._filename = value;
					this.SendPropertyChanged("filename");
					this.OnfilenameChanged();
				}
			}
		}
		
		[Column(Storage="_mediatype_lookup", DbType="Int NOT NULL")]
		public int mediatype_lookup
		{
			get
			{
				return this._mediatype_lookup;
			}
			set
			{
				if ((this._mediatype_lookup != value))
				{
					if (this._lookup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onmediatype_lookupChanging(value);
					this.SendPropertyChanging();
					this._mediatype_lookup = value;
					this.SendPropertyChanged("mediatype_lookup");
					this.Onmediatype_lookupChanged();
				}
			}
		}
		
		[Column(Storage="_active", DbType="Bit NOT NULL")]
		public bool active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[Association(Name="media_media_link", Storage="_media_links", ThisKey="media_key", OtherKey="media_fkey")]
		public EntitySet<media_link> media_links
		{
			get
			{
				return this._media_links;
			}
			set
			{
				this._media_links.Assign(value);
			}
		}
		
		[Association(Name="lookup_media", Storage="_lookup", ThisKey="mediatype_lookup", OtherKey="lookup_key", IsForeignKey=true)]
		public lookup lookup
		{
			get
			{
				return this._lookup.Entity;
			}
			set
			{
				lookup previousValue = this._lookup.Entity;
				if (((previousValue != value) 
							|| (this._lookup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._lookup.Entity = null;
						previousValue.medias.Remove(this);
					}
					this._lookup.Entity = value;
					if ((value != null))
					{
						value.medias.Add(this);
						this._mediatype_lookup = value.lookup_key;
					}
					else
					{
						this._mediatype_lookup = default(int);
					}
					this.SendPropertyChanged("lookup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_media_links(media_link entity)
		{
			this.SendPropertyChanging();
			entity.media = this;
		}
		
		private void detach_media_links(media_link entity)
		{
			this.SendPropertyChanging();
			entity.media = null;
		}
	}
	
	[Table(Name="dbo.media_links")]
	public partial class media_link : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _medialink_key;
		
		private int _media_fkey;
		
		private int _link_fkey;
		
		private int _linktype_lookup;
		
		private EntityRef<lookup> _lookup;
		
		private EntityRef<media> _media;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onmedialink_keyChanging(int value);
    partial void Onmedialink_keyChanged();
    partial void Onmedia_fkeyChanging(int value);
    partial void Onmedia_fkeyChanged();
    partial void Onlink_fkeyChanging(int value);
    partial void Onlink_fkeyChanged();
    partial void Onlinktype_lookupChanging(int value);
    partial void Onlinktype_lookupChanged();
    #endregion
		
		public media_link()
		{
			this._lookup = default(EntityRef<lookup>);
			this._media = default(EntityRef<media>);
			OnCreated();
		}
		
		[Column(Storage="_medialink_key", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int medialink_key
		{
			get
			{
				return this._medialink_key;
			}
			set
			{
				if ((this._medialink_key != value))
				{
					this.Onmedialink_keyChanging(value);
					this.SendPropertyChanging();
					this._medialink_key = value;
					this.SendPropertyChanged("medialink_key");
					this.Onmedialink_keyChanged();
				}
			}
		}
		
		[Column(Storage="_media_fkey", DbType="Int NOT NULL")]
		public int media_fkey
		{
			get
			{
				return this._media_fkey;
			}
			set
			{
				if ((this._media_fkey != value))
				{
					if (this._media.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onmedia_fkeyChanging(value);
					this.SendPropertyChanging();
					this._media_fkey = value;
					this.SendPropertyChanged("media_fkey");
					this.Onmedia_fkeyChanged();
				}
			}
		}
		
		[Column(Storage="_link_fkey", DbType="Int NOT NULL")]
		public int link_fkey
		{
			get
			{
				return this._link_fkey;
			}
			set
			{
				if ((this._link_fkey != value))
				{
					this.Onlink_fkeyChanging(value);
					this.SendPropertyChanging();
					this._link_fkey = value;
					this.SendPropertyChanged("link_fkey");
					this.Onlink_fkeyChanged();
				}
			}
		}
		
		[Column(Storage="_linktype_lookup", DbType="Int NOT NULL")]
		public int linktype_lookup
		{
			get
			{
				return this._linktype_lookup;
			}
			set
			{
				if ((this._linktype_lookup != value))
				{
					if (this._lookup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onlinktype_lookupChanging(value);
					this.SendPropertyChanging();
					this._linktype_lookup = value;
					this.SendPropertyChanged("linktype_lookup");
					this.Onlinktype_lookupChanged();
				}
			}
		}
		
		[Association(Name="lookup_media_link", Storage="_lookup", ThisKey="linktype_lookup", OtherKey="lookup_key", IsForeignKey=true)]
		public lookup lookup
		{
			get
			{
				return this._lookup.Entity;
			}
			set
			{
				lookup previousValue = this._lookup.Entity;
				if (((previousValue != value) 
							|| (this._lookup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._lookup.Entity = null;
						previousValue.media_links.Remove(this);
					}
					this._lookup.Entity = value;
					if ((value != null))
					{
						value.media_links.Add(this);
						this._linktype_lookup = value.lookup_key;
					}
					else
					{
						this._linktype_lookup = default(int);
					}
					this.SendPropertyChanged("lookup");
				}
			}
		}
		
		[Association(Name="media_media_link", Storage="_media", ThisKey="media_fkey", OtherKey="media_key", IsForeignKey=true)]
		public media media
		{
			get
			{
				return this._media.Entity;
			}
			set
			{
				media previousValue = this._media.Entity;
				if (((previousValue != value) 
							|| (this._media.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._media.Entity = null;
						previousValue.media_links.Remove(this);
					}
					this._media.Entity = value;
					if ((value != null))
					{
						value.media_links.Add(this);
						this._media_fkey = value.media_key;
					}
					else
					{
						this._media_fkey = default(int);
					}
					this.SendPropertyChanged("media");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.NewsletterReciprients")]
	public partial class NewsletterReciprient : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _reciprient_key;
		
		private string _name;
		
		private string _email;
		
		private bool _active;
		
		private bool _confirmed;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onreciprient_keyChanging(int value);
    partial void Onreciprient_keyChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnactiveChanging(bool value);
    partial void OnactiveChanged();
    partial void OnconfirmedChanging(bool value);
    partial void OnconfirmedChanged();
    #endregion
		
		public NewsletterReciprient()
		{
			OnCreated();
		}
		
		[Column(Storage="_reciprient_key", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int reciprient_key
		{
			get
			{
				return this._reciprient_key;
			}
			set
			{
				if ((this._reciprient_key != value))
				{
					this.Onreciprient_keyChanging(value);
					this.SendPropertyChanging();
					this._reciprient_key = value;
					this.SendPropertyChanged("reciprient_key");
					this.Onreciprient_keyChanged();
				}
			}
		}
		
		[Column(Storage="_name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[Column(Storage="_email", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[Column(Storage="_active", DbType="Bit NOT NULL")]
		public bool active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[Column(Storage="_confirmed", DbType="Bit NOT NULL")]
		public bool confirmed
		{
			get
			{
				return this._confirmed;
			}
			set
			{
				if ((this._confirmed != value))
				{
					this.OnconfirmedChanging(value);
					this.SendPropertyChanging();
					this._confirmed = value;
					this.SendPropertyChanged("confirmed");
					this.OnconfirmedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Newsletters")]
	public partial class Newsletter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _newsletter_key;
		
		private string _subject;
		
		private string _body;
		
		private System.Nullable<System.DateTime> _date_sent;
		
		private System.DateTime _date_created;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onnewsletter_keyChanging(int value);
    partial void Onnewsletter_keyChanged();
    partial void OnsubjectChanging(string value);
    partial void OnsubjectChanged();
    partial void OnbodyChanging(string value);
    partial void OnbodyChanged();
    partial void Ondate_sentChanging(System.Nullable<System.DateTime> value);
    partial void Ondate_sentChanged();
    partial void Ondate_createdChanging(System.DateTime value);
    partial void Ondate_createdChanged();
    #endregion
		
		public Newsletter()
		{
			OnCreated();
		}
		
		[Column(Storage="_newsletter_key", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int newsletter_key
		{
			get
			{
				return this._newsletter_key;
			}
			set
			{
				if ((this._newsletter_key != value))
				{
					this.Onnewsletter_keyChanging(value);
					this.SendPropertyChanging();
					this._newsletter_key = value;
					this.SendPropertyChanged("newsletter_key");
					this.Onnewsletter_keyChanged();
				}
			}
		}
		
		[Column(Storage="_subject", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string subject
		{
			get
			{
				return this._subject;
			}
			set
			{
				if ((this._subject != value))
				{
					this.OnsubjectChanging(value);
					this.SendPropertyChanging();
					this._subject = value;
					this.SendPropertyChanged("subject");
					this.OnsubjectChanged();
				}
			}
		}
		
		[Column(Storage="_body", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string body
		{
			get
			{
				return this._body;
			}
			set
			{
				if ((this._body != value))
				{
					this.OnbodyChanging(value);
					this.SendPropertyChanging();
					this._body = value;
					this.SendPropertyChanged("body");
					this.OnbodyChanged();
				}
			}
		}
		
		[Column(Storage="_date_sent", DbType="DateTime")]
		public System.Nullable<System.DateTime> date_sent
		{
			get
			{
				return this._date_sent;
			}
			set
			{
				if ((this._date_sent != value))
				{
					this.Ondate_sentChanging(value);
					this.SendPropertyChanging();
					this._date_sent = value;
					this.SendPropertyChanged("date_sent");
					this.Ondate_sentChanged();
				}
			}
		}
		
		[Column(Storage="_date_created", DbType="DateTime", IsDbGenerated=true)]
		public System.DateTime date_created
		{
			get
			{
				return this._date_created;
			}
			set
			{
				if ((this._date_created != value))
				{
					this.Ondate_createdChanging(value);
					this.SendPropertyChanging();
					this._date_created = value;
					this.SendPropertyChanged("date_created");
					this.Ondate_createdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.projects")]
	public partial class project : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _project_key;
		
		private string _title;
		
		private string _description;
		
		private System.Nullable<System.DateTime> _start_date;
		
		private System.Nullable<System.DateTime> _end_date;
		
		private bool _active;
		
		private bool _include_in_rss;
		
		private string _photogallery_id;
		
		private string _video_id;
		
		private string _url;
		
		private EntitySet<testimony> _testimonies;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onproject_keyChanging(int value);
    partial void Onproject_keyChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void Onstart_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onstart_dateChanged();
    partial void Onend_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onend_dateChanged();
    partial void OnactiveChanging(bool value);
    partial void OnactiveChanged();
    partial void Oninclude_in_rssChanging(bool value);
    partial void Oninclude_in_rssChanged();
    partial void Onphotogallery_idChanging(string value);
    partial void Onphotogallery_idChanged();
    partial void Onvideo_idChanging(string value);
    partial void Onvideo_idChanged();
    partial void OnurlChanging(string value);
    partial void OnurlChanged();
    #endregion
		
		public project()
		{
			this._testimonies = new EntitySet<testimony>(new Action<testimony>(this.attach_testimonies), new Action<testimony>(this.detach_testimonies));
			OnCreated();
		}
		
		[Column(Storage="_project_key", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int project_key
		{
			get
			{
				return this._project_key;
			}
			set
			{
				if ((this._project_key != value))
				{
					this.Onproject_keyChanging(value);
					this.SendPropertyChanging();
					this._project_key = value;
					this.SendPropertyChanged("project_key");
					this.Onproject_keyChanged();
				}
			}
		}
		
		[Column(Storage="_title", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[Column(Storage="_description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_start_date", DbType="Date")]
		public System.Nullable<System.DateTime> start_date
		{
			get
			{
				return this._start_date;
			}
			set
			{
				if ((this._start_date != value))
				{
					this.Onstart_dateChanging(value);
					this.SendPropertyChanging();
					this._start_date = value;
					this.SendPropertyChanged("start_date");
					this.Onstart_dateChanged();
				}
			}
		}
		
		[Column(Storage="_end_date", DbType="Date")]
		public System.Nullable<System.DateTime> end_date
		{
			get
			{
				return this._end_date;
			}
			set
			{
				if ((this._end_date != value))
				{
					this.Onend_dateChanging(value);
					this.SendPropertyChanging();
					this._end_date = value;
					this.SendPropertyChanged("end_date");
					this.Onend_dateChanged();
				}
			}
		}
		
		[Column(Storage="_active", DbType="Bit NOT NULL")]
		public bool active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[Column(Storage="_include_in_rss", DbType="Bit NOT NULL")]
		public bool include_in_rss
		{
			get
			{
				return this._include_in_rss;
			}
			set
			{
				if ((this._include_in_rss != value))
				{
					this.Oninclude_in_rssChanging(value);
					this.SendPropertyChanging();
					this._include_in_rss = value;
					this.SendPropertyChanged("include_in_rss");
					this.Oninclude_in_rssChanged();
				}
			}
		}
		
		[Column(Storage="_photogallery_id", DbType="NVarChar(50)")]
		public string photogallery_id
		{
			get
			{
				return this._photogallery_id;
			}
			set
			{
				if ((this._photogallery_id != value))
				{
					this.Onphotogallery_idChanging(value);
					this.SendPropertyChanging();
					this._photogallery_id = value;
					this.SendPropertyChanged("photogallery_id");
					this.Onphotogallery_idChanged();
				}
			}
		}
		
		[Column(Storage="_video_id", DbType="NVarChar(50)")]
		public string video_id
		{
			get
			{
				return this._video_id;
			}
			set
			{
				if ((this._video_id != value))
				{
					this.Onvideo_idChanging(value);
					this.SendPropertyChanging();
					this._video_id = value;
					this.SendPropertyChanged("video_id");
					this.Onvideo_idChanged();
				}
			}
		}
		
		[Column(Storage="_url", DbType="NVarChar(MAX)")]
		public string url
		{
			get
			{
				return this._url;
			}
			set
			{
				if ((this._url != value))
				{
					this.OnurlChanging(value);
					this.SendPropertyChanging();
					this._url = value;
					this.SendPropertyChanged("url");
					this.OnurlChanged();
				}
			}
		}
		
		[Association(Name="project_testimony", Storage="_testimonies", ThisKey="project_key", OtherKey="project_fkey")]
		public EntitySet<testimony> testimonies
		{
			get
			{
				return this._testimonies;
			}
			set
			{
				this._testimonies.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_testimonies(testimony entity)
		{
			this.SendPropertyChanging();
			entity.project = this;
		}
		
		private void detach_testimonies(testimony entity)
		{
			this.SendPropertyChanging();
			entity.project = null;
		}
	}
	
	[Table(Name="dbo.pages")]
	public partial class page : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _page_key;
		
		private System.Nullable<int> _page_fkey;
		
		private string _pageid;
		
		private string _navtitle;
		
		private System.Nullable<char> _accesskey;
		
		private string _metadescription;
		
		private string _metakeywords;
		
		private string _title;
		
		private string _body;
		
		private string _thumbnailimage;
		
		private System.Nullable<bool> _showinnav;
		
		private System.Nullable<bool> _showinfeaturednav;
		
		private System.Nullable<bool> _showonhome;
		
		private System.Nullable<bool> _showinfooter;
		
		private System.Nullable<bool> _active;
		
		private System.Nullable<int> _sortorder;
		
		private string _linkurl;
		
		private System.DateTime _lastmodified = default(System.DateTime);
		
		private string _page_url;
		
		private string _password;
		
		private bool _passwordprotect;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onpage_keyChanging(int value);
    partial void Onpage_keyChanged();
    partial void Onpage_fkeyChanging(System.Nullable<int> value);
    partial void Onpage_fkeyChanged();
    partial void OnpageidChanging(string value);
    partial void OnpageidChanged();
    partial void OnnavtitleChanging(string value);
    partial void OnnavtitleChanged();
    partial void OnaccesskeyChanging(System.Nullable<char> value);
    partial void OnaccesskeyChanged();
    partial void OnmetadescriptionChanging(string value);
    partial void OnmetadescriptionChanged();
    partial void OnmetakeywordsChanging(string value);
    partial void OnmetakeywordsChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OnbodyChanging(string value);
    partial void OnbodyChanged();
    partial void OnthumbnailimageChanging(string value);
    partial void OnthumbnailimageChanged();
    partial void OnshowinnavChanging(System.Nullable<bool> value);
    partial void OnshowinnavChanged();
    partial void OnshowinfeaturednavChanging(System.Nullable<bool> value);
    partial void OnshowinfeaturednavChanged();
    partial void OnshowonhomeChanging(System.Nullable<bool> value);
    partial void OnshowonhomeChanged();
    partial void OnshowinfooterChanging(System.Nullable<bool> value);
    partial void OnshowinfooterChanged();
    partial void OnactiveChanging(System.Nullable<bool> value);
    partial void OnactiveChanged();
    partial void OnsortorderChanging(System.Nullable<int> value);
    partial void OnsortorderChanged();
    partial void OnlinkurlChanging(string value);
    partial void OnlinkurlChanged();
    partial void Onpage_urlChanging(string value);
    partial void Onpage_urlChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnpasswordprotectChanging(bool value);
    partial void OnpasswordprotectChanged();
    #endregion
		
		public page()
		{
			OnCreated();
		}
		
		[Column(Storage="_page_key", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int page_key
		{
			get
			{
				return this._page_key;
			}
			set
			{
				if ((this._page_key != value))
				{
					this.Onpage_keyChanging(value);
					this.SendPropertyChanging();
					this._page_key = value;
					this.SendPropertyChanged("page_key");
					this.Onpage_keyChanged();
				}
			}
		}
		
		[Column(Storage="_page_fkey", DbType="Int")]
		public System.Nullable<int> page_fkey
		{
			get
			{
				return this._page_fkey;
			}
			set
			{
				if ((this._page_fkey != value))
				{
					this.Onpage_fkeyChanging(value);
					this.SendPropertyChanging();
					this._page_fkey = value;
					this.SendPropertyChanged("page_fkey");
					this.Onpage_fkeyChanged();
				}
			}
		}
		
		[Column(Storage="_pageid", DbType="NVarChar(50)")]
		public string pageid
		{
			get
			{
				return this._pageid;
			}
			set
			{
				if ((this._pageid != value))
				{
					this.OnpageidChanging(value);
					this.SendPropertyChanging();
					this._pageid = value;
					this.SendPropertyChanged("pageid");
					this.OnpageidChanged();
				}
			}
		}
		
		[Column(Storage="_navtitle", DbType="NVarChar(50)")]
		public string navtitle
		{
			get
			{
				return this._navtitle;
			}
			set
			{
				if ((this._navtitle != value))
				{
					this.OnnavtitleChanging(value);
					this.SendPropertyChanging();
					this._navtitle = value;
					this.SendPropertyChanged("navtitle");
					this.OnnavtitleChanged();
				}
			}
		}
		
		[Column(Storage="_accesskey", DbType="NChar(1)")]
		public System.Nullable<char> accesskey
		{
			get
			{
				return this._accesskey;
			}
			set
			{
				if ((this._accesskey != value))
				{
					this.OnaccesskeyChanging(value);
					this.SendPropertyChanging();
					this._accesskey = value;
					this.SendPropertyChanged("accesskey");
					this.OnaccesskeyChanged();
				}
			}
		}
		
		[Column(Storage="_metadescription", DbType="NVarChar(MAX)")]
		public string metadescription
		{
			get
			{
				return this._metadescription;
			}
			set
			{
				if ((this._metadescription != value))
				{
					this.OnmetadescriptionChanging(value);
					this.SendPropertyChanging();
					this._metadescription = value;
					this.SendPropertyChanged("metadescription");
					this.OnmetadescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_metakeywords", DbType="NVarChar(MAX)")]
		public string metakeywords
		{
			get
			{
				return this._metakeywords;
			}
			set
			{
				if ((this._metakeywords != value))
				{
					this.OnmetakeywordsChanging(value);
					this.SendPropertyChanging();
					this._metakeywords = value;
					this.SendPropertyChanged("metakeywords");
					this.OnmetakeywordsChanged();
				}
			}
		}
		
		[Column(Storage="_title", DbType="NVarChar(50)")]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[Column(Storage="_body", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string body
		{
			get
			{
				return this._body;
			}
			set
			{
				if ((this._body != value))
				{
					this.OnbodyChanging(value);
					this.SendPropertyChanging();
					this._body = value;
					this.SendPropertyChanged("body");
					this.OnbodyChanged();
				}
			}
		}
		
		[Column(Storage="_thumbnailimage", DbType="NVarChar(128)")]
		public string thumbnailimage
		{
			get
			{
				return this._thumbnailimage;
			}
			set
			{
				if ((this._thumbnailimage != value))
				{
					this.OnthumbnailimageChanging(value);
					this.SendPropertyChanging();
					this._thumbnailimage = value;
					this.SendPropertyChanged("thumbnailimage");
					this.OnthumbnailimageChanged();
				}
			}
		}
		
		[Column(Storage="_showinnav", DbType="Bit")]
		public System.Nullable<bool> showinnav
		{
			get
			{
				return this._showinnav;
			}
			set
			{
				if ((this._showinnav != value))
				{
					this.OnshowinnavChanging(value);
					this.SendPropertyChanging();
					this._showinnav = value;
					this.SendPropertyChanged("showinnav");
					this.OnshowinnavChanged();
				}
			}
		}
		
		[Column(Storage="_showinfeaturednav", DbType="Bit")]
		public System.Nullable<bool> showinfeaturednav
		{
			get
			{
				return this._showinfeaturednav;
			}
			set
			{
				if ((this._showinfeaturednav != value))
				{
					this.OnshowinfeaturednavChanging(value);
					this.SendPropertyChanging();
					this._showinfeaturednav = value;
					this.SendPropertyChanged("showinfeaturednav");
					this.OnshowinfeaturednavChanged();
				}
			}
		}
		
		[Column(Storage="_showonhome", DbType="Bit")]
		public System.Nullable<bool> showonhome
		{
			get
			{
				return this._showonhome;
			}
			set
			{
				if ((this._showonhome != value))
				{
					this.OnshowonhomeChanging(value);
					this.SendPropertyChanging();
					this._showonhome = value;
					this.SendPropertyChanged("showonhome");
					this.OnshowonhomeChanged();
				}
			}
		}
		
		[Column(Storage="_showinfooter", DbType="Bit")]
		public System.Nullable<bool> showinfooter
		{
			get
			{
				return this._showinfooter;
			}
			set
			{
				if ((this._showinfooter != value))
				{
					this.OnshowinfooterChanging(value);
					this.SendPropertyChanging();
					this._showinfooter = value;
					this.SendPropertyChanged("showinfooter");
					this.OnshowinfooterChanged();
				}
			}
		}
		
		[Column(Storage="_active", DbType="Bit")]
		public System.Nullable<bool> active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[Column(Storage="_sortorder", DbType="Int")]
		public System.Nullable<int> sortorder
		{
			get
			{
				return this._sortorder;
			}
			set
			{
				if ((this._sortorder != value))
				{
					this.OnsortorderChanging(value);
					this.SendPropertyChanging();
					this._sortorder = value;
					this.SendPropertyChanged("sortorder");
					this.OnsortorderChanged();
				}
			}
		}
		
		[Column(Storage="_linkurl", DbType="NVarChar(50)")]
		public string linkurl
		{
			get
			{
				return this._linkurl;
			}
			set
			{
				if ((this._linkurl != value))
				{
					this.OnlinkurlChanging(value);
					this.SendPropertyChanging();
					this._linkurl = value;
					this.SendPropertyChanged("linkurl");
					this.OnlinkurlChanged();
				}
			}
		}
		
		[Column(Storage="_lastmodified", DbType="DateTime NOT NULL", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.DateTime lastmodified
		{
			get
			{
				return this._lastmodified;
			}
		}
		
		[Column(Storage="_page_url", DbType="NVarChar(MAX)")]
		public string page_url
		{
			get
			{
				return this._page_url;
			}
			set
			{
				if ((this._page_url != value))
				{
					this.Onpage_urlChanging(value);
					this.SendPropertyChanging();
					this._page_url = value;
					this.SendPropertyChanged("page_url");
					this.Onpage_urlChanged();
				}
			}
		}
		
		[Column(Storage="_password", DbType="nvarchar(12)")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[Column(Storage="_passwordprotect", DbType="bit")]
		public bool passwordprotect
		{
			get
			{
				return this._passwordprotect;
			}
			set
			{
				if ((this._passwordprotect != value))
				{
					this.OnpasswordprotectChanging(value);
					this.SendPropertyChanging();
					this._passwordprotect = value;
					this.SendPropertyChanged("passwordprotect");
					this.OnpasswordprotectChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.articles")]
	public partial class article : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _article_key;
		
		private string _title;
		
		private string _body;
		
		private bool _showonhome;
		
		private string _shortdescription;
		
		private string _thumbnailimage;
		
		private bool _active;
		
		private int _sortorder;
		
		private System.Nullable<System.DateTime> _start_date;
		
		private System.Nullable<System.DateTime> _end_date;
		
		private bool _include_in_feed;
		
		private string _url;
		
		private string _virtualurl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onarticle_keyChanging(int value);
    partial void Onarticle_keyChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OnbodyChanging(string value);
    partial void OnbodyChanged();
    partial void OnshowonhomeChanging(bool value);
    partial void OnshowonhomeChanged();
    partial void OnshortdescriptionChanging(string value);
    partial void OnshortdescriptionChanged();
    partial void OnthumbnailimageChanging(string value);
    partial void OnthumbnailimageChanged();
    partial void OnactiveChanging(bool value);
    partial void OnactiveChanged();
    partial void OnsortorderChanging(int value);
    partial void OnsortorderChanged();
    partial void Onstart_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onstart_dateChanged();
    partial void Onend_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onend_dateChanged();
    partial void Oninclude_in_feedChanging(bool value);
    partial void Oninclude_in_feedChanged();
    partial void OnurlChanging(string value);
    partial void OnurlChanged();
    partial void OnvirtualurlChanging(string value);
    partial void OnvirtualurlChanged();
    #endregion
		
		public article()
		{
			OnCreated();
		}
		
		[Column(Storage="_article_key", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int article_key
		{
			get
			{
				return this._article_key;
			}
			set
			{
				if ((this._article_key != value))
				{
					this.Onarticle_keyChanging(value);
					this.SendPropertyChanging();
					this._article_key = value;
					this.SendPropertyChanged("article_key");
					this.Onarticle_keyChanged();
				}
			}
		}
		
		[Column(Storage="_title", DbType="NVarChar(50)")]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[Column(Storage="_body", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string body
		{
			get
			{
				return this._body;
			}
			set
			{
				if ((this._body != value))
				{
					this.OnbodyChanging(value);
					this.SendPropertyChanging();
					this._body = value;
					this.SendPropertyChanged("body");
					this.OnbodyChanged();
				}
			}
		}
		
		[Column(Storage="_showonhome", DbType="Bit NOT NULL")]
		public bool showonhome
		{
			get
			{
				return this._showonhome;
			}
			set
			{
				if ((this._showonhome != value))
				{
					this.OnshowonhomeChanging(value);
					this.SendPropertyChanging();
					this._showonhome = value;
					this.SendPropertyChanged("showonhome");
					this.OnshowonhomeChanged();
				}
			}
		}
		
		[Column(Storage="_shortdescription", DbType="NVarChar(MAX)")]
		public string shortdescription
		{
			get
			{
				return this._shortdescription;
			}
			set
			{
				if ((this._shortdescription != value))
				{
					this.OnshortdescriptionChanging(value);
					this.SendPropertyChanging();
					this._shortdescription = value;
					this.SendPropertyChanged("shortdescription");
					this.OnshortdescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_thumbnailimage", DbType="NVarChar(50)")]
		public string thumbnailimage
		{
			get
			{
				return this._thumbnailimage;
			}
			set
			{
				if ((this._thumbnailimage != value))
				{
					this.OnthumbnailimageChanging(value);
					this.SendPropertyChanging();
					this._thumbnailimage = value;
					this.SendPropertyChanged("thumbnailimage");
					this.OnthumbnailimageChanged();
				}
			}
		}
		
		[Column(Storage="_active", DbType="Bit NOT NULL")]
		public bool active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[Column(Storage="_sortorder", DbType="Int NOT NULL")]
		public int sortorder
		{
			get
			{
				return this._sortorder;
			}
			set
			{
				if ((this._sortorder != value))
				{
					this.OnsortorderChanging(value);
					this.SendPropertyChanging();
					this._sortorder = value;
					this.SendPropertyChanged("sortorder");
					this.OnsortorderChanged();
				}
			}
		}
		
		[Column(Storage="_start_date", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> start_date
		{
			get
			{
				return this._start_date;
			}
			set
			{
				if ((this._start_date != value))
				{
					this.Onstart_dateChanging(value);
					this.SendPropertyChanging();
					this._start_date = value;
					this.SendPropertyChanged("start_date");
					this.Onstart_dateChanged();
				}
			}
		}
		
		[Column(Storage="_end_date", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> end_date
		{
			get
			{
				return this._end_date;
			}
			set
			{
				if ((this._end_date != value))
				{
					this.Onend_dateChanging(value);
					this.SendPropertyChanging();
					this._end_date = value;
					this.SendPropertyChanged("end_date");
					this.Onend_dateChanged();
				}
			}
		}
		
		[Column(Storage="_include_in_feed", DbType="Bit NOT NULL")]
		public bool include_in_feed
		{
			get
			{
				return this._include_in_feed;
			}
			set
			{
				if ((this._include_in_feed != value))
				{
					this.Oninclude_in_feedChanging(value);
					this.SendPropertyChanging();
					this._include_in_feed = value;
					this.SendPropertyChanged("include_in_feed");
					this.Oninclude_in_feedChanged();
				}
			}
		}
		
		[Column(Storage="_url", DbType="NVarChar(MAX)")]
		public string url
		{
			get
			{
				return this._url;
			}
			set
			{
				if ((this._url != value))
				{
					this.OnurlChanging(value);
					this.SendPropertyChanging();
					this._url = value;
					this.SendPropertyChanged("url");
					this.OnurlChanged();
				}
			}
		}
		
		[Column(Storage="_virtualurl", DbType="NVarChar(MAX)")]
		public string virtualurl
		{
			get
			{
				return this._virtualurl;
			}
			set
			{
				if ((this._virtualurl != value))
				{
					this.OnvirtualurlChanging(value);
					this.SendPropertyChanging();
					this._virtualurl = value;
					this.SendPropertyChanged("virtualurl");
					this.OnvirtualurlChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.offers")]
	public partial class offer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _offer_key;
		
		private string _title;
		
		private string _description;
		
		private System.Nullable<System.DateTime> _offer_start;
		
		private System.Nullable<System.DateTime> _offer_end;
		
		private bool _active;
		
		private bool _showonhome;
		
		private bool _showinfeed;
		
		private string _url;
		
		private string _shortdescription;
		
		private string _thumbnailimage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onoffer_keyChanging(int value);
    partial void Onoffer_keyChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void Onoffer_startChanging(System.Nullable<System.DateTime> value);
    partial void Onoffer_startChanged();
    partial void Onoffer_endChanging(System.Nullable<System.DateTime> value);
    partial void Onoffer_endChanged();
    partial void OnactiveChanging(bool value);
    partial void OnactiveChanged();
    partial void OnshowonhomeChanging(bool value);
    partial void OnshowonhomeChanged();
    partial void OnshowinfeedChanging(bool value);
    partial void OnshowinfeedChanged();
    partial void OnurlChanging(string value);
    partial void OnurlChanged();
    partial void OnshortdescriptionChanging(string value);
    partial void OnshortdescriptionChanged();
    partial void OnthumbnailimageChanging(string value);
    partial void OnthumbnailimageChanged();
    #endregion
		
		public offer()
		{
			OnCreated();
		}
		
		[Column(Storage="_offer_key", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int offer_key
		{
			get
			{
				return this._offer_key;
			}
			set
			{
				if ((this._offer_key != value))
				{
					this.Onoffer_keyChanging(value);
					this.SendPropertyChanging();
					this._offer_key = value;
					this.SendPropertyChanged("offer_key");
					this.Onoffer_keyChanged();
				}
			}
		}
		
		[Column(Storage="_title", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[Column(Storage="_description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_offer_start", DbType="Date")]
		public System.Nullable<System.DateTime> offer_start
		{
			get
			{
				return this._offer_start;
			}
			set
			{
				if ((this._offer_start != value))
				{
					this.Onoffer_startChanging(value);
					this.SendPropertyChanging();
					this._offer_start = value;
					this.SendPropertyChanged("offer_start");
					this.Onoffer_startChanged();
				}
			}
		}
		
		[Column(Storage="_offer_end", DbType="Date")]
		public System.Nullable<System.DateTime> offer_end
		{
			get
			{
				return this._offer_end;
			}
			set
			{
				if ((this._offer_end != value))
				{
					this.Onoffer_endChanging(value);
					this.SendPropertyChanging();
					this._offer_end = value;
					this.SendPropertyChanged("offer_end");
					this.Onoffer_endChanged();
				}
			}
		}
		
		[Column(Storage="_active", DbType="Bit NOT NULL")]
		public bool active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[Column(Storage="_showonhome", DbType="Bit NOT NULL")]
		public bool showonhome
		{
			get
			{
				return this._showonhome;
			}
			set
			{
				if ((this._showonhome != value))
				{
					this.OnshowonhomeChanging(value);
					this.SendPropertyChanging();
					this._showonhome = value;
					this.SendPropertyChanged("showonhome");
					this.OnshowonhomeChanged();
				}
			}
		}
		
		[Column(Storage="_showinfeed", DbType="Bit NOT NULL")]
		public bool showinfeed
		{
			get
			{
				return this._showinfeed;
			}
			set
			{
				if ((this._showinfeed != value))
				{
					this.OnshowinfeedChanging(value);
					this.SendPropertyChanging();
					this._showinfeed = value;
					this.SendPropertyChanged("showinfeed");
					this.OnshowinfeedChanged();
				}
			}
		}
		
		[Column(Storage="_url", DbType="NVarChar(MAX)")]
		public string url
		{
			get
			{
				return this._url;
			}
			set
			{
				if ((this._url != value))
				{
					this.OnurlChanging(value);
					this.SendPropertyChanging();
					this._url = value;
					this.SendPropertyChanged("url");
					this.OnurlChanged();
				}
			}
		}
		
		[Column(Storage="_shortdescription", DbType="NVarChar(MAX)")]
		public string shortdescription
		{
			get
			{
				return this._shortdescription;
			}
			set
			{
				if ((this._shortdescription != value))
				{
					this.OnshortdescriptionChanging(value);
					this.SendPropertyChanging();
					this._shortdescription = value;
					this.SendPropertyChanged("shortdescription");
					this.OnshortdescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_thumbnailimage", DbType="NVarChar(50)")]
		public string thumbnailimage
		{
			get
			{
				return this._thumbnailimage;
			}
			set
			{
				if ((this._thumbnailimage != value))
				{
					this.OnthumbnailimageChanging(value);
					this.SendPropertyChanging();
					this._thumbnailimage = value;
					this.SendPropertyChanged("thumbnailimage");
					this.OnthumbnailimageChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
