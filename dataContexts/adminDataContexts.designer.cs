#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30128.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace mjjames.AdminSystem.DataContexts
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="abellandscapes.co.uk-multisite")]
	public partial class AdminDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertaspnet_Membership(mjjames.AdminSystem.DataEntities.aspnet_Membership instance);
    partial void Updateaspnet_Membership(mjjames.AdminSystem.DataEntities.aspnet_Membership instance);
    partial void Deleteaspnet_Membership(mjjames.AdminSystem.DataEntities.aspnet_Membership instance);
    partial void Insertaspnet_UsersInRole(mjjames.AdminSystem.DataEntities.aspnet_UsersInRole instance);
    partial void Updateaspnet_UsersInRole(mjjames.AdminSystem.DataEntities.aspnet_UsersInRole instance);
    partial void Deleteaspnet_UsersInRole(mjjames.AdminSystem.DataEntities.aspnet_UsersInRole instance);
    partial void Insertaspnet_User(mjjames.AdminSystem.DataEntities.aspnet_User instance);
    partial void Updateaspnet_User(mjjames.AdminSystem.DataEntities.aspnet_User instance);
    partial void Deleteaspnet_User(mjjames.AdminSystem.DataEntities.aspnet_User instance);
    partial void Insertaspnet_Role(mjjames.AdminSystem.DataEntities.aspnet_Role instance);
    partial void Updateaspnet_Role(mjjames.AdminSystem.DataEntities.aspnet_Role instance);
    partial void Deleteaspnet_Role(mjjames.AdminSystem.DataEntities.aspnet_Role instance);
    partial void InsertDonatee(mjjames.AdminSystem.DataEntities.Donatee instance);
    partial void UpdateDonatee(mjjames.AdminSystem.DataEntities.Donatee instance);
    partial void DeleteDonatee(mjjames.AdminSystem.DataEntities.Donatee instance);
    partial void InsertDonation(mjjames.AdminSystem.DataEntities.Donation instance);
    partial void UpdateDonation(mjjames.AdminSystem.DataEntities.Donation instance);
    partial void DeleteDonation(mjjames.AdminSystem.DataEntities.Donation instance);
    partial void InsertComment(mjjames.AdminSystem.DataEntities.Comment instance);
    partial void UpdateComment(mjjames.AdminSystem.DataEntities.Comment instance);
    partial void DeleteComment(mjjames.AdminSystem.DataEntities.Comment instance);
    partial void Insertarticle(mjjames.AdminSystem.DataEntities.article instance);
    partial void Updatearticle(mjjames.AdminSystem.DataEntities.article instance);
    partial void Deletearticle(mjjames.AdminSystem.DataEntities.article instance);
    partial void Insertbanner(mjjames.AdminSystem.DataEntities.banner instance);
    partial void Updatebanner(mjjames.AdminSystem.DataEntities.banner instance);
    partial void Deletebanner(mjjames.AdminSystem.DataEntities.banner instance);
    partial void Insertlookup(mjjames.AdminSystem.DataEntities.lookup instance);
    partial void Updatelookup(mjjames.AdminSystem.DataEntities.lookup instance);
    partial void Deletelookup(mjjames.AdminSystem.DataEntities.lookup instance);
    partial void Insertmedia(mjjames.AdminSystem.DataEntities.media instance);
    partial void Updatemedia(mjjames.AdminSystem.DataEntities.media instance);
    partial void Deletemedia(mjjames.AdminSystem.DataEntities.media instance);
    partial void Insertmedia_link(mjjames.AdminSystem.DataEntities.media_link instance);
    partial void Updatemedia_link(mjjames.AdminSystem.DataEntities.media_link instance);
    partial void Deletemedia_link(mjjames.AdminSystem.DataEntities.media_link instance);
    partial void InsertNewsletterReciprient(mjjames.AdminSystem.DataEntities.NewsletterReciprient instance);
    partial void UpdateNewsletterReciprient(mjjames.AdminSystem.DataEntities.NewsletterReciprient instance);
    partial void DeleteNewsletterReciprient(mjjames.AdminSystem.DataEntities.NewsletterReciprient instance);
    partial void InsertNewsletter(mjjames.AdminSystem.DataEntities.Newsletter instance);
    partial void UpdateNewsletter(mjjames.AdminSystem.DataEntities.Newsletter instance);
    partial void DeleteNewsletter(mjjames.AdminSystem.DataEntities.Newsletter instance);
    partial void Insertoffer(mjjames.AdminSystem.DataEntities.offer instance);
    partial void Updateoffer(mjjames.AdminSystem.DataEntities.offer instance);
    partial void Deleteoffer(mjjames.AdminSystem.DataEntities.offer instance);
    partial void Insertpage(mjjames.AdminSystem.DataEntities.page instance);
    partial void Updatepage(mjjames.AdminSystem.DataEntities.page instance);
    partial void Deletepage(mjjames.AdminSystem.DataEntities.page instance);
    partial void Insertproject(mjjames.AdminSystem.DataEntities.project instance);
    partial void Updateproject(mjjames.AdminSystem.DataEntities.project instance);
    partial void Deleteproject(mjjames.AdminSystem.DataEntities.project instance);
    partial void Insertsite_user(mjjames.AdminSystem.DataEntities.site_user instance);
    partial void Updatesite_user(mjjames.AdminSystem.DataEntities.site_user instance);
    partial void Deletesite_user(mjjames.AdminSystem.DataEntities.site_user instance);
    partial void Insertsite(mjjames.AdminSystem.DataEntities.site instance);
    partial void Updatesite(mjjames.AdminSystem.DataEntities.site instance);
    partial void Deletesite(mjjames.AdminSystem.DataEntities.site instance);
    partial void Inserttestimony(mjjames.AdminSystem.DataEntities.testimony instance);
    partial void Updatetestimony(mjjames.AdminSystem.DataEntities.testimony instance);
    partial void Deletetestimony(mjjames.AdminSystem.DataEntities.testimony instance);
    partial void Insertkeyvalue(mjjames.AdminSystem.DataEntities.keyvalue instance);
    partial void Updatekeyvalue(mjjames.AdminSystem.DataEntities.keyvalue instance);
    partial void Deletekeyvalue(mjjames.AdminSystem.DataEntities.keyvalue instance);
    partial void Insertmarketingsite(mjjames.AdminSystem.DataEntities.marketingsite instance);
    partial void Updatemarketingsite(mjjames.AdminSystem.DataEntities.marketingsite instance);
    partial void Deletemarketingsite(mjjames.AdminSystem.DataEntities.marketingsite instance);
    #endregion
		
		public AdminDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["abellandscapes_co_uk_multisiteConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public AdminDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AdminDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AdminDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AdminDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<mjjames.AdminSystem.DataEntities.vw_aspnet_MembershipUser> vw_aspnet_MembershipUsers
		{
			get
			{
				return this.GetTable<mjjames.AdminSystem.DataEntities.vw_aspnet_MembershipUser>();
			}
		}
		
		public System.Data.Linq.Table<mjjames.AdminSystem.DataEntities.vw_aspnet_Role> vw_aspnet_Roles
		{
			get
			{
				return this.GetTable<mjjames.AdminSystem.DataEntities.vw_aspnet_Role>();
			}
		}
		
		public System.Data.Linq.Table<mjjames.AdminSystem.DataEntities.vw_aspnet_UsersInRole> vw_aspnet_UsersInRoles
		{
			get
			{
				return this.GetTable<mjjames.AdminSystem.DataEntities.vw_aspnet_UsersInRole>();
			}
		}
		
		public System.Data.Linq.Table<mjjames.AdminSystem.DataEntities.vw_aspnet_Application> vw_aspnet_Applications
		{
			get
			{
				return this.GetTable<mjjames.AdminSystem.DataEntities.vw_aspnet_Application>();
			}
		}
		
		public System.Data.Linq.Table<mjjames.AdminSystem.DataEntities.aspnet_Membership> aspnet_Memberships
		{
			get
			{
				return this.GetTable<mjjames.AdminSystem.DataEntities.aspnet_Membership>();
			}
		}
		
		public System.Data.Linq.Table<mjjames.AdminSystem.DataEntities.aspnet_UsersInRole> aspnet_UsersInRoles
		{
			get
			{
				return this.GetTable<mjjames.AdminSystem.DataEntities.aspnet_UsersInRole>();
			}
		}
		
		public System.Data.Linq.Table<mjjames.AdminSystem.DataEntities.aspnet_User> aspnet_Users
		{
			get
			{
				return this.GetTable<mjjames.AdminSystem.DataEntities.aspnet_User>();
			}
		}
		
		public System.Data.Linq.Table<mjjames.AdminSystem.DataEntities.aspnet_Role> aspnet_Roles
		{
			get
			{
				return this.GetTable<mjjames.AdminSystem.DataEntities.aspnet_Role>();
			}
		}
		
		public System.Data.Linq.Table<mjjames.AdminSystem.DataEntities.Donatee> Donatees
		{
			get
			{
				return this.GetTable<mjjames.AdminSystem.DataEntities.Donatee>();
			}
		}
		
		public System.Data.Linq.Table<mjjames.AdminSystem.DataEntities.Donation> Donations
		{
			get
			{
				return this.GetTable<mjjames.AdminSystem.DataEntities.Donation>();
			}
		}
		
		public System.Data.Linq.Table<mjjames.AdminSystem.DataEntities.Comment> Comments
		{
			get
			{
				return this.GetTable<mjjames.AdminSystem.DataEntities.Comment>();
			}
		}
		
		public System.Data.Linq.Table<mjjames.AdminSystem.DataEntities.article> articles
		{
			get
			{
				return this.GetTable<mjjames.AdminSystem.DataEntities.article>();
			}
		}
		
		public System.Data.Linq.Table<mjjames.AdminSystem.DataEntities.banner> banners
		{
			get
			{
				return this.GetTable<mjjames.AdminSystem.DataEntities.banner>();
			}
		}
		
		public System.Data.Linq.Table<mjjames.AdminSystem.DataEntities.lookup> lookups
		{
			get
			{
				return this.GetTable<mjjames.AdminSystem.DataEntities.lookup>();
			}
		}
		
		public System.Data.Linq.Table<mjjames.AdminSystem.DataEntities.media> medias
		{
			get
			{
				return this.GetTable<mjjames.AdminSystem.DataEntities.media>();
			}
		}
		
		public System.Data.Linq.Table<mjjames.AdminSystem.DataEntities.media_link> media_links
		{
			get
			{
				return this.GetTable<mjjames.AdminSystem.DataEntities.media_link>();
			}
		}
		
		public System.Data.Linq.Table<mjjames.AdminSystem.DataEntities.NewsletterReciprient> NewsletterReciprients
		{
			get
			{
				return this.GetTable<mjjames.AdminSystem.DataEntities.NewsletterReciprient>();
			}
		}
		
		public System.Data.Linq.Table<mjjames.AdminSystem.DataEntities.Newsletter> Newsletters
		{
			get
			{
				return this.GetTable<mjjames.AdminSystem.DataEntities.Newsletter>();
			}
		}
		
		public System.Data.Linq.Table<mjjames.AdminSystem.DataEntities.offer> offers
		{
			get
			{
				return this.GetTable<mjjames.AdminSystem.DataEntities.offer>();
			}
		}
		
		public System.Data.Linq.Table<mjjames.AdminSystem.DataEntities.page> pages
		{
			get
			{
				return this.GetTable<mjjames.AdminSystem.DataEntities.page>();
			}
		}
		
		public System.Data.Linq.Table<mjjames.AdminSystem.DataEntities.project> projects
		{
			get
			{
				return this.GetTable<mjjames.AdminSystem.DataEntities.project>();
			}
		}
		
		public System.Data.Linq.Table<mjjames.AdminSystem.DataEntities.site_user> site_users
		{
			get
			{
				return this.GetTable<mjjames.AdminSystem.DataEntities.site_user>();
			}
		}
		
		public System.Data.Linq.Table<mjjames.AdminSystem.DataEntities.site> sites
		{
			get
			{
				return this.GetTable<mjjames.AdminSystem.DataEntities.site>();
			}
		}
		
		public System.Data.Linq.Table<mjjames.AdminSystem.DataEntities.testimony> testimonies
		{
			get
			{
				return this.GetTable<mjjames.AdminSystem.DataEntities.testimony>();
			}
		}
		
		public System.Data.Linq.Table<mjjames.AdminSystem.DataEntities.keyvalue> keyvalues
		{
			get
			{
				return this.GetTable<mjjames.AdminSystem.DataEntities.keyvalue>();
			}
		}
		
		public System.Data.Linq.Table<mjjames.AdminSystem.DataEntities.marketingsite> marketingsites
		{
			get
			{
				return this.GetTable<mjjames.AdminSystem.DataEntities.marketingsite>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.getFeatured")]
		public int getFeatured([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> maxnumber, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="TinyInt")] System.Nullable<byte> randomize)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), maxnumber, randomize);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.proc_GetSiteMap")]
		public int proc_GetSiteMap([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string filter, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string urlprefix, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> urlwriting)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), filter, urlprefix, urlwriting);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.aspnet_Membership_UnlockUser")]
		public int aspnet_Membership_UnlockUser([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ApplicationName", DbType="NVarChar(256)")] string applicationName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserName", DbType="NVarChar(256)")] string userName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), applicationName, userName);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.aspnet_UsersInRoles_AddUsersToRoles")]
		public ISingleResult<mjjames.AdminSystem.DataEntities.aspnet_UsersInRoles_AddUsersToRolesResult> aspnet_UsersInRoles_AddUsersToRoles([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ApplicationName", DbType="NVarChar(256)")] string applicationName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserNames", DbType="NVarChar(4000)")] string userNames, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoleNames", DbType="NVarChar(4000)")] string roleNames, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CurrentTimeUtc", DbType="DateTime")] System.Nullable<System.DateTime> currentTimeUtc)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), applicationName, userNames, roleNames, currentTimeUtc);
			return ((ISingleResult<mjjames.AdminSystem.DataEntities.aspnet_UsersInRoles_AddUsersToRolesResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.aspnet_UsersInRoles_RemoveUsersFromRoles")]
		public ISingleResult<mjjames.AdminSystem.DataEntities.aspnet_UsersInRoles_RemoveUsersFromRolesResult> aspnet_UsersInRoles_RemoveUsersFromRoles([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ApplicationName", DbType="NVarChar(256)")] string applicationName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserNames", DbType="NVarChar(4000)")] string userNames, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoleNames", DbType="NVarChar(4000)")] string roleNames)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), applicationName, userNames, roleNames);
			return ((ISingleResult<mjjames.AdminSystem.DataEntities.aspnet_UsersInRoles_RemoveUsersFromRolesResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.aspnet_Membership_GetAllUsers")]
		public int aspnet_Membership_GetAllUsers([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ApplicationName", DbType="NVarChar(256)")] string applicationName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PageIndex", DbType="Int")] System.Nullable<int> pageIndex, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PageSize", DbType="Int")] System.Nullable<int> pageSize)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), applicationName, pageIndex, pageSize);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.aspnet_Membership_SetPassword")]
		public int aspnet_Membership_SetPassword([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ApplicationName", DbType="NVarChar(256)")] string applicationName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserName", DbType="NVarChar(256)")] string userName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="NewPassword", DbType="NVarChar(128)")] string newPassword, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PasswordSalt", DbType="NVarChar(128)")] string passwordSalt, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CurrentTimeUtc", DbType="DateTime")] System.Nullable<System.DateTime> currentTimeUtc, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PasswordFormat", DbType="Int")] System.Nullable<int> passwordFormat)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), applicationName, userName, newPassword, passwordSalt, currentTimeUtc, passwordFormat);
			return ((int)(result.ReturnValue));
		}
	}
}
namespace mjjames.AdminSystem.DataEntities
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vw_aspnet_MembershipUsers")]
	public partial class vw_aspnet_MembershipUser
	{
		
		private System.Guid _UserId;
		
		private int _PasswordFormat;
		
		private string _MobilePIN;
		
		private string _Email;
		
		private string _LoweredEmail;
		
		private string _PasswordQuestion;
		
		private string _PasswordAnswer;
		
		private bool _IsApproved;
		
		private bool _IsLockedOut;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _LastLoginDate;
		
		private System.DateTime _LastPasswordChangedDate;
		
		private System.DateTime _LastLockoutDate;
		
		private int _FailedPasswordAttemptCount;
		
		private System.DateTime _FailedPasswordAttemptWindowStart;
		
		private int _FailedPasswordAnswerAttemptCount;
		
		private System.DateTime _FailedPasswordAnswerAttemptWindowStart;
		
		private string _Comment;
		
		private System.Guid _ApplicationId;
		
		private string _UserName;
		
		private string _MobileAlias;
		
		private bool _IsAnonymous;
		
		private System.DateTime _LastActivityDate;
		
		public vw_aspnet_MembershipUser()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordFormat", DbType="Int NOT NULL")]
		public int PasswordFormat
		{
			get
			{
				return this._PasswordFormat;
			}
			set
			{
				if ((this._PasswordFormat != value))
				{
					this._PasswordFormat = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobilePIN", DbType="NVarChar(16)")]
		public string MobilePIN
		{
			get
			{
				return this._MobilePIN;
			}
			set
			{
				if ((this._MobilePIN != value))
				{
					this._MobilePIN = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(256)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredEmail", DbType="NVarChar(256)")]
		public string LoweredEmail
		{
			get
			{
				return this._LoweredEmail;
			}
			set
			{
				if ((this._LoweredEmail != value))
				{
					this._LoweredEmail = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordQuestion", DbType="NVarChar(256)")]
		public string PasswordQuestion
		{
			get
			{
				return this._PasswordQuestion;
			}
			set
			{
				if ((this._PasswordQuestion != value))
				{
					this._PasswordQuestion = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordAnswer", DbType="NVarChar(128)")]
		public string PasswordAnswer
		{
			get
			{
				return this._PasswordAnswer;
			}
			set
			{
				if ((this._PasswordAnswer != value))
				{
					this._PasswordAnswer = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsApproved", DbType="Bit NOT NULL")]
		public bool IsApproved
		{
			get
			{
				return this._IsApproved;
			}
			set
			{
				if ((this._IsApproved != value))
				{
					this._IsApproved = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLockedOut", DbType="Bit NOT NULL")]
		public bool IsLockedOut
		{
			get
			{
				return this._IsLockedOut;
			}
			set
			{
				if ((this._IsLockedOut != value))
				{
					this._IsLockedOut = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this._CreateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLoginDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastLoginDate
		{
			get
			{
				return this._LastLoginDate;
			}
			set
			{
				if ((this._LastLoginDate != value))
				{
					this._LastLoginDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastPasswordChangedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastPasswordChangedDate
		{
			get
			{
				return this._LastPasswordChangedDate;
			}
			set
			{
				if ((this._LastPasswordChangedDate != value))
				{
					this._LastPasswordChangedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLockoutDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastLockoutDate
		{
			get
			{
				return this._LastLockoutDate;
			}
			set
			{
				if ((this._LastLockoutDate != value))
				{
					this._LastLockoutDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAttemptCount", DbType="Int NOT NULL")]
		public int FailedPasswordAttemptCount
		{
			get
			{
				return this._FailedPasswordAttemptCount;
			}
			set
			{
				if ((this._FailedPasswordAttemptCount != value))
				{
					this._FailedPasswordAttemptCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAttemptWindowStart", DbType="DateTime NOT NULL")]
		public System.DateTime FailedPasswordAttemptWindowStart
		{
			get
			{
				return this._FailedPasswordAttemptWindowStart;
			}
			set
			{
				if ((this._FailedPasswordAttemptWindowStart != value))
				{
					this._FailedPasswordAttemptWindowStart = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAnswerAttemptCount", DbType="Int NOT NULL")]
		public int FailedPasswordAnswerAttemptCount
		{
			get
			{
				return this._FailedPasswordAnswerAttemptCount;
			}
			set
			{
				if ((this._FailedPasswordAnswerAttemptCount != value))
				{
					this._FailedPasswordAnswerAttemptCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAnswerAttemptWindowStart", DbType="DateTime NOT NULL")]
		public System.DateTime FailedPasswordAnswerAttemptWindowStart
		{
			get
			{
				return this._FailedPasswordAnswerAttemptWindowStart;
			}
			set
			{
				if ((this._FailedPasswordAnswerAttemptWindowStart != value))
				{
					this._FailedPasswordAnswerAttemptWindowStart = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this._Comment = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this._ApplicationId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileAlias", DbType="NVarChar(16)")]
		public string MobileAlias
		{
			get
			{
				return this._MobileAlias;
			}
			set
			{
				if ((this._MobileAlias != value))
				{
					this._MobileAlias = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAnonymous", DbType="Bit NOT NULL")]
		public bool IsAnonymous
		{
			get
			{
				return this._IsAnonymous;
			}
			set
			{
				if ((this._IsAnonymous != value))
				{
					this._IsAnonymous = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastActivityDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastActivityDate
		{
			get
			{
				return this._LastActivityDate;
			}
			set
			{
				if ((this._LastActivityDate != value))
				{
					this._LastActivityDate = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vw_aspnet_Roles")]
	public partial class vw_aspnet_Role
	{
		
		private System.Guid _ApplicationId;
		
		private System.Guid _RoleId;
		
		private string _RoleName;
		
		private string _LoweredRoleName;
		
		private string _Description;
		
		public vw_aspnet_Role()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this._ApplicationId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this._RoleId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this._RoleName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredRoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredRoleName
		{
			get
			{
				return this._LoweredRoleName;
			}
			set
			{
				if ((this._LoweredRoleName != value))
				{
					this._LoweredRoleName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(256)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vw_aspnet_UsersInRoles")]
	public partial class vw_aspnet_UsersInRole
	{
		
		private System.Guid _UserId;
		
		private System.Guid _RoleId;
		
		public vw_aspnet_UsersInRole()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this._RoleId = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vw_aspnet_Applications")]
	public partial class vw_aspnet_Application
	{
		
		private string _ApplicationName;
		
		private string _LoweredApplicationName;
		
		private System.Guid _ApplicationId;
		
		private string _Description;
		
		public vw_aspnet_Application()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string ApplicationName
		{
			get
			{
				return this._ApplicationName;
			}
			set
			{
				if ((this._ApplicationName != value))
				{
					this._ApplicationName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredApplicationName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredApplicationName
		{
			get
			{
				return this._LoweredApplicationName;
			}
			set
			{
				if ((this._LoweredApplicationName != value))
				{
					this._LoweredApplicationName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this._ApplicationId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(256)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Membership")]
	public partial class aspnet_Membership : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _UserId;
		
		private string _Password;
		
		private int _PasswordFormat;
		
		private string _PasswordSalt;
		
		private string _MobilePIN;
		
		private string _Email;
		
		private string _LoweredEmail;
		
		private string _PasswordQuestion;
		
		private string _PasswordAnswer;
		
		private bool _IsApproved;
		
		private bool _IsLockedOut;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _LastLoginDate;
		
		private System.DateTime _LastPasswordChangedDate;
		
		private System.DateTime _LastLockoutDate;
		
		private int _FailedPasswordAttemptCount;
		
		private System.DateTime _FailedPasswordAttemptWindowStart;
		
		private int _FailedPasswordAnswerAttemptCount;
		
		private System.DateTime _FailedPasswordAnswerAttemptWindowStart;
		
		private string _Comment;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnPasswordFormatChanging(int value);
    partial void OnPasswordFormatChanged();
    partial void OnPasswordSaltChanging(string value);
    partial void OnPasswordSaltChanged();
    partial void OnMobilePINChanging(string value);
    partial void OnMobilePINChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnLoweredEmailChanging(string value);
    partial void OnLoweredEmailChanged();
    partial void OnPasswordQuestionChanging(string value);
    partial void OnPasswordQuestionChanged();
    partial void OnPasswordAnswerChanging(string value);
    partial void OnPasswordAnswerChanged();
    partial void OnIsApprovedChanging(bool value);
    partial void OnIsApprovedChanged();
    partial void OnIsLockedOutChanging(bool value);
    partial void OnIsLockedOutChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnLastLoginDateChanging(System.DateTime value);
    partial void OnLastLoginDateChanged();
    partial void OnLastPasswordChangedDateChanging(System.DateTime value);
    partial void OnLastPasswordChangedDateChanged();
    partial void OnLastLockoutDateChanging(System.DateTime value);
    partial void OnLastLockoutDateChanged();
    partial void OnFailedPasswordAttemptCountChanging(int value);
    partial void OnFailedPasswordAttemptCountChanged();
    partial void OnFailedPasswordAttemptWindowStartChanging(System.DateTime value);
    partial void OnFailedPasswordAttemptWindowStartChanged();
    partial void OnFailedPasswordAnswerAttemptCountChanging(int value);
    partial void OnFailedPasswordAnswerAttemptCountChanged();
    partial void OnFailedPasswordAnswerAttemptWindowStartChanging(System.DateTime value);
    partial void OnFailedPasswordAnswerAttemptWindowStartChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public aspnet_Membership()
		{
			this._aspnet_User = default(EntityRef<aspnet_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordFormat", DbType="Int NOT NULL")]
		public int PasswordFormat
		{
			get
			{
				return this._PasswordFormat;
			}
			set
			{
				if ((this._PasswordFormat != value))
				{
					this.OnPasswordFormatChanging(value);
					this.SendPropertyChanging();
					this._PasswordFormat = value;
					this.SendPropertyChanged("PasswordFormat");
					this.OnPasswordFormatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordSalt", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string PasswordSalt
		{
			get
			{
				return this._PasswordSalt;
			}
			set
			{
				if ((this._PasswordSalt != value))
				{
					this.OnPasswordSaltChanging(value);
					this.SendPropertyChanging();
					this._PasswordSalt = value;
					this.SendPropertyChanged("PasswordSalt");
					this.OnPasswordSaltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobilePIN", DbType="NVarChar(16)")]
		public string MobilePIN
		{
			get
			{
				return this._MobilePIN;
			}
			set
			{
				if ((this._MobilePIN != value))
				{
					this.OnMobilePINChanging(value);
					this.SendPropertyChanging();
					this._MobilePIN = value;
					this.SendPropertyChanged("MobilePIN");
					this.OnMobilePINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(256)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredEmail", DbType="NVarChar(256)")]
		public string LoweredEmail
		{
			get
			{
				return this._LoweredEmail;
			}
			set
			{
				if ((this._LoweredEmail != value))
				{
					this.OnLoweredEmailChanging(value);
					this.SendPropertyChanging();
					this._LoweredEmail = value;
					this.SendPropertyChanged("LoweredEmail");
					this.OnLoweredEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordQuestion", DbType="NVarChar(256)")]
		public string PasswordQuestion
		{
			get
			{
				return this._PasswordQuestion;
			}
			set
			{
				if ((this._PasswordQuestion != value))
				{
					this.OnPasswordQuestionChanging(value);
					this.SendPropertyChanging();
					this._PasswordQuestion = value;
					this.SendPropertyChanged("PasswordQuestion");
					this.OnPasswordQuestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordAnswer", DbType="NVarChar(128)")]
		public string PasswordAnswer
		{
			get
			{
				return this._PasswordAnswer;
			}
			set
			{
				if ((this._PasswordAnswer != value))
				{
					this.OnPasswordAnswerChanging(value);
					this.SendPropertyChanging();
					this._PasswordAnswer = value;
					this.SendPropertyChanged("PasswordAnswer");
					this.OnPasswordAnswerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsApproved", DbType="Bit NOT NULL")]
		public bool IsApproved
		{
			get
			{
				return this._IsApproved;
			}
			set
			{
				if ((this._IsApproved != value))
				{
					this.OnIsApprovedChanging(value);
					this.SendPropertyChanging();
					this._IsApproved = value;
					this.SendPropertyChanged("IsApproved");
					this.OnIsApprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLockedOut", DbType="Bit NOT NULL")]
		public bool IsLockedOut
		{
			get
			{
				return this._IsLockedOut;
			}
			set
			{
				if ((this._IsLockedOut != value))
				{
					this.OnIsLockedOutChanging(value);
					this.SendPropertyChanging();
					this._IsLockedOut = value;
					this.SendPropertyChanged("IsLockedOut");
					this.OnIsLockedOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLoginDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastLoginDate
		{
			get
			{
				return this._LastLoginDate;
			}
			set
			{
				if ((this._LastLoginDate != value))
				{
					this.OnLastLoginDateChanging(value);
					this.SendPropertyChanging();
					this._LastLoginDate = value;
					this.SendPropertyChanged("LastLoginDate");
					this.OnLastLoginDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastPasswordChangedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastPasswordChangedDate
		{
			get
			{
				return this._LastPasswordChangedDate;
			}
			set
			{
				if ((this._LastPasswordChangedDate != value))
				{
					this.OnLastPasswordChangedDateChanging(value);
					this.SendPropertyChanging();
					this._LastPasswordChangedDate = value;
					this.SendPropertyChanged("LastPasswordChangedDate");
					this.OnLastPasswordChangedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLockoutDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastLockoutDate
		{
			get
			{
				return this._LastLockoutDate;
			}
			set
			{
				if ((this._LastLockoutDate != value))
				{
					this.OnLastLockoutDateChanging(value);
					this.SendPropertyChanging();
					this._LastLockoutDate = value;
					this.SendPropertyChanged("LastLockoutDate");
					this.OnLastLockoutDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAttemptCount", DbType="Int NOT NULL")]
		public int FailedPasswordAttemptCount
		{
			get
			{
				return this._FailedPasswordAttemptCount;
			}
			set
			{
				if ((this._FailedPasswordAttemptCount != value))
				{
					this.OnFailedPasswordAttemptCountChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAttemptCount = value;
					this.SendPropertyChanged("FailedPasswordAttemptCount");
					this.OnFailedPasswordAttemptCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAttemptWindowStart", DbType="DateTime NOT NULL")]
		public System.DateTime FailedPasswordAttemptWindowStart
		{
			get
			{
				return this._FailedPasswordAttemptWindowStart;
			}
			set
			{
				if ((this._FailedPasswordAttemptWindowStart != value))
				{
					this.OnFailedPasswordAttemptWindowStartChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAttemptWindowStart = value;
					this.SendPropertyChanged("FailedPasswordAttemptWindowStart");
					this.OnFailedPasswordAttemptWindowStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAnswerAttemptCount", DbType="Int NOT NULL")]
		public int FailedPasswordAnswerAttemptCount
		{
			get
			{
				return this._FailedPasswordAnswerAttemptCount;
			}
			set
			{
				if ((this._FailedPasswordAnswerAttemptCount != value))
				{
					this.OnFailedPasswordAnswerAttemptCountChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAnswerAttemptCount = value;
					this.SendPropertyChanged("FailedPasswordAnswerAttemptCount");
					this.OnFailedPasswordAnswerAttemptCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAnswerAttemptWindowStart", DbType="DateTime NOT NULL")]
		public System.DateTime FailedPasswordAnswerAttemptWindowStart
		{
			get
			{
				return this._FailedPasswordAnswerAttemptWindowStart;
			}
			set
			{
				if ((this._FailedPasswordAnswerAttemptWindowStart != value))
				{
					this.OnFailedPasswordAnswerAttemptWindowStartChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAnswerAttemptWindowStart = value;
					this.SendPropertyChanged("FailedPasswordAnswerAttemptWindowStart");
					this.OnFailedPasswordAnswerAttemptWindowStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Membership", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.aspnet_Membership = null;
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.aspnet_Membership = this;
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_UsersInRoles")]
	public partial class aspnet_UsersInRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserId;
		
		private System.Guid _RoleId;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
		private EntityRef<aspnet_Role> _aspnet_Role;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    #endregion
		
		public aspnet_UsersInRole()
		{
			this._aspnet_User = default(EntityRef<aspnet_User>);
			this._aspnet_Role = default(EntityRef<aspnet_Role>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._aspnet_Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_UsersInRole", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.aspnet_UsersInRoles.Remove(this);
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.aspnet_UsersInRoles.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Role_aspnet_UsersInRole", Storage="_aspnet_Role", ThisKey="RoleId", OtherKey="RoleId", IsForeignKey=true)]
		public aspnet_Role aspnet_Role
		{
			get
			{
				return this._aspnet_Role.Entity;
			}
			set
			{
				aspnet_Role previousValue = this._aspnet_Role.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Role.Entity = null;
						previousValue.aspnet_UsersInRoles.Remove(this);
					}
					this._aspnet_Role.Entity = value;
					if ((value != null))
					{
						value.aspnet_UsersInRoles.Add(this);
						this._RoleId = value.RoleId;
					}
					else
					{
						this._RoleId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Role");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Users")]
	public partial class aspnet_User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _UserId;
		
		private string _UserName;
		
		private string _LoweredUserName;
		
		private string _MobileAlias;
		
		private bool _IsAnonymous;
		
		private System.DateTime _LastActivityDate;
		
		private EntityRef<aspnet_Membership> _aspnet_Membership;
		
		private EntitySet<aspnet_UsersInRole> _aspnet_UsersInRoles;
		
		private EntitySet<site_user> _site_users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnLoweredUserNameChanging(string value);
    partial void OnLoweredUserNameChanged();
    partial void OnMobileAliasChanging(string value);
    partial void OnMobileAliasChanged();
    partial void OnIsAnonymousChanging(bool value);
    partial void OnIsAnonymousChanged();
    partial void OnLastActivityDateChanging(System.DateTime value);
    partial void OnLastActivityDateChanged();
    #endregion
		
		public aspnet_User()
		{
			this._aspnet_Membership = default(EntityRef<aspnet_Membership>);
			this._aspnet_UsersInRoles = new EntitySet<aspnet_UsersInRole>(new Action<aspnet_UsersInRole>(this.attach_aspnet_UsersInRoles), new Action<aspnet_UsersInRole>(this.detach_aspnet_UsersInRoles));
			this._site_users = new EntitySet<site_user>(new Action<site_user>(this.attach_site_users), new Action<site_user>(this.detach_site_users));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredUserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredUserName
		{
			get
			{
				return this._LoweredUserName;
			}
			set
			{
				if ((this._LoweredUserName != value))
				{
					this.OnLoweredUserNameChanging(value);
					this.SendPropertyChanging();
					this._LoweredUserName = value;
					this.SendPropertyChanged("LoweredUserName");
					this.OnLoweredUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileAlias", DbType="NVarChar(16)")]
		public string MobileAlias
		{
			get
			{
				return this._MobileAlias;
			}
			set
			{
				if ((this._MobileAlias != value))
				{
					this.OnMobileAliasChanging(value);
					this.SendPropertyChanging();
					this._MobileAlias = value;
					this.SendPropertyChanged("MobileAlias");
					this.OnMobileAliasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAnonymous", DbType="Bit NOT NULL")]
		public bool IsAnonymous
		{
			get
			{
				return this._IsAnonymous;
			}
			set
			{
				if ((this._IsAnonymous != value))
				{
					this.OnIsAnonymousChanging(value);
					this.SendPropertyChanging();
					this._IsAnonymous = value;
					this.SendPropertyChanged("IsAnonymous");
					this.OnIsAnonymousChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastActivityDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastActivityDate
		{
			get
			{
				return this._LastActivityDate;
			}
			set
			{
				if ((this._LastActivityDate != value))
				{
					this.OnLastActivityDateChanging(value);
					this.SendPropertyChanging();
					this._LastActivityDate = value;
					this.SendPropertyChanged("LastActivityDate");
					this.OnLastActivityDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Membership", Storage="_aspnet_Membership", ThisKey="UserId", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
		public aspnet_Membership aspnet_Membership
		{
			get
			{
				return this._aspnet_Membership.Entity;
			}
			set
			{
				aspnet_Membership previousValue = this._aspnet_Membership.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Membership.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Membership.Entity = null;
						previousValue.aspnet_User = null;
					}
					this._aspnet_Membership.Entity = value;
					if ((value != null))
					{
						value.aspnet_User = this;
					}
					this.SendPropertyChanged("aspnet_Membership");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_UsersInRole", Storage="_aspnet_UsersInRoles", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<aspnet_UsersInRole> aspnet_UsersInRoles
		{
			get
			{
				return this._aspnet_UsersInRoles;
			}
			set
			{
				this._aspnet_UsersInRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_site_user", Storage="_site_users", ThisKey="UserId", OtherKey="userid")]
		public EntitySet<site_user> site_users
		{
			get
			{
				return this._site_users;
			}
			set
			{
				this._site_users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = this;
		}
		
		private void detach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = null;
		}
		
		private void attach_site_users(site_user entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = this;
		}
		
		private void detach_site_users(site_user entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Roles")]
	public partial class aspnet_Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _RoleId;
		
		private string _RoleName;
		
		private string _LoweredRoleName;
		
		private string _Description;
		
		private EntitySet<aspnet_UsersInRole> _aspnet_UsersInRoles;
		
		private EntitySet<site_user> _site_users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    partial void OnLoweredRoleNameChanging(string value);
    partial void OnLoweredRoleNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public aspnet_Role()
		{
			this._aspnet_UsersInRoles = new EntitySet<aspnet_UsersInRole>(new Action<aspnet_UsersInRole>(this.attach_aspnet_UsersInRoles), new Action<aspnet_UsersInRole>(this.detach_aspnet_UsersInRoles));
			this._site_users = new EntitySet<site_user>(new Action<site_user>(this.attach_site_users), new Action<site_user>(this.detach_site_users));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredRoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredRoleName
		{
			get
			{
				return this._LoweredRoleName;
			}
			set
			{
				if ((this._LoweredRoleName != value))
				{
					this.OnLoweredRoleNameChanging(value);
					this.SendPropertyChanging();
					this._LoweredRoleName = value;
					this.SendPropertyChanged("LoweredRoleName");
					this.OnLoweredRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(256)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Role_aspnet_UsersInRole", Storage="_aspnet_UsersInRoles", ThisKey="RoleId", OtherKey="RoleId")]
		public EntitySet<aspnet_UsersInRole> aspnet_UsersInRoles
		{
			get
			{
				return this._aspnet_UsersInRoles;
			}
			set
			{
				this._aspnet_UsersInRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Role_site_user", Storage="_site_users", ThisKey="RoleId", OtherKey="roleid")]
		public EntitySet<site_user> site_users
		{
			get
			{
				return this._site_users;
			}
			set
			{
				this._site_users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Role = this;
		}
		
		private void detach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Role = null;
		}
		
		private void attach_site_users(site_user entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Role = this;
		}
		
		private void detach_site_users(site_user entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.donatees")]
	public partial class Donatee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _donatees_key;
		
		private string _first_name;
		
		private string _last_name;
		
		private string _address1;
		
		private string _address2;
		
		private string _address3;
		
		private string _address4;
		
		private string _postcode;
		
		private string _email;
		
		private bool _receve_email;
		
		private EntitySet<Donation> _donations;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDonateesKeyChanging(int value);
    partial void OnDonateesKeyChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnAddress1Changing(string value);
    partial void OnAddress1Changed();
    partial void OnAddress2Changing(string value);
    partial void OnAddress2Changed();
    partial void OnAddress3Changing(string value);
    partial void OnAddress3Changed();
    partial void OnAddress4Changing(string value);
    partial void OnAddress4Changed();
    partial void OnPostCodeChanging(string value);
    partial void OnPostCodeChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnReceiveEmailChanging(bool value);
    partial void OnReceiveEmailChanged();
    #endregion
		
		public Donatee()
		{
			this._donations = new EntitySet<Donation>(new Action<Donation>(this.attach_donations), new Action<Donation>(this.detach_donations));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="donatees_key", Storage="_donatees_key", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DonateesKey
		{
			get
			{
				return this._donatees_key;
			}
			set
			{
				if ((this._donatees_key != value))
				{
					this.OnDonateesKeyChanging(value);
					this.SendPropertyChanging();
					this._donatees_key = value;
					this.SendPropertyChanged("DonateesKey");
					this.OnDonateesKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="first_name", Storage="_first_name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._first_name;
			}
			set
			{
				if ((this._first_name != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._first_name = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="last_name", Storage="_last_name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._last_name;
			}
			set
			{
				if ((this._last_name != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._last_name = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="address1", Storage="_address1", DbType="NVarChar(MAX)")]
		public string Address1
		{
			get
			{
				return this._address1;
			}
			set
			{
				if ((this._address1 != value))
				{
					this.OnAddress1Changing(value);
					this.SendPropertyChanging();
					this._address1 = value;
					this.SendPropertyChanged("Address1");
					this.OnAddress1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="address2", Storage="_address2", DbType="NVarChar(MAX)")]
		public string Address2
		{
			get
			{
				return this._address2;
			}
			set
			{
				if ((this._address2 != value))
				{
					this.OnAddress2Changing(value);
					this.SendPropertyChanging();
					this._address2 = value;
					this.SendPropertyChanged("Address2");
					this.OnAddress2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="address3", Storage="_address3", DbType="NVarChar(MAX)")]
		public string Address3
		{
			get
			{
				return this._address3;
			}
			set
			{
				if ((this._address3 != value))
				{
					this.OnAddress3Changing(value);
					this.SendPropertyChanging();
					this._address3 = value;
					this.SendPropertyChanged("Address3");
					this.OnAddress3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="address4", Storage="_address4", DbType="NVarChar(MAX)")]
		public string Address4
		{
			get
			{
				return this._address4;
			}
			set
			{
				if ((this._address4 != value))
				{
					this.OnAddress4Changing(value);
					this.SendPropertyChanging();
					this._address4 = value;
					this.SendPropertyChanged("Address4");
					this.OnAddress4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="postcode", Storage="_postcode", DbType="NVarChar(8)")]
		public string PostCode
		{
			get
			{
				return this._postcode;
			}
			set
			{
				if ((this._postcode != value))
				{
					this.OnPostCodeChanging(value);
					this.SendPropertyChanging();
					this._postcode = value;
					this.SendPropertyChanged("PostCode");
					this.OnPostCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="email", Storage="_email", DbType="NVarChar(MAX)")]
		public string Email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="receve_email", Storage="_receve_email", DbType="Bit NOT NULL")]
		public bool ReceiveEmail
		{
			get
			{
				return this._receve_email;
			}
			set
			{
				if ((this._receve_email != value))
				{
					this.OnReceiveEmailChanging(value);
					this.SendPropertyChanging();
					this._receve_email = value;
					this.SendPropertyChanged("ReceiveEmail");
					this.OnReceiveEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Donatee_Donation", Storage="_donations", ThisKey="DonateesKey", OtherKey="DonateeFKey")]
		public EntitySet<Donation> Donations
		{
			get
			{
				return this._donations;
			}
			set
			{
				this._donations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_donations(Donation entity)
		{
			this.SendPropertyChanging();
			entity.Donatee = this;
		}
		
		private void detach_donations(Donation entity)
		{
			this.SendPropertyChanging();
			entity.Donatee = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.donations")]
	public partial class Donation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _donation_key;
		
		private int _donatee_fkey;
		
		private decimal _amount;
		
		private bool _gift_aid;
		
		private System.DateTime _donation_date;
		
		private EntityRef<Donatee> _donatee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDonationKeyChanging(int value);
    partial void OnDonationKeyChanged();
    partial void OnDonateeFKeyChanging(int value);
    partial void OnDonateeFKeyChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnGiftAidChanging(bool value);
    partial void OnGiftAidChanged();
    partial void OnDonationDateChanging(System.DateTime value);
    partial void OnDonationDateChanged();
    #endregion
		
		public Donation()
		{
			this._donatee = default(EntityRef<Donatee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="donation_key", Storage="_donation_key", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DonationKey
		{
			get
			{
				return this._donation_key;
			}
			set
			{
				if ((this._donation_key != value))
				{
					this.OnDonationKeyChanging(value);
					this.SendPropertyChanging();
					this._donation_key = value;
					this.SendPropertyChanged("DonationKey");
					this.OnDonationKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="donatee_fkey", Storage="_donatee_fkey", DbType="Int NOT NULL")]
		public int DonateeFKey
		{
			get
			{
				return this._donatee_fkey;
			}
			set
			{
				if ((this._donatee_fkey != value))
				{
					this.OnDonateeFKeyChanging(value);
					this.SendPropertyChanging();
					this._donatee_fkey = value;
					this.SendPropertyChanged("DonateeFKey");
					this.OnDonateeFKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="amount", Storage="_amount", DbType="Money NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._amount;
			}
			set
			{
				if ((this._amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="gift_aid", Storage="_gift_aid", DbType="Bit NOT NULL")]
		public bool GiftAid
		{
			get
			{
				return this._gift_aid;
			}
			set
			{
				if ((this._gift_aid != value))
				{
					this.OnGiftAidChanging(value);
					this.SendPropertyChanging();
					this._gift_aid = value;
					this.SendPropertyChanged("GiftAid");
					this.OnGiftAidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="donation_date", Storage="_donation_date", DbType="DateTime NOT NULL")]
		public System.DateTime DonationDate
		{
			get
			{
				return this._donation_date;
			}
			set
			{
				if ((this._donation_date != value))
				{
					this.OnDonationDateChanging(value);
					this.SendPropertyChanging();
					this._donation_date = value;
					this.SendPropertyChanged("DonationDate");
					this.OnDonationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Donatee_Donation", Storage="_donatee", ThisKey="DonateeFKey", OtherKey="DonateesKey", IsForeignKey=true)]
		public Donatee Donatee
		{
			get
			{
				return this._donatee.Entity;
			}
			set
			{
				Donatee previousValue = this._donatee.Entity;
				if (((previousValue != value) 
							|| (this._donatee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._donatee.Entity = null;
						previousValue.Donations.Remove(this);
					}
					this._donatee.Entity = value;
					if ((value != null))
					{
						value.Donations.Add(this);
						this._donatee_fkey = value.DonateesKey;
					}
					else
					{
						this._donatee_fkey = default(int);
					}
					this.SendPropertyChanged("Donatee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.comments")]
	public partial class Comment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _comment_key;
		
		private System.Nullable<int> _comment_fkey;
		
		private int _article_key;
		
		private string _email;
		
		private string _website;
		
		private string _text;
		
		private string _username;
		
		private EntitySet<Comment> _comments;
		
		private EntityRef<Comment> _comment1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCommentKeyChanging(int value);
    partial void OnCommentKeyChanged();
    partial void OnCommentFKeyChanging(System.Nullable<int> value);
    partial void OnCommentFKeyChanged();
    partial void OnArticleKeyChanging(int value);
    partial void OnArticleKeyChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnWebsiteChanging(string value);
    partial void OnWebsiteChanged();
    partial void OnTextChanging(string value);
    partial void OnTextChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    #endregion
		
		public Comment()
		{
			this._comments = new EntitySet<Comment>(new Action<Comment>(this.attach_comments), new Action<Comment>(this.detach_comments));
			this._comment1 = default(EntityRef<Comment>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="comment_key", Storage="_comment_key", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CommentKey
		{
			get
			{
				return this._comment_key;
			}
			set
			{
				if ((this._comment_key != value))
				{
					this.OnCommentKeyChanging(value);
					this.SendPropertyChanging();
					this._comment_key = value;
					this.SendPropertyChanged("CommentKey");
					this.OnCommentKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="comment_fkey", Storage="_comment_fkey", DbType="Int")]
		public System.Nullable<int> CommentFKey
		{
			get
			{
				return this._comment_fkey;
			}
			set
			{
				if ((this._comment_fkey != value))
				{
					this.OnCommentFKeyChanging(value);
					this.SendPropertyChanging();
					this._comment_fkey = value;
					this.SendPropertyChanged("CommentFKey");
					this.OnCommentFKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="article_key", Storage="_article_key", DbType="Int NOT NULL")]
		public int ArticleKey
		{
			get
			{
				return this._article_key;
			}
			set
			{
				if ((this._article_key != value))
				{
					this.OnArticleKeyChanging(value);
					this.SendPropertyChanging();
					this._article_key = value;
					this.SendPropertyChanged("ArticleKey");
					this.OnArticleKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="email", Storage="_email", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="website", Storage="_website", DbType="NVarChar(MAX)")]
		public string Website
		{
			get
			{
				return this._website;
			}
			set
			{
				if ((this._website != value))
				{
					this.OnWebsiteChanging(value);
					this.SendPropertyChanging();
					this._website = value;
					this.SendPropertyChanged("Website");
					this.OnWebsiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="text", Storage="_text", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Text
		{
			get
			{
				return this._text;
			}
			set
			{
				if ((this._text != value))
				{
					this.OnTextChanging(value);
					this.SendPropertyChanging();
					this._text = value;
					this.SendPropertyChanged("Text");
					this.OnTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="username", Storage="_username", DbType="NVarChar(50)")]
		public string UserName
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Comment_Comment", Storage="_comments", ThisKey="CommentKey", OtherKey="CommentFKey")]
		public EntitySet<Comment> Comments
		{
			get
			{
				return this._comments;
			}
			set
			{
				this._comments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Comment_Comment", Storage="_comment1", ThisKey="CommentFKey", OtherKey="CommentKey", IsForeignKey=true)]
		public Comment comment1
		{
			get
			{
				return this._comment1.Entity;
			}
			set
			{
				Comment previousValue = this._comment1.Entity;
				if (((previousValue != value) 
							|| (this._comment1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._comment1.Entity = null;
						previousValue.Comments.Remove(this);
					}
					this._comment1.Entity = value;
					if ((value != null))
					{
						value.Comments.Add(this);
						this._comment_fkey = value.CommentKey;
					}
					else
					{
						this._comment_fkey = default(Nullable<int>);
					}
					this.SendPropertyChanged("comment1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_comments(Comment entity)
		{
			this.SendPropertyChanging();
			entity.comment1 = this;
		}
		
		private void detach_comments(Comment entity)
		{
			this.SendPropertyChanging();
			entity.comment1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.articles")]
	public partial class article : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _article_key;
		
		private string _title;
		
		private string _body;
		
		private bool _showonhome;
		
		private string _shortdescription;
		
		private string _thumbnailimage;
		
		private bool _active;
		
		private int _sortorder;
		
		private System.Nullable<System.DateTime> _start_date;
		
		private System.Nullable<System.DateTime> _end_date;
		
		private bool _include_in_feed;
		
		private string _url;
		
		private string _virtualurl;
		
		private System.Nullable<int> _site_fkey;
		
		private EntityRef<site> _site;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onarticle_keyChanging(int value);
    partial void Onarticle_keyChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OnbodyChanging(string value);
    partial void OnbodyChanged();
    partial void OnshowonhomeChanging(bool value);
    partial void OnshowonhomeChanged();
    partial void OnshortdescriptionChanging(string value);
    partial void OnshortdescriptionChanged();
    partial void OnthumbnailimageChanging(string value);
    partial void OnthumbnailimageChanged();
    partial void OnactiveChanging(bool value);
    partial void OnactiveChanged();
    partial void OnsortorderChanging(int value);
    partial void OnsortorderChanged();
    partial void Onstart_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onstart_dateChanged();
    partial void Onend_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onend_dateChanged();
    partial void Oninclude_in_feedChanging(bool value);
    partial void Oninclude_in_feedChanged();
    partial void OnurlChanging(string value);
    partial void OnurlChanged();
    partial void OnvirtualurlChanging(string value);
    partial void OnvirtualurlChanged();
    partial void Onsite_fkeyChanging(System.Nullable<int> value);
    partial void Onsite_fkeyChanged();
    #endregion
		
		public article()
		{
			this._site = default(EntityRef<site>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_article_key", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int article_key
		{
			get
			{
				return this._article_key;
			}
			set
			{
				if ((this._article_key != value))
				{
					this.Onarticle_keyChanging(value);
					this.SendPropertyChanging();
					this._article_key = value;
					this.SendPropertyChanged("article_key");
					this.Onarticle_keyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(50)")]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_body", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string body
		{
			get
			{
				return this._body;
			}
			set
			{
				if ((this._body != value))
				{
					this.OnbodyChanging(value);
					this.SendPropertyChanging();
					this._body = value;
					this.SendPropertyChanged("body");
					this.OnbodyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_showonhome", DbType="Bit NOT NULL")]
		public bool showonhome
		{
			get
			{
				return this._showonhome;
			}
			set
			{
				if ((this._showonhome != value))
				{
					this.OnshowonhomeChanging(value);
					this.SendPropertyChanging();
					this._showonhome = value;
					this.SendPropertyChanged("showonhome");
					this.OnshowonhomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shortdescription", DbType="NVarChar(MAX)")]
		public string shortdescription
		{
			get
			{
				return this._shortdescription;
			}
			set
			{
				if ((this._shortdescription != value))
				{
					this.OnshortdescriptionChanging(value);
					this.SendPropertyChanging();
					this._shortdescription = value;
					this.SendPropertyChanged("shortdescription");
					this.OnshortdescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_thumbnailimage", DbType="NVarChar(50)")]
		public string thumbnailimage
		{
			get
			{
				return this._thumbnailimage;
			}
			set
			{
				if ((this._thumbnailimage != value))
				{
					this.OnthumbnailimageChanging(value);
					this.SendPropertyChanging();
					this._thumbnailimage = value;
					this.SendPropertyChanged("thumbnailimage");
					this.OnthumbnailimageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active", DbType="Bit NOT NULL")]
		public bool active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sortorder", DbType="Int NOT NULL")]
		public int sortorder
		{
			get
			{
				return this._sortorder;
			}
			set
			{
				if ((this._sortorder != value))
				{
					this.OnsortorderChanging(value);
					this.SendPropertyChanging();
					this._sortorder = value;
					this.SendPropertyChanged("sortorder");
					this.OnsortorderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_start_date", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> start_date
		{
			get
			{
				return this._start_date;
			}
			set
			{
				if ((this._start_date != value))
				{
					this.Onstart_dateChanging(value);
					this.SendPropertyChanging();
					this._start_date = value;
					this.SendPropertyChanged("start_date");
					this.Onstart_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_end_date", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> end_date
		{
			get
			{
				return this._end_date;
			}
			set
			{
				if ((this._end_date != value))
				{
					this.Onend_dateChanging(value);
					this.SendPropertyChanging();
					this._end_date = value;
					this.SendPropertyChanged("end_date");
					this.Onend_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_include_in_feed", DbType="Bit NOT NULL")]
		public bool include_in_feed
		{
			get
			{
				return this._include_in_feed;
			}
			set
			{
				if ((this._include_in_feed != value))
				{
					this.Oninclude_in_feedChanging(value);
					this.SendPropertyChanging();
					this._include_in_feed = value;
					this.SendPropertyChanged("include_in_feed");
					this.Oninclude_in_feedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_url", DbType="NVarChar(MAX)")]
		public string url
		{
			get
			{
				return this._url;
			}
			set
			{
				if ((this._url != value))
				{
					this.OnurlChanging(value);
					this.SendPropertyChanging();
					this._url = value;
					this.SendPropertyChanged("url");
					this.OnurlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_virtualurl", DbType="NVarChar(MAX)")]
		public string virtualurl
		{
			get
			{
				return this._virtualurl;
			}
			set
			{
				if ((this._virtualurl != value))
				{
					this.OnvirtualurlChanging(value);
					this.SendPropertyChanging();
					this._virtualurl = value;
					this.SendPropertyChanged("virtualurl");
					this.OnvirtualurlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_site_fkey", DbType="Int")]
		public System.Nullable<int> site_fkey
		{
			get
			{
				return this._site_fkey;
			}
			set
			{
				if ((this._site_fkey != value))
				{
					if (this._site.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onsite_fkeyChanging(value);
					this.SendPropertyChanging();
					this._site_fkey = value;
					this.SendPropertyChanged("site_fkey");
					this.Onsite_fkeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="site_article", Storage="_site", ThisKey="site_fkey", OtherKey="site_key", IsForeignKey=true)]
		public site site
		{
			get
			{
				return this._site.Entity;
			}
			set
			{
				site previousValue = this._site.Entity;
				if (((previousValue != value) 
							|| (this._site.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._site.Entity = null;
						previousValue.articles.Remove(this);
					}
					this._site.Entity = value;
					if ((value != null))
					{
						value.articles.Add(this);
						this._site_fkey = value.site_key;
					}
					else
					{
						this._site_fkey = default(Nullable<int>);
					}
					this.SendPropertyChanged("site");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.banners")]
	public partial class banner : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _bannerdid;
		
		private string _name;
		
		private string _image;
		
		private string _alttext;
		
		private string _url;
		
		private string _category;
		
		private int _randomness;
		
		private System.Nullable<int> _site_fkey;
		
		private EntityRef<site> _site;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnbannerdidChanging(int value);
    partial void OnbannerdidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnimageChanging(string value);
    partial void OnimageChanged();
    partial void OnalttextChanging(string value);
    partial void OnalttextChanged();
    partial void OnurlChanging(string value);
    partial void OnurlChanged();
    partial void OncategoryChanging(string value);
    partial void OncategoryChanged();
    partial void OnrandomnessChanging(int value);
    partial void OnrandomnessChanged();
    partial void Onsite_fkeyChanging(System.Nullable<int> value);
    partial void Onsite_fkeyChanged();
    #endregion
		
		public banner()
		{
			this._site = default(EntityRef<site>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bannerdid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int bannerdid
		{
			get
			{
				return this._bannerdid;
			}
			set
			{
				if ((this._bannerdid != value))
				{
					this.OnbannerdidChanging(value);
					this.SendPropertyChanging();
					this._bannerdid = value;
					this.SendPropertyChanged("bannerdid");
					this.OnbannerdidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_image", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string image
		{
			get
			{
				return this._image;
			}
			set
			{
				if ((this._image != value))
				{
					this.OnimageChanging(value);
					this.SendPropertyChanging();
					this._image = value;
					this.SendPropertyChanged("image");
					this.OnimageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_alttext", DbType="NVarChar(MAX)")]
		public string alttext
		{
			get
			{
				return this._alttext;
			}
			set
			{
				if ((this._alttext != value))
				{
					this.OnalttextChanging(value);
					this.SendPropertyChanging();
					this._alttext = value;
					this.SendPropertyChanged("alttext");
					this.OnalttextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_url", DbType="NVarChar(255)")]
		public string url
		{
			get
			{
				return this._url;
			}
			set
			{
				if ((this._url != value))
				{
					this.OnurlChanging(value);
					this.SendPropertyChanging();
					this._url = value;
					this.SendPropertyChanged("url");
					this.OnurlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_category", DbType="NVarChar(20)")]
		public string category
		{
			get
			{
				return this._category;
			}
			set
			{
				if ((this._category != value))
				{
					this.OncategoryChanging(value);
					this.SendPropertyChanging();
					this._category = value;
					this.SendPropertyChanged("category");
					this.OncategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_randomness", DbType="Int NOT NULL")]
		public int randomness
		{
			get
			{
				return this._randomness;
			}
			set
			{
				if ((this._randomness != value))
				{
					this.OnrandomnessChanging(value);
					this.SendPropertyChanging();
					this._randomness = value;
					this.SendPropertyChanged("randomness");
					this.OnrandomnessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_site_fkey", DbType="Int")]
		public System.Nullable<int> site_fkey
		{
			get
			{
				return this._site_fkey;
			}
			set
			{
				if ((this._site_fkey != value))
				{
					if (this._site.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onsite_fkeyChanging(value);
					this.SendPropertyChanging();
					this._site_fkey = value;
					this.SendPropertyChanged("site_fkey");
					this.Onsite_fkeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="site_banner", Storage="_site", ThisKey="site_fkey", OtherKey="site_key", IsForeignKey=true)]
		public site site
		{
			get
			{
				return this._site.Entity;
			}
			set
			{
				site previousValue = this._site.Entity;
				if (((previousValue != value) 
							|| (this._site.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._site.Entity = null;
						previousValue.banners.Remove(this);
					}
					this._site.Entity = value;
					if ((value != null))
					{
						value.banners.Add(this);
						this._site_fkey = value.site_key;
					}
					else
					{
						this._site_fkey = default(Nullable<int>);
					}
					this.SendPropertyChanged("site");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.lookup")]
	public partial class lookup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _lookup_key;
		
		private string _lookup_id;
		
		private string _title;
		
		private string _type;
		
		private string _value;
		
		private byte _active;
		
		private EntitySet<media> _medias;
		
		private EntitySet<media_link> _media_links;
		
		private EntitySet<keyvalue> _keyvalues;
		
		private EntitySet<keyvalue> _keyvalues1;
		
		private EntitySet<marketingsite> _marketingsites;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onlookup_keyChanging(int value);
    partial void Onlookup_keyChanged();
    partial void Onlookup_idChanging(string value);
    partial void Onlookup_idChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OntypeChanging(string value);
    partial void OntypeChanged();
    partial void OnvalueChanging(string value);
    partial void OnvalueChanged();
    partial void OnactiveChanging(byte value);
    partial void OnactiveChanged();
    #endregion
		
		public lookup()
		{
			this._medias = new EntitySet<media>(new Action<media>(this.attach_medias), new Action<media>(this.detach_medias));
			this._media_links = new EntitySet<media_link>(new Action<media_link>(this.attach_media_links), new Action<media_link>(this.detach_media_links));
			this._keyvalues = new EntitySet<keyvalue>(new Action<keyvalue>(this.attach_keyvalues), new Action<keyvalue>(this.detach_keyvalues));
			this._keyvalues1 = new EntitySet<keyvalue>(new Action<keyvalue>(this.attach_keyvalues1), new Action<keyvalue>(this.detach_keyvalues1));
			this._marketingsites = new EntitySet<marketingsite>(new Action<marketingsite>(this.attach_marketingsites), new Action<marketingsite>(this.detach_marketingsites));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lookup_key", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int lookup_key
		{
			get
			{
				return this._lookup_key;
			}
			set
			{
				if ((this._lookup_key != value))
				{
					this.Onlookup_keyChanging(value);
					this.SendPropertyChanging();
					this._lookup_key = value;
					this.SendPropertyChanged("lookup_key");
					this.Onlookup_keyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lookup_id", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string lookup_id
		{
			get
			{
				return this._lookup_id;
			}
			set
			{
				if ((this._lookup_id != value))
				{
					this.Onlookup_idChanging(value);
					this.SendPropertyChanging();
					this._lookup_id = value;
					this.SendPropertyChanged("lookup_id");
					this.Onlookup_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_value", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string value
		{
			get
			{
				return this._value;
			}
			set
			{
				if ((this._value != value))
				{
					this.OnvalueChanging(value);
					this.SendPropertyChanging();
					this._value = value;
					this.SendPropertyChanged("value");
					this.OnvalueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active", DbType="TinyInt NOT NULL")]
		public byte active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="lookup_media", Storage="_medias", ThisKey="lookup_key", OtherKey="mediatype_lookup")]
		public EntitySet<media> medias
		{
			get
			{
				return this._medias;
			}
			set
			{
				this._medias.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="lookup_media_link", Storage="_media_links", ThisKey="lookup_key", OtherKey="linktype_lookup")]
		public EntitySet<media_link> media_links
		{
			get
			{
				return this._media_links;
			}
			set
			{
				this._media_links.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="lookup_keyvalue", Storage="_keyvalues", ThisKey="lookup_key", OtherKey="link_lookup")]
		public EntitySet<keyvalue> keyvalues
		{
			get
			{
				return this._keyvalues;
			}
			set
			{
				this._keyvalues.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="lookup_keyvalue1", Storage="_keyvalues1", ThisKey="lookup_key", OtherKey="key_lookup")]
		public EntitySet<keyvalue> keyvalues1
		{
			get
			{
				return this._keyvalues1;
			}
			set
			{
				this._keyvalues1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="lookup_marketingsite", Storage="_marketingsites", ThisKey="lookup_key", OtherKey="template_lookup")]
		public EntitySet<marketingsite> marketingsites
		{
			get
			{
				return this._marketingsites;
			}
			set
			{
				this._marketingsites.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_medias(media entity)
		{
			this.SendPropertyChanging();
			entity.lookup = this;
		}
		
		private void detach_medias(media entity)
		{
			this.SendPropertyChanging();
			entity.lookup = null;
		}
		
		private void attach_media_links(media_link entity)
		{
			this.SendPropertyChanging();
			entity.lookup = this;
		}
		
		private void detach_media_links(media_link entity)
		{
			this.SendPropertyChanging();
			entity.lookup = null;
		}
		
		private void attach_keyvalues(keyvalue entity)
		{
			this.SendPropertyChanging();
			entity.lookup = this;
		}
		
		private void detach_keyvalues(keyvalue entity)
		{
			this.SendPropertyChanging();
			entity.lookup = null;
		}
		
		private void attach_keyvalues1(keyvalue entity)
		{
			this.SendPropertyChanging();
			entity.lookup1 = this;
		}
		
		private void detach_keyvalues1(keyvalue entity)
		{
			this.SendPropertyChanging();
			entity.lookup1 = null;
		}
		
		private void attach_marketingsites(marketingsite entity)
		{
			this.SendPropertyChanging();
			entity.lookup = this;
		}
		
		private void detach_marketingsites(marketingsite entity)
		{
			this.SendPropertyChanging();
			entity.lookup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.media")]
	public partial class media : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _media_key;
		
		private string _title;
		
		private string _description;
		
		private string _filename;
		
		private int _mediatype_lookup;
		
		private bool _active;
		
		private string _link;
		
		private System.Nullable<int> _site_fkey;
		
		private EntitySet<media_link> _media_links;
		
		private EntityRef<lookup> _lookup;
		
		private EntityRef<site> _site;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onmedia_keyChanging(int value);
    partial void Onmedia_keyChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnfilenameChanging(string value);
    partial void OnfilenameChanged();
    partial void Onmediatype_lookupChanging(int value);
    partial void Onmediatype_lookupChanged();
    partial void OnactiveChanging(bool value);
    partial void OnactiveChanged();
    partial void OnlinkChanging(string value);
    partial void OnlinkChanged();
    partial void Onsite_fkeyChanging(System.Nullable<int> value);
    partial void Onsite_fkeyChanged();
    #endregion
		
		public media()
		{
			this._media_links = new EntitySet<media_link>(new Action<media_link>(this.attach_media_links), new Action<media_link>(this.detach_media_links));
			this._lookup = default(EntityRef<lookup>);
			this._site = default(EntityRef<site>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_media_key", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int media_key
		{
			get
			{
				return this._media_key;
			}
			set
			{
				if ((this._media_key != value))
				{
					this.Onmedia_keyChanging(value);
					this.SendPropertyChanging();
					this._media_key = value;
					this.SendPropertyChanged("media_key");
					this.Onmedia_keyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_filename", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string filename
		{
			get
			{
				return this._filename;
			}
			set
			{
				if ((this._filename != value))
				{
					this.OnfilenameChanging(value);
					this.SendPropertyChanging();
					this._filename = value;
					this.SendPropertyChanged("filename");
					this.OnfilenameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mediatype_lookup", DbType="Int NOT NULL")]
		public int mediatype_lookup
		{
			get
			{
				return this._mediatype_lookup;
			}
			set
			{
				if ((this._mediatype_lookup != value))
				{
					if (this._lookup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onmediatype_lookupChanging(value);
					this.SendPropertyChanging();
					this._mediatype_lookup = value;
					this.SendPropertyChanged("mediatype_lookup");
					this.Onmediatype_lookupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active", DbType="Bit NOT NULL")]
		public bool active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_link", DbType="NVarChar(MAX)")]
		public string link
		{
			get
			{
				return this._link;
			}
			set
			{
				if ((this._link != value))
				{
					this.OnlinkChanging(value);
					this.SendPropertyChanging();
					this._link = value;
					this.SendPropertyChanged("link");
					this.OnlinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_site_fkey", DbType="Int")]
		public System.Nullable<int> site_fkey
		{
			get
			{
				return this._site_fkey;
			}
			set
			{
				if ((this._site_fkey != value))
				{
					if (this._site.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onsite_fkeyChanging(value);
					this.SendPropertyChanging();
					this._site_fkey = value;
					this.SendPropertyChanged("site_fkey");
					this.Onsite_fkeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="media_media_link", Storage="_media_links", ThisKey="media_key", OtherKey="media_fkey")]
		public EntitySet<media_link> media_links
		{
			get
			{
				return this._media_links;
			}
			set
			{
				this._media_links.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="lookup_media", Storage="_lookup", ThisKey="mediatype_lookup", OtherKey="lookup_key", IsForeignKey=true)]
		public lookup lookup
		{
			get
			{
				return this._lookup.Entity;
			}
			set
			{
				lookup previousValue = this._lookup.Entity;
				if (((previousValue != value) 
							|| (this._lookup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._lookup.Entity = null;
						previousValue.medias.Remove(this);
					}
					this._lookup.Entity = value;
					if ((value != null))
					{
						value.medias.Add(this);
						this._mediatype_lookup = value.lookup_key;
					}
					else
					{
						this._mediatype_lookup = default(int);
					}
					this.SendPropertyChanged("lookup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="site_media", Storage="_site", ThisKey="site_fkey", OtherKey="site_key", IsForeignKey=true)]
		public site site
		{
			get
			{
				return this._site.Entity;
			}
			set
			{
				site previousValue = this._site.Entity;
				if (((previousValue != value) 
							|| (this._site.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._site.Entity = null;
						previousValue.medias.Remove(this);
					}
					this._site.Entity = value;
					if ((value != null))
					{
						value.medias.Add(this);
						this._site_fkey = value.site_key;
					}
					else
					{
						this._site_fkey = default(Nullable<int>);
					}
					this.SendPropertyChanged("site");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_media_links(media_link entity)
		{
			this.SendPropertyChanging();
			entity.media = this;
		}
		
		private void detach_media_links(media_link entity)
		{
			this.SendPropertyChanging();
			entity.media = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.media_links")]
	public partial class media_link : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _medialink_key;
		
		private int _media_fkey;
		
		private int _link_fkey;
		
		private int _linktype_lookup;
		
		private System.Nullable<int> _site_fkey;
		
		private EntityRef<lookup> _lookup;
		
		private EntityRef<media> _media;
		
		private EntityRef<site> _site;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onmedialink_keyChanging(int value);
    partial void Onmedialink_keyChanged();
    partial void Onmedia_fkeyChanging(int value);
    partial void Onmedia_fkeyChanged();
    partial void Onlink_fkeyChanging(int value);
    partial void Onlink_fkeyChanged();
    partial void Onlinktype_lookupChanging(int value);
    partial void Onlinktype_lookupChanged();
    partial void Onsite_fkeyChanging(System.Nullable<int> value);
    partial void Onsite_fkeyChanged();
    #endregion
		
		public media_link()
		{
			this._lookup = default(EntityRef<lookup>);
			this._media = default(EntityRef<media>);
			this._site = default(EntityRef<site>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_medialink_key", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int medialink_key
		{
			get
			{
				return this._medialink_key;
			}
			set
			{
				if ((this._medialink_key != value))
				{
					this.Onmedialink_keyChanging(value);
					this.SendPropertyChanging();
					this._medialink_key = value;
					this.SendPropertyChanged("medialink_key");
					this.Onmedialink_keyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_media_fkey", DbType="Int NOT NULL")]
		public int media_fkey
		{
			get
			{
				return this._media_fkey;
			}
			set
			{
				if ((this._media_fkey != value))
				{
					if (this._media.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onmedia_fkeyChanging(value);
					this.SendPropertyChanging();
					this._media_fkey = value;
					this.SendPropertyChanged("media_fkey");
					this.Onmedia_fkeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_link_fkey", DbType="Int NOT NULL")]
		public int link_fkey
		{
			get
			{
				return this._link_fkey;
			}
			set
			{
				if ((this._link_fkey != value))
				{
					this.Onlink_fkeyChanging(value);
					this.SendPropertyChanging();
					this._link_fkey = value;
					this.SendPropertyChanged("link_fkey");
					this.Onlink_fkeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_linktype_lookup", DbType="Int NOT NULL")]
		public int linktype_lookup
		{
			get
			{
				return this._linktype_lookup;
			}
			set
			{
				if ((this._linktype_lookup != value))
				{
					if (this._lookup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onlinktype_lookupChanging(value);
					this.SendPropertyChanging();
					this._linktype_lookup = value;
					this.SendPropertyChanged("linktype_lookup");
					this.Onlinktype_lookupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_site_fkey", DbType="Int")]
		public System.Nullable<int> site_fkey
		{
			get
			{
				return this._site_fkey;
			}
			set
			{
				if ((this._site_fkey != value))
				{
					if (this._site.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onsite_fkeyChanging(value);
					this.SendPropertyChanging();
					this._site_fkey = value;
					this.SendPropertyChanged("site_fkey");
					this.Onsite_fkeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="lookup_media_link", Storage="_lookup", ThisKey="linktype_lookup", OtherKey="lookup_key", IsForeignKey=true)]
		public lookup lookup
		{
			get
			{
				return this._lookup.Entity;
			}
			set
			{
				lookup previousValue = this._lookup.Entity;
				if (((previousValue != value) 
							|| (this._lookup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._lookup.Entity = null;
						previousValue.media_links.Remove(this);
					}
					this._lookup.Entity = value;
					if ((value != null))
					{
						value.media_links.Add(this);
						this._linktype_lookup = value.lookup_key;
					}
					else
					{
						this._linktype_lookup = default(int);
					}
					this.SendPropertyChanged("lookup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="media_media_link", Storage="_media", ThisKey="media_fkey", OtherKey="media_key", IsForeignKey=true)]
		public media media
		{
			get
			{
				return this._media.Entity;
			}
			set
			{
				media previousValue = this._media.Entity;
				if (((previousValue != value) 
							|| (this._media.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._media.Entity = null;
						previousValue.media_links.Remove(this);
					}
					this._media.Entity = value;
					if ((value != null))
					{
						value.media_links.Add(this);
						this._media_fkey = value.media_key;
					}
					else
					{
						this._media_fkey = default(int);
					}
					this.SendPropertyChanged("media");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="site_media_link", Storage="_site", ThisKey="site_fkey", OtherKey="site_key", IsForeignKey=true)]
		public site site
		{
			get
			{
				return this._site.Entity;
			}
			set
			{
				site previousValue = this._site.Entity;
				if (((previousValue != value) 
							|| (this._site.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._site.Entity = null;
						previousValue.media_links.Remove(this);
					}
					this._site.Entity = value;
					if ((value != null))
					{
						value.media_links.Add(this);
						this._site_fkey = value.site_key;
					}
					else
					{
						this._site_fkey = default(Nullable<int>);
					}
					this.SendPropertyChanged("site");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NewsletterReciprients")]
	public partial class NewsletterReciprient : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _reciprient_key;
		
		private string _name;
		
		private string _email;
		
		private bool _active;
		
		private bool _confirmed;
		
		private System.Nullable<int> _site_fkey;
		
		private EntityRef<site> _site;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onreciprient_keyChanging(int value);
    partial void Onreciprient_keyChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnactiveChanging(bool value);
    partial void OnactiveChanged();
    partial void OnconfirmedChanging(bool value);
    partial void OnconfirmedChanged();
    partial void Onsite_fkeyChanging(System.Nullable<int> value);
    partial void Onsite_fkeyChanged();
    #endregion
		
		public NewsletterReciprient()
		{
			this._site = default(EntityRef<site>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reciprient_key", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int reciprient_key
		{
			get
			{
				return this._reciprient_key;
			}
			set
			{
				if ((this._reciprient_key != value))
				{
					this.Onreciprient_keyChanging(value);
					this.SendPropertyChanging();
					this._reciprient_key = value;
					this.SendPropertyChanged("reciprient_key");
					this.Onreciprient_keyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active", DbType="Bit NOT NULL")]
		public bool active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_confirmed", DbType="Bit NOT NULL")]
		public bool confirmed
		{
			get
			{
				return this._confirmed;
			}
			set
			{
				if ((this._confirmed != value))
				{
					this.OnconfirmedChanging(value);
					this.SendPropertyChanging();
					this._confirmed = value;
					this.SendPropertyChanged("confirmed");
					this.OnconfirmedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_site_fkey", DbType="Int")]
		public System.Nullable<int> site_fkey
		{
			get
			{
				return this._site_fkey;
			}
			set
			{
				if ((this._site_fkey != value))
				{
					if (this._site.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onsite_fkeyChanging(value);
					this.SendPropertyChanging();
					this._site_fkey = value;
					this.SendPropertyChanged("site_fkey");
					this.Onsite_fkeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="site_NewsletterReciprient", Storage="_site", ThisKey="site_fkey", OtherKey="site_key", IsForeignKey=true)]
		public site site
		{
			get
			{
				return this._site.Entity;
			}
			set
			{
				site previousValue = this._site.Entity;
				if (((previousValue != value) 
							|| (this._site.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._site.Entity = null;
						previousValue.NewsletterReciprients.Remove(this);
					}
					this._site.Entity = value;
					if ((value != null))
					{
						value.NewsletterReciprients.Add(this);
						this._site_fkey = value.site_key;
					}
					else
					{
						this._site_fkey = default(Nullable<int>);
					}
					this.SendPropertyChanged("site");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Newsletters")]
	public partial class Newsletter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _newsletter_key;
		
		private string _subject;
		
		private string _body;
		
		private System.Nullable<System.DateTime> _date_sent;
		
		private System.DateTime _date_created;
		
		private System.Nullable<int> _site_fkey;
		
		private EntityRef<site> _site;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onnewsletter_keyChanging(int value);
    partial void Onnewsletter_keyChanged();
    partial void OnsubjectChanging(string value);
    partial void OnsubjectChanged();
    partial void OnbodyChanging(string value);
    partial void OnbodyChanged();
    partial void Ondate_sentChanging(System.Nullable<System.DateTime> value);
    partial void Ondate_sentChanged();
    partial void Ondate_createdChanging(System.DateTime value);
    partial void Ondate_createdChanged();
    partial void Onsite_fkeyChanging(System.Nullable<int> value);
    partial void Onsite_fkeyChanged();
    #endregion
		
		public Newsletter()
		{
			this._site = default(EntityRef<site>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_newsletter_key", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int newsletter_key
		{
			get
			{
				return this._newsletter_key;
			}
			set
			{
				if ((this._newsletter_key != value))
				{
					this.Onnewsletter_keyChanging(value);
					this.SendPropertyChanging();
					this._newsletter_key = value;
					this.SendPropertyChanged("newsletter_key");
					this.Onnewsletter_keyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subject", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string subject
		{
			get
			{
				return this._subject;
			}
			set
			{
				if ((this._subject != value))
				{
					this.OnsubjectChanging(value);
					this.SendPropertyChanging();
					this._subject = value;
					this.SendPropertyChanged("subject");
					this.OnsubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_body", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string body
		{
			get
			{
				return this._body;
			}
			set
			{
				if ((this._body != value))
				{
					this.OnbodyChanging(value);
					this.SendPropertyChanging();
					this._body = value;
					this.SendPropertyChanged("body");
					this.OnbodyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_sent", DbType="DateTime")]
		public System.Nullable<System.DateTime> date_sent
		{
			get
			{
				return this._date_sent;
			}
			set
			{
				if ((this._date_sent != value))
				{
					this.Ondate_sentChanging(value);
					this.SendPropertyChanging();
					this._date_sent = value;
					this.SendPropertyChanged("date_sent");
					this.Ondate_sentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_created", DbType="DateTime NOT NULL")]
		public System.DateTime date_created
		{
			get
			{
				return this._date_created;
			}
			set
			{
				if ((this._date_created != value))
				{
					this.Ondate_createdChanging(value);
					this.SendPropertyChanging();
					this._date_created = value;
					this.SendPropertyChanged("date_created");
					this.Ondate_createdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_site_fkey", DbType="Int")]
		public System.Nullable<int> site_fkey
		{
			get
			{
				return this._site_fkey;
			}
			set
			{
				if ((this._site_fkey != value))
				{
					if (this._site.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onsite_fkeyChanging(value);
					this.SendPropertyChanging();
					this._site_fkey = value;
					this.SendPropertyChanged("site_fkey");
					this.Onsite_fkeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="site_Newsletter", Storage="_site", ThisKey="site_fkey", OtherKey="site_key", IsForeignKey=true)]
		public site site
		{
			get
			{
				return this._site.Entity;
			}
			set
			{
				site previousValue = this._site.Entity;
				if (((previousValue != value) 
							|| (this._site.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._site.Entity = null;
						previousValue.Newsletters.Remove(this);
					}
					this._site.Entity = value;
					if ((value != null))
					{
						value.Newsletters.Add(this);
						this._site_fkey = value.site_key;
					}
					else
					{
						this._site_fkey = default(Nullable<int>);
					}
					this.SendPropertyChanged("site");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.offers")]
	public partial class offer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _offer_key;
		
		private string _title;
		
		private string _description;
		
		private System.Nullable<System.DateTime> _offer_start;
		
		private System.Nullable<System.DateTime> _offer_end;
		
		private bool _active;
		
		private bool _showonhome;
		
		private bool _showinfeed;
		
		private string _url;
		
		private string _shortdescription;
		
		private string _thumbnailimage;
		
		private System.Nullable<int> _site_fkey;
		
		private EntityRef<site> _site;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onoffer_keyChanging(int value);
    partial void Onoffer_keyChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void Onoffer_startChanging(System.Nullable<System.DateTime> value);
    partial void Onoffer_startChanged();
    partial void Onoffer_endChanging(System.Nullable<System.DateTime> value);
    partial void Onoffer_endChanged();
    partial void OnactiveChanging(bool value);
    partial void OnactiveChanged();
    partial void OnshowonhomeChanging(bool value);
    partial void OnshowonhomeChanged();
    partial void OnshowinfeedChanging(bool value);
    partial void OnshowinfeedChanged();
    partial void OnurlChanging(string value);
    partial void OnurlChanged();
    partial void OnshortdescriptionChanging(string value);
    partial void OnshortdescriptionChanged();
    partial void OnthumbnailimageChanging(string value);
    partial void OnthumbnailimageChanged();
    partial void Onsite_fkeyChanging(System.Nullable<int> value);
    partial void Onsite_fkeyChanged();
    #endregion
		
		public offer()
		{
			this._site = default(EntityRef<site>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_offer_key", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int offer_key
		{
			get
			{
				return this._offer_key;
			}
			set
			{
				if ((this._offer_key != value))
				{
					this.Onoffer_keyChanging(value);
					this.SendPropertyChanging();
					this._offer_key = value;
					this.SendPropertyChanged("offer_key");
					this.Onoffer_keyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_offer_start", DbType="Date")]
		public System.Nullable<System.DateTime> offer_start
		{
			get
			{
				return this._offer_start;
			}
			set
			{
				if ((this._offer_start != value))
				{
					this.Onoffer_startChanging(value);
					this.SendPropertyChanging();
					this._offer_start = value;
					this.SendPropertyChanged("offer_start");
					this.Onoffer_startChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_offer_end", DbType="Date")]
		public System.Nullable<System.DateTime> offer_end
		{
			get
			{
				return this._offer_end;
			}
			set
			{
				if ((this._offer_end != value))
				{
					this.Onoffer_endChanging(value);
					this.SendPropertyChanging();
					this._offer_end = value;
					this.SendPropertyChanged("offer_end");
					this.Onoffer_endChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active", DbType="Bit NOT NULL")]
		public bool active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_showonhome", DbType="Bit NOT NULL")]
		public bool showonhome
		{
			get
			{
				return this._showonhome;
			}
			set
			{
				if ((this._showonhome != value))
				{
					this.OnshowonhomeChanging(value);
					this.SendPropertyChanging();
					this._showonhome = value;
					this.SendPropertyChanged("showonhome");
					this.OnshowonhomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_showinfeed", DbType="Bit NOT NULL")]
		public bool showinfeed
		{
			get
			{
				return this._showinfeed;
			}
			set
			{
				if ((this._showinfeed != value))
				{
					this.OnshowinfeedChanging(value);
					this.SendPropertyChanging();
					this._showinfeed = value;
					this.SendPropertyChanged("showinfeed");
					this.OnshowinfeedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_url", DbType="NVarChar(MAX)")]
		public string url
		{
			get
			{
				return this._url;
			}
			set
			{
				if ((this._url != value))
				{
					this.OnurlChanging(value);
					this.SendPropertyChanging();
					this._url = value;
					this.SendPropertyChanged("url");
					this.OnurlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shortdescription", DbType="NVarChar(MAX)")]
		public string shortdescription
		{
			get
			{
				return this._shortdescription;
			}
			set
			{
				if ((this._shortdescription != value))
				{
					this.OnshortdescriptionChanging(value);
					this.SendPropertyChanging();
					this._shortdescription = value;
					this.SendPropertyChanged("shortdescription");
					this.OnshortdescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_thumbnailimage", DbType="NVarChar(50)")]
		public string thumbnailimage
		{
			get
			{
				return this._thumbnailimage;
			}
			set
			{
				if ((this._thumbnailimage != value))
				{
					this.OnthumbnailimageChanging(value);
					this.SendPropertyChanging();
					this._thumbnailimage = value;
					this.SendPropertyChanged("thumbnailimage");
					this.OnthumbnailimageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_site_fkey", DbType="Int")]
		public System.Nullable<int> site_fkey
		{
			get
			{
				return this._site_fkey;
			}
			set
			{
				if ((this._site_fkey != value))
				{
					if (this._site.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onsite_fkeyChanging(value);
					this.SendPropertyChanging();
					this._site_fkey = value;
					this.SendPropertyChanged("site_fkey");
					this.Onsite_fkeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="site_offer", Storage="_site", ThisKey="site_fkey", OtherKey="site_key", IsForeignKey=true)]
		public site site
		{
			get
			{
				return this._site.Entity;
			}
			set
			{
				site previousValue = this._site.Entity;
				if (((previousValue != value) 
							|| (this._site.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._site.Entity = null;
						previousValue.offers.Remove(this);
					}
					this._site.Entity = value;
					if ((value != null))
					{
						value.offers.Add(this);
						this._site_fkey = value.site_key;
					}
					else
					{
						this._site_fkey = default(Nullable<int>);
					}
					this.SendPropertyChanged("site");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.pages")]
	public partial class page : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _page_key;
		
		private System.Nullable<int> _page_fkey;
		
		private string _pageid;
		
		private string _navtitle;
		
		private System.Nullable<char> _accesskey;
		
		private string _metadescription;
		
		private string _metakeywords;
		
		private string _title;
		
		private string _body;
		
		private string _thumbnailimage;
		
		private System.Nullable<bool> _showinnav;
		
		private System.Nullable<bool> _showinfeaturednav;
		
		private System.Nullable<bool> _showonhome;
		
		private System.Nullable<bool> _showinfooter;
		
		private System.Nullable<bool> _active;
		
		private System.Nullable<int> _sortorder;
		
		private string _linkurl;
		
		private System.DateTime _lastmodified;
		
		private string _page_url;
		
		private System.Nullable<bool> _passwordprotect;
		
		private string _password;
		
		private System.Nullable<int> _site_fkey;
		
		private EntityRef<site> _site;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onpage_keyChanging(int value);
    partial void Onpage_keyChanged();
    partial void Onpage_fkeyChanging(System.Nullable<int> value);
    partial void Onpage_fkeyChanged();
    partial void OnpageidChanging(string value);
    partial void OnpageidChanged();
    partial void OnnavtitleChanging(string value);
    partial void OnnavtitleChanged();
    partial void OnaccesskeyChanging(System.Nullable<char> value);
    partial void OnaccesskeyChanged();
    partial void OnmetadescriptionChanging(string value);
    partial void OnmetadescriptionChanged();
    partial void OnmetakeywordsChanging(string value);
    partial void OnmetakeywordsChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OnbodyChanging(string value);
    partial void OnbodyChanged();
    partial void OnthumbnailimageChanging(string value);
    partial void OnthumbnailimageChanged();
    partial void OnshowinnavChanging(System.Nullable<bool> value);
    partial void OnshowinnavChanged();
    partial void OnshowinfeaturednavChanging(System.Nullable<bool> value);
    partial void OnshowinfeaturednavChanged();
    partial void OnshowonhomeChanging(System.Nullable<bool> value);
    partial void OnshowonhomeChanged();
    partial void OnshowinfooterChanging(System.Nullable<bool> value);
    partial void OnshowinfooterChanged();
    partial void OnactiveChanging(System.Nullable<bool> value);
    partial void OnactiveChanged();
    partial void OnsortorderChanging(System.Nullable<int> value);
    partial void OnsortorderChanged();
    partial void OnlinkurlChanging(string value);
    partial void OnlinkurlChanged();
    partial void OnlastmodifiedChanging(System.DateTime value);
    partial void OnlastmodifiedChanged();
    partial void Onpage_urlChanging(string value);
    partial void Onpage_urlChanged();
    partial void OnpasswordprotectChanging(System.Nullable<bool> value);
    partial void OnpasswordprotectChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void Onsite_fkeyChanging(System.Nullable<int> value);
    partial void Onsite_fkeyChanged();
    #endregion
		
		public page()
		{
			this._site = default(EntityRef<site>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_page_key", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int page_key
		{
			get
			{
				return this._page_key;
			}
			set
			{
				if ((this._page_key != value))
				{
					this.Onpage_keyChanging(value);
					this.SendPropertyChanging();
					this._page_key = value;
					this.SendPropertyChanged("page_key");
					this.Onpage_keyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_page_fkey", DbType="Int")]
		public System.Nullable<int> page_fkey
		{
			get
			{
				return this._page_fkey;
			}
			set
			{
				if ((this._page_fkey != value))
				{
					this.Onpage_fkeyChanging(value);
					this.SendPropertyChanging();
					this._page_fkey = value;
					this.SendPropertyChanged("page_fkey");
					this.Onpage_fkeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pageid", DbType="NVarChar(50)")]
		public string pageid
		{
			get
			{
				return this._pageid;
			}
			set
			{
				if ((this._pageid != value))
				{
					this.OnpageidChanging(value);
					this.SendPropertyChanging();
					this._pageid = value;
					this.SendPropertyChanged("pageid");
					this.OnpageidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_navtitle", DbType="NVarChar(50)")]
		public string navtitle
		{
			get
			{
				return this._navtitle;
			}
			set
			{
				if ((this._navtitle != value))
				{
					this.OnnavtitleChanging(value);
					this.SendPropertyChanging();
					this._navtitle = value;
					this.SendPropertyChanged("navtitle");
					this.OnnavtitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_accesskey", DbType="NChar(1)")]
		public System.Nullable<char> accesskey
		{
			get
			{
				return this._accesskey;
			}
			set
			{
				if ((this._accesskey != value))
				{
					this.OnaccesskeyChanging(value);
					this.SendPropertyChanging();
					this._accesskey = value;
					this.SendPropertyChanged("accesskey");
					this.OnaccesskeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_metadescription", DbType="NVarChar(MAX)")]
		public string metadescription
		{
			get
			{
				return this._metadescription;
			}
			set
			{
				if ((this._metadescription != value))
				{
					this.OnmetadescriptionChanging(value);
					this.SendPropertyChanging();
					this._metadescription = value;
					this.SendPropertyChanged("metadescription");
					this.OnmetadescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_metakeywords", DbType="NVarChar(MAX)")]
		public string metakeywords
		{
			get
			{
				return this._metakeywords;
			}
			set
			{
				if ((this._metakeywords != value))
				{
					this.OnmetakeywordsChanging(value);
					this.SendPropertyChanging();
					this._metakeywords = value;
					this.SendPropertyChanged("metakeywords");
					this.OnmetakeywordsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(50)")]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_body", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string body
		{
			get
			{
				return this._body;
			}
			set
			{
				if ((this._body != value))
				{
					this.OnbodyChanging(value);
					this.SendPropertyChanging();
					this._body = value;
					this.SendPropertyChanged("body");
					this.OnbodyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_thumbnailimage", DbType="NVarChar(128)")]
		public string thumbnailimage
		{
			get
			{
				return this._thumbnailimage;
			}
			set
			{
				if ((this._thumbnailimage != value))
				{
					this.OnthumbnailimageChanging(value);
					this.SendPropertyChanging();
					this._thumbnailimage = value;
					this.SendPropertyChanged("thumbnailimage");
					this.OnthumbnailimageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_showinnav", DbType="Bit")]
		public System.Nullable<bool> showinnav
		{
			get
			{
				return this._showinnav;
			}
			set
			{
				if ((this._showinnav != value))
				{
					this.OnshowinnavChanging(value);
					this.SendPropertyChanging();
					this._showinnav = value;
					this.SendPropertyChanged("showinnav");
					this.OnshowinnavChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_showinfeaturednav", DbType="Bit")]
		public System.Nullable<bool> showinfeaturednav
		{
			get
			{
				return this._showinfeaturednav;
			}
			set
			{
				if ((this._showinfeaturednav != value))
				{
					this.OnshowinfeaturednavChanging(value);
					this.SendPropertyChanging();
					this._showinfeaturednav = value;
					this.SendPropertyChanged("showinfeaturednav");
					this.OnshowinfeaturednavChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_showonhome", DbType="Bit")]
		public System.Nullable<bool> showonhome
		{
			get
			{
				return this._showonhome;
			}
			set
			{
				if ((this._showonhome != value))
				{
					this.OnshowonhomeChanging(value);
					this.SendPropertyChanging();
					this._showonhome = value;
					this.SendPropertyChanged("showonhome");
					this.OnshowonhomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_showinfooter", DbType="Bit")]
		public System.Nullable<bool> showinfooter
		{
			get
			{
				return this._showinfooter;
			}
			set
			{
				if ((this._showinfooter != value))
				{
					this.OnshowinfooterChanging(value);
					this.SendPropertyChanging();
					this._showinfooter = value;
					this.SendPropertyChanged("showinfooter");
					this.OnshowinfooterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active", DbType="Bit")]
		public System.Nullable<bool> active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sortorder", DbType="Int")]
		public System.Nullable<int> sortorder
		{
			get
			{
				return this._sortorder;
			}
			set
			{
				if ((this._sortorder != value))
				{
					this.OnsortorderChanging(value);
					this.SendPropertyChanging();
					this._sortorder = value;
					this.SendPropertyChanged("sortorder");
					this.OnsortorderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_linkurl", DbType="NVarChar(50)")]
		public string linkurl
		{
			get
			{
				return this._linkurl;
			}
			set
			{
				if ((this._linkurl != value))
				{
					this.OnlinkurlChanging(value);
					this.SendPropertyChanging();
					this._linkurl = value;
					this.SendPropertyChanged("linkurl");
					this.OnlinkurlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastmodified", DbType="DateTime NOT NULL")]
		public System.DateTime lastmodified
		{
			get
			{
				return this._lastmodified;
			}
			set
			{
				if ((this._lastmodified != value))
				{
					this.OnlastmodifiedChanging(value);
					this.SendPropertyChanging();
					this._lastmodified = value;
					this.SendPropertyChanged("lastmodified");
					this.OnlastmodifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_page_url", DbType="NVarChar(MAX)")]
		public string page_url
		{
			get
			{
				return this._page_url;
			}
			set
			{
				if ((this._page_url != value))
				{
					this.Onpage_urlChanging(value);
					this.SendPropertyChanging();
					this._page_url = value;
					this.SendPropertyChanged("page_url");
					this.Onpage_urlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_passwordprotect", DbType="Bit")]
		public System.Nullable<bool> passwordprotect
		{
			get
			{
				return this._passwordprotect;
			}
			set
			{
				if ((this._passwordprotect != value))
				{
					this.OnpasswordprotectChanging(value);
					this.SendPropertyChanging();
					this._passwordprotect = value;
					this.SendPropertyChanged("passwordprotect");
					this.OnpasswordprotectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="NVarChar(12)")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_site_fkey", DbType="Int")]
		public System.Nullable<int> site_fkey
		{
			get
			{
				return this._site_fkey;
			}
			set
			{
				if ((this._site_fkey != value))
				{
					if (this._site.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onsite_fkeyChanging(value);
					this.SendPropertyChanging();
					this._site_fkey = value;
					this.SendPropertyChanged("site_fkey");
					this.Onsite_fkeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="site_page", Storage="_site", ThisKey="site_fkey", OtherKey="site_key", IsForeignKey=true)]
		public site site
		{
			get
			{
				return this._site.Entity;
			}
			set
			{
				site previousValue = this._site.Entity;
				if (((previousValue != value) 
							|| (this._site.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._site.Entity = null;
						previousValue.pages.Remove(this);
					}
					this._site.Entity = value;
					if ((value != null))
					{
						value.pages.Add(this);
						this._site_fkey = value.site_key;
					}
					else
					{
						this._site_fkey = default(Nullable<int>);
					}
					this.SendPropertyChanged("site");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.projects")]
	public partial class project : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _project_key;
		
		private string _title;
		
		private string _description;
		
		private System.Nullable<System.DateTime> _start_date;
		
		private System.Nullable<System.DateTime> _end_date;
		
		private bool _active;
		
		private bool _include_in_rss;
		
		private string _photogallery_id;
		
		private string _video_id;
		
		private string _url;
		
		private System.Nullable<int> _site_fkey;
		
		private EntitySet<testimony> _testimonies;
		
		private EntityRef<site> _site;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onproject_keyChanging(int value);
    partial void Onproject_keyChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void Onstart_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onstart_dateChanged();
    partial void Onend_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onend_dateChanged();
    partial void OnactiveChanging(bool value);
    partial void OnactiveChanged();
    partial void Oninclude_in_rssChanging(bool value);
    partial void Oninclude_in_rssChanged();
    partial void Onphotogallery_idChanging(string value);
    partial void Onphotogallery_idChanged();
    partial void Onvideo_idChanging(string value);
    partial void Onvideo_idChanged();
    partial void OnurlChanging(string value);
    partial void OnurlChanged();
    partial void Onsite_fkeyChanging(System.Nullable<int> value);
    partial void Onsite_fkeyChanged();
    #endregion
		
		public project()
		{
			this._testimonies = new EntitySet<testimony>(new Action<testimony>(this.attach_testimonies), new Action<testimony>(this.detach_testimonies));
			this._site = default(EntityRef<site>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_project_key", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int project_key
		{
			get
			{
				return this._project_key;
			}
			set
			{
				if ((this._project_key != value))
				{
					this.Onproject_keyChanging(value);
					this.SendPropertyChanging();
					this._project_key = value;
					this.SendPropertyChanged("project_key");
					this.Onproject_keyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_start_date", DbType="Date")]
		public System.Nullable<System.DateTime> start_date
		{
			get
			{
				return this._start_date;
			}
			set
			{
				if ((this._start_date != value))
				{
					this.Onstart_dateChanging(value);
					this.SendPropertyChanging();
					this._start_date = value;
					this.SendPropertyChanged("start_date");
					this.Onstart_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_end_date", DbType="Date")]
		public System.Nullable<System.DateTime> end_date
		{
			get
			{
				return this._end_date;
			}
			set
			{
				if ((this._end_date != value))
				{
					this.Onend_dateChanging(value);
					this.SendPropertyChanging();
					this._end_date = value;
					this.SendPropertyChanged("end_date");
					this.Onend_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active", DbType="Bit NOT NULL")]
		public bool active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_include_in_rss", DbType="Bit NOT NULL")]
		public bool include_in_rss
		{
			get
			{
				return this._include_in_rss;
			}
			set
			{
				if ((this._include_in_rss != value))
				{
					this.Oninclude_in_rssChanging(value);
					this.SendPropertyChanging();
					this._include_in_rss = value;
					this.SendPropertyChanged("include_in_rss");
					this.Oninclude_in_rssChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_photogallery_id", DbType="NVarChar(50)")]
		public string photogallery_id
		{
			get
			{
				return this._photogallery_id;
			}
			set
			{
				if ((this._photogallery_id != value))
				{
					this.Onphotogallery_idChanging(value);
					this.SendPropertyChanging();
					this._photogallery_id = value;
					this.SendPropertyChanged("photogallery_id");
					this.Onphotogallery_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_video_id", DbType="NVarChar(50)")]
		public string video_id
		{
			get
			{
				return this._video_id;
			}
			set
			{
				if ((this._video_id != value))
				{
					this.Onvideo_idChanging(value);
					this.SendPropertyChanging();
					this._video_id = value;
					this.SendPropertyChanged("video_id");
					this.Onvideo_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_url", DbType="NVarChar(MAX)")]
		public string url
		{
			get
			{
				return this._url;
			}
			set
			{
				if ((this._url != value))
				{
					this.OnurlChanging(value);
					this.SendPropertyChanging();
					this._url = value;
					this.SendPropertyChanged("url");
					this.OnurlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_site_fkey", DbType="Int")]
		public System.Nullable<int> site_fkey
		{
			get
			{
				return this._site_fkey;
			}
			set
			{
				if ((this._site_fkey != value))
				{
					if (this._site.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onsite_fkeyChanging(value);
					this.SendPropertyChanging();
					this._site_fkey = value;
					this.SendPropertyChanged("site_fkey");
					this.Onsite_fkeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="project_testimony", Storage="_testimonies", ThisKey="project_key", OtherKey="project_fkey")]
		public EntitySet<testimony> testimonies
		{
			get
			{
				return this._testimonies;
			}
			set
			{
				this._testimonies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="site_project", Storage="_site", ThisKey="site_fkey", OtherKey="site_key", IsForeignKey=true)]
		public site site
		{
			get
			{
				return this._site.Entity;
			}
			set
			{
				site previousValue = this._site.Entity;
				if (((previousValue != value) 
							|| (this._site.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._site.Entity = null;
						previousValue.projects.Remove(this);
					}
					this._site.Entity = value;
					if ((value != null))
					{
						value.projects.Add(this);
						this._site_fkey = value.site_key;
					}
					else
					{
						this._site_fkey = default(Nullable<int>);
					}
					this.SendPropertyChanged("site");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_testimonies(testimony entity)
		{
			this.SendPropertyChanging();
			entity.project = this;
		}
		
		private void detach_testimonies(testimony entity)
		{
			this.SendPropertyChanging();
			entity.project = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.site_users")]
	public partial class site_user : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _siteuser_key;
		
		private int _site_fkey;
		
		private System.Guid _userid;
		
		private System.Guid _roleid;
		
		private bool _active;
		
		private EntityRef<aspnet_Role> _aspnet_Role;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
		private EntityRef<site> _site;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onsiteuser_keyChanging(int value);
    partial void Onsiteuser_keyChanged();
    partial void Onsite_fkeyChanging(int value);
    partial void Onsite_fkeyChanged();
    partial void OnuseridChanging(System.Guid value);
    partial void OnuseridChanged();
    partial void OnroleidChanging(System.Guid value);
    partial void OnroleidChanged();
    partial void OnactiveChanging(bool value);
    partial void OnactiveChanged();
    #endregion
		
		public site_user()
		{
			this._aspnet_Role = default(EntityRef<aspnet_Role>);
			this._aspnet_User = default(EntityRef<aspnet_User>);
			this._site = default(EntityRef<site>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_siteuser_key", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int siteuser_key
		{
			get
			{
				return this._siteuser_key;
			}
			set
			{
				if ((this._siteuser_key != value))
				{
					this.Onsiteuser_keyChanging(value);
					this.SendPropertyChanging();
					this._siteuser_key = value;
					this.SendPropertyChanged("siteuser_key");
					this.Onsiteuser_keyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_site_fkey", DbType="Int NOT NULL")]
		public int site_fkey
		{
			get
			{
				return this._site_fkey;
			}
			set
			{
				if ((this._site_fkey != value))
				{
					if (this._site.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onsite_fkeyChanging(value);
					this.SendPropertyChanging();
					this._site_fkey = value;
					this.SendPropertyChanged("site_fkey");
					this.Onsite_fkeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid userid
		{
			get
			{
				return this._userid;
			}
			set
			{
				if ((this._userid != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuseridChanging(value);
					this.SendPropertyChanging();
					this._userid = value;
					this.SendPropertyChanged("userid");
					this.OnuseridChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_roleid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid roleid
		{
			get
			{
				return this._roleid;
			}
			set
			{
				if ((this._roleid != value))
				{
					if (this._aspnet_Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnroleidChanging(value);
					this.SendPropertyChanging();
					this._roleid = value;
					this.SendPropertyChanged("roleid");
					this.OnroleidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active", DbType="Bit NOT NULL")]
		public bool active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Role_site_user", Storage="_aspnet_Role", ThisKey="roleid", OtherKey="RoleId", IsForeignKey=true)]
		public aspnet_Role aspnet_Role
		{
			get
			{
				return this._aspnet_Role.Entity;
			}
			set
			{
				aspnet_Role previousValue = this._aspnet_Role.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Role.Entity = null;
						previousValue.site_users.Remove(this);
					}
					this._aspnet_Role.Entity = value;
					if ((value != null))
					{
						value.site_users.Add(this);
						this._roleid = value.RoleId;
					}
					else
					{
						this._roleid = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Role");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_site_user", Storage="_aspnet_User", ThisKey="userid", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.site_users.Remove(this);
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.site_users.Add(this);
						this._userid = value.UserId;
					}
					else
					{
						this._userid = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="site_site_user", Storage="_site", ThisKey="site_fkey", OtherKey="site_key", IsForeignKey=true)]
		public site site
		{
			get
			{
				return this._site.Entity;
			}
			set
			{
				site previousValue = this._site.Entity;
				if (((previousValue != value) 
							|| (this._site.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._site.Entity = null;
						previousValue.site_users.Remove(this);
					}
					this._site.Entity = value;
					if ((value != null))
					{
						value.site_users.Add(this);
						this._site_fkey = value.site_key;
					}
					else
					{
						this._site_fkey = default(int);
					}
					this.SendPropertyChanged("site");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.sites")]
	public partial class site : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _site_key;
		
		private string _name;
		
		private string _hostname;
		
		private bool _active;
		
		private EntitySet<article> _articles;
		
		private EntitySet<banner> _banners;
		
		private EntitySet<media> _medias;
		
		private EntitySet<media_link> _media_links;
		
		private EntitySet<NewsletterReciprient> _NewsletterReciprients;
		
		private EntitySet<Newsletter> _Newsletters;
		
		private EntitySet<offer> _offers;
		
		private EntitySet<page> _pages;
		
		private EntitySet<project> _projects;
		
		private EntitySet<site_user> _site_users;
		
		private EntitySet<testimony> _testimonies;
		
		private EntitySet<marketingsite> _marketingsites;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onsite_keyChanging(int value);
    partial void Onsite_keyChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnhostnameChanging(string value);
    partial void OnhostnameChanged();
    partial void OnactiveChanging(bool value);
    partial void OnactiveChanged();
    #endregion
		
		public site()
		{
			this._articles = new EntitySet<article>(new Action<article>(this.attach_articles), new Action<article>(this.detach_articles));
			this._banners = new EntitySet<banner>(new Action<banner>(this.attach_banners), new Action<banner>(this.detach_banners));
			this._medias = new EntitySet<media>(new Action<media>(this.attach_medias), new Action<media>(this.detach_medias));
			this._media_links = new EntitySet<media_link>(new Action<media_link>(this.attach_media_links), new Action<media_link>(this.detach_media_links));
			this._NewsletterReciprients = new EntitySet<NewsletterReciprient>(new Action<NewsletterReciprient>(this.attach_NewsletterReciprients), new Action<NewsletterReciprient>(this.detach_NewsletterReciprients));
			this._Newsletters = new EntitySet<Newsletter>(new Action<Newsletter>(this.attach_Newsletters), new Action<Newsletter>(this.detach_Newsletters));
			this._offers = new EntitySet<offer>(new Action<offer>(this.attach_offers), new Action<offer>(this.detach_offers));
			this._pages = new EntitySet<page>(new Action<page>(this.attach_pages), new Action<page>(this.detach_pages));
			this._projects = new EntitySet<project>(new Action<project>(this.attach_projects), new Action<project>(this.detach_projects));
			this._site_users = new EntitySet<site_user>(new Action<site_user>(this.attach_site_users), new Action<site_user>(this.detach_site_users));
			this._testimonies = new EntitySet<testimony>(new Action<testimony>(this.attach_testimonies), new Action<testimony>(this.detach_testimonies));
			this._marketingsites = new EntitySet<marketingsite>(new Action<marketingsite>(this.attach_marketingsites), new Action<marketingsite>(this.detach_marketingsites));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_site_key", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int site_key
		{
			get
			{
				return this._site_key;
			}
			set
			{
				if ((this._site_key != value))
				{
					this.Onsite_keyChanging(value);
					this.SendPropertyChanging();
					this._site_key = value;
					this.SendPropertyChanged("site_key");
					this.Onsite_keyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hostname", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string hostname
		{
			get
			{
				return this._hostname;
			}
			set
			{
				if ((this._hostname != value))
				{
					this.OnhostnameChanging(value);
					this.SendPropertyChanging();
					this._hostname = value;
					this.SendPropertyChanged("hostname");
					this.OnhostnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active", DbType="Bit NOT NULL")]
		public bool active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="site_article", Storage="_articles", ThisKey="site_key", OtherKey="site_fkey")]
		public EntitySet<article> articles
		{
			get
			{
				return this._articles;
			}
			set
			{
				this._articles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="site_banner", Storage="_banners", ThisKey="site_key", OtherKey="site_fkey")]
		public EntitySet<banner> banners
		{
			get
			{
				return this._banners;
			}
			set
			{
				this._banners.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="site_media", Storage="_medias", ThisKey="site_key", OtherKey="site_fkey")]
		public EntitySet<media> medias
		{
			get
			{
				return this._medias;
			}
			set
			{
				this._medias.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="site_media_link", Storage="_media_links", ThisKey="site_key", OtherKey="site_fkey")]
		public EntitySet<media_link> media_links
		{
			get
			{
				return this._media_links;
			}
			set
			{
				this._media_links.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="site_NewsletterReciprient", Storage="_NewsletterReciprients", ThisKey="site_key", OtherKey="site_fkey")]
		public EntitySet<NewsletterReciprient> NewsletterReciprients
		{
			get
			{
				return this._NewsletterReciprients;
			}
			set
			{
				this._NewsletterReciprients.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="site_Newsletter", Storage="_Newsletters", ThisKey="site_key", OtherKey="site_fkey")]
		public EntitySet<Newsletter> Newsletters
		{
			get
			{
				return this._Newsletters;
			}
			set
			{
				this._Newsletters.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="site_offer", Storage="_offers", ThisKey="site_key", OtherKey="site_fkey")]
		public EntitySet<offer> offers
		{
			get
			{
				return this._offers;
			}
			set
			{
				this._offers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="site_page", Storage="_pages", ThisKey="site_key", OtherKey="site_fkey")]
		public EntitySet<page> pages
		{
			get
			{
				return this._pages;
			}
			set
			{
				this._pages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="site_project", Storage="_projects", ThisKey="site_key", OtherKey="site_fkey")]
		public EntitySet<project> projects
		{
			get
			{
				return this._projects;
			}
			set
			{
				this._projects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="site_site_user", Storage="_site_users", ThisKey="site_key", OtherKey="site_fkey")]
		public EntitySet<site_user> site_users
		{
			get
			{
				return this._site_users;
			}
			set
			{
				this._site_users.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="site_testimony", Storage="_testimonies", ThisKey="site_key", OtherKey="site_fkey")]
		public EntitySet<testimony> testimonies
		{
			get
			{
				return this._testimonies;
			}
			set
			{
				this._testimonies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="site_marketingsite", Storage="_marketingsites", ThisKey="site_key", OtherKey="site_fkey")]
		public EntitySet<marketingsite> marketingsites
		{
			get
			{
				return this._marketingsites;
			}
			set
			{
				this._marketingsites.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_articles(article entity)
		{
			this.SendPropertyChanging();
			entity.site = this;
		}
		
		private void detach_articles(article entity)
		{
			this.SendPropertyChanging();
			entity.site = null;
		}
		
		private void attach_banners(banner entity)
		{
			this.SendPropertyChanging();
			entity.site = this;
		}
		
		private void detach_banners(banner entity)
		{
			this.SendPropertyChanging();
			entity.site = null;
		}
		
		private void attach_medias(media entity)
		{
			this.SendPropertyChanging();
			entity.site = this;
		}
		
		private void detach_medias(media entity)
		{
			this.SendPropertyChanging();
			entity.site = null;
		}
		
		private void attach_media_links(media_link entity)
		{
			this.SendPropertyChanging();
			entity.site = this;
		}
		
		private void detach_media_links(media_link entity)
		{
			this.SendPropertyChanging();
			entity.site = null;
		}
		
		private void attach_NewsletterReciprients(NewsletterReciprient entity)
		{
			this.SendPropertyChanging();
			entity.site = this;
		}
		
		private void detach_NewsletterReciprients(NewsletterReciprient entity)
		{
			this.SendPropertyChanging();
			entity.site = null;
		}
		
		private void attach_Newsletters(Newsletter entity)
		{
			this.SendPropertyChanging();
			entity.site = this;
		}
		
		private void detach_Newsletters(Newsletter entity)
		{
			this.SendPropertyChanging();
			entity.site = null;
		}
		
		private void attach_offers(offer entity)
		{
			this.SendPropertyChanging();
			entity.site = this;
		}
		
		private void detach_offers(offer entity)
		{
			this.SendPropertyChanging();
			entity.site = null;
		}
		
		private void attach_pages(page entity)
		{
			this.SendPropertyChanging();
			entity.site = this;
		}
		
		private void detach_pages(page entity)
		{
			this.SendPropertyChanging();
			entity.site = null;
		}
		
		private void attach_projects(project entity)
		{
			this.SendPropertyChanging();
			entity.site = this;
		}
		
		private void detach_projects(project entity)
		{
			this.SendPropertyChanging();
			entity.site = null;
		}
		
		private void attach_site_users(site_user entity)
		{
			this.SendPropertyChanging();
			entity.site = this;
		}
		
		private void detach_site_users(site_user entity)
		{
			this.SendPropertyChanging();
			entity.site = null;
		}
		
		private void attach_testimonies(testimony entity)
		{
			this.SendPropertyChanging();
			entity.site = this;
		}
		
		private void detach_testimonies(testimony entity)
		{
			this.SendPropertyChanging();
			entity.site = null;
		}
		
		private void attach_marketingsites(marketingsite entity)
		{
			this.SendPropertyChanging();
			entity.site = this;
		}
		
		private void detach_marketingsites(marketingsite entity)
		{
			this.SendPropertyChanging();
			entity.site = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.testimonies")]
	public partial class testimony : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _testimony_key;
		
		private string _title;
		
		private string _description;
		
		private System.Nullable<int> _project_fkey;
		
		private bool _active;
		
		private string _video_id;
		
		private string _url;
		
		private System.Nullable<int> _site_fkey;
		
		private EntityRef<site> _site;
		
		private EntityRef<project> _project;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ontestimony_keyChanging(int value);
    partial void Ontestimony_keyChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void Onproject_fkeyChanging(System.Nullable<int> value);
    partial void Onproject_fkeyChanged();
    partial void OnactiveChanging(bool value);
    partial void OnactiveChanged();
    partial void Onvideo_idChanging(string value);
    partial void Onvideo_idChanged();
    partial void OnurlChanging(string value);
    partial void OnurlChanged();
    partial void Onsite_fkeyChanging(System.Nullable<int> value);
    partial void Onsite_fkeyChanged();
    #endregion
		
		public testimony()
		{
			this._site = default(EntityRef<site>);
			this._project = default(EntityRef<project>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_testimony_key", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int testimony_key
		{
			get
			{
				return this._testimony_key;
			}
			set
			{
				if ((this._testimony_key != value))
				{
					this.Ontestimony_keyChanging(value);
					this.SendPropertyChanging();
					this._testimony_key = value;
					this.SendPropertyChanged("testimony_key");
					this.Ontestimony_keyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_project_fkey", DbType="Int")]
		public System.Nullable<int> project_fkey
		{
			get
			{
				return this._project_fkey;
			}
			set
			{
				if ((this._project_fkey != value))
				{
					if (this._project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onproject_fkeyChanging(value);
					this.SendPropertyChanging();
					this._project_fkey = value;
					this.SendPropertyChanged("project_fkey");
					this.Onproject_fkeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active", DbType="Bit NOT NULL")]
		public bool active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_video_id", DbType="NVarChar(50)")]
		public string video_id
		{
			get
			{
				return this._video_id;
			}
			set
			{
				if ((this._video_id != value))
				{
					this.Onvideo_idChanging(value);
					this.SendPropertyChanging();
					this._video_id = value;
					this.SendPropertyChanged("video_id");
					this.Onvideo_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_url", DbType="NVarChar(MAX)")]
		public string url
		{
			get
			{
				return this._url;
			}
			set
			{
				if ((this._url != value))
				{
					this.OnurlChanging(value);
					this.SendPropertyChanging();
					this._url = value;
					this.SendPropertyChanged("url");
					this.OnurlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_site_fkey", DbType="Int")]
		public System.Nullable<int> site_fkey
		{
			get
			{
				return this._site_fkey;
			}
			set
			{
				if ((this._site_fkey != value))
				{
					if (this._site.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onsite_fkeyChanging(value);
					this.SendPropertyChanging();
					this._site_fkey = value;
					this.SendPropertyChanged("site_fkey");
					this.Onsite_fkeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="site_testimony", Storage="_site", ThisKey="site_fkey", OtherKey="site_key", IsForeignKey=true)]
		public site site
		{
			get
			{
				return this._site.Entity;
			}
			set
			{
				site previousValue = this._site.Entity;
				if (((previousValue != value) 
							|| (this._site.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._site.Entity = null;
						previousValue.testimonies.Remove(this);
					}
					this._site.Entity = value;
					if ((value != null))
					{
						value.testimonies.Add(this);
						this._site_fkey = value.site_key;
					}
					else
					{
						this._site_fkey = default(Nullable<int>);
					}
					this.SendPropertyChanged("site");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="project_testimony", Storage="_project", ThisKey="project_fkey", OtherKey="project_key", IsForeignKey=true)]
		public project project
		{
			get
			{
				return this._project.Entity;
			}
			set
			{
				project previousValue = this._project.Entity;
				if (((previousValue != value) 
							|| (this._project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._project.Entity = null;
						previousValue.testimonies.Remove(this);
					}
					this._project.Entity = value;
					if ((value != null))
					{
						value.testimonies.Add(this);
						this._project_fkey = value.project_key;
					}
					else
					{
						this._project_fkey = default(Nullable<int>);
					}
					this.SendPropertyChanged("project");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.keyvalues")]
	public partial class keyvalue : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _keyvalue_key;
		
		private int _link_fkey;
		
		private int _key_lookup;
		
		private string _value;
		
		private int _link_lookup;
		
		private EntityRef<lookup> _lookup;
		
		private EntityRef<lookup> _lookup1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onkeyvalue_keyChanging(int value);
    partial void Onkeyvalue_keyChanged();
    partial void Onlink_fkeyChanging(int value);
    partial void Onlink_fkeyChanged();
    partial void Onkey_lookupChanging(int value);
    partial void Onkey_lookupChanged();
    partial void OnvalueChanging(string value);
    partial void OnvalueChanged();
    partial void Onlink_lookupChanging(int value);
    partial void Onlink_lookupChanged();
    #endregion
		
		public keyvalue()
		{
			this._lookup = default(EntityRef<lookup>);
			this._lookup1 = default(EntityRef<lookup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_keyvalue_key", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int keyvalue_key
		{
			get
			{
				return this._keyvalue_key;
			}
			set
			{
				if ((this._keyvalue_key != value))
				{
					this.Onkeyvalue_keyChanging(value);
					this.SendPropertyChanging();
					this._keyvalue_key = value;
					this.SendPropertyChanged("keyvalue_key");
					this.Onkeyvalue_keyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_link_fkey", DbType="Int NOT NULL")]
		public int link_fkey
		{
			get
			{
				return this._link_fkey;
			}
			set
			{
				if ((this._link_fkey != value))
				{
					this.Onlink_fkeyChanging(value);
					this.SendPropertyChanging();
					this._link_fkey = value;
					this.SendPropertyChanged("link_fkey");
					this.Onlink_fkeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_key_lookup", DbType="Int NOT NULL")]
		public int key_lookup
		{
			get
			{
				return this._key_lookup;
			}
			set
			{
				if ((this._key_lookup != value))
				{
					if (this._lookup1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onkey_lookupChanging(value);
					this.SendPropertyChanging();
					this._key_lookup = value;
					this.SendPropertyChanged("key_lookup");
					this.Onkey_lookupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_value", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string value
		{
			get
			{
				return this._value;
			}
			set
			{
				if ((this._value != value))
				{
					this.OnvalueChanging(value);
					this.SendPropertyChanging();
					this._value = value;
					this.SendPropertyChanged("value");
					this.OnvalueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_link_lookup", DbType="Int NOT NULL")]
		public int link_lookup
		{
			get
			{
				return this._link_lookup;
			}
			set
			{
				if ((this._link_lookup != value))
				{
					if (this._lookup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onlink_lookupChanging(value);
					this.SendPropertyChanging();
					this._link_lookup = value;
					this.SendPropertyChanged("link_lookup");
					this.Onlink_lookupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="lookup_keyvalue", Storage="_lookup", ThisKey="link_lookup", OtherKey="lookup_key", IsForeignKey=true)]
		public lookup lookup
		{
			get
			{
				return this._lookup.Entity;
			}
			set
			{
				lookup previousValue = this._lookup.Entity;
				if (((previousValue != value) 
							|| (this._lookup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._lookup.Entity = null;
						previousValue.keyvalues.Remove(this);
					}
					this._lookup.Entity = value;
					if ((value != null))
					{
						value.keyvalues.Add(this);
						this._link_lookup = value.lookup_key;
					}
					else
					{
						this._link_lookup = default(int);
					}
					this.SendPropertyChanged("lookup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="lookup_keyvalue1", Storage="_lookup1", ThisKey="key_lookup", OtherKey="lookup_key", IsForeignKey=true)]
		public lookup lookup1
		{
			get
			{
				return this._lookup1.Entity;
			}
			set
			{
				lookup previousValue = this._lookup1.Entity;
				if (((previousValue != value) 
							|| (this._lookup1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._lookup1.Entity = null;
						previousValue.keyvalues1.Remove(this);
					}
					this._lookup1.Entity = value;
					if ((value != null))
					{
						value.keyvalues1.Add(this);
						this._key_lookup = value.lookup_key;
					}
					else
					{
						this._key_lookup = default(int);
					}
					this.SendPropertyChanged("lookup1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.marketingsites")]
	public partial class marketingsite : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _marketingsite_key;
		
		private int _site_fkey;
		
		private string _name;
		
		private string _host_name;
		
		private bool _active;
		
		private string _body;
		
		private string _short_description;
		
		private int _template_lookup;
		
		private EntityRef<lookup> _lookup;
		
		private EntityRef<site> _site;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onmarketingsite_keyChanging(int value);
    partial void Onmarketingsite_keyChanged();
    partial void Onsite_fkeyChanging(int value);
    partial void Onsite_fkeyChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void Onhost_nameChanging(string value);
    partial void Onhost_nameChanged();
    partial void OnactiveChanging(bool value);
    partial void OnactiveChanged();
    partial void OnbodyChanging(string value);
    partial void OnbodyChanged();
    partial void Onshort_descriptionChanging(string value);
    partial void Onshort_descriptionChanged();
    partial void Ontemplate_lookupChanging(int value);
    partial void Ontemplate_lookupChanged();
    #endregion
		
		public marketingsite()
		{
			this._lookup = default(EntityRef<lookup>);
			this._site = default(EntityRef<site>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_marketingsite_key", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int marketingsite_key
		{
			get
			{
				return this._marketingsite_key;
			}
			set
			{
				if ((this._marketingsite_key != value))
				{
					this.Onmarketingsite_keyChanging(value);
					this.SendPropertyChanging();
					this._marketingsite_key = value;
					this.SendPropertyChanged("marketingsite_key");
					this.Onmarketingsite_keyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_site_fkey", DbType="Int NOT NULL")]
		public int site_fkey
		{
			get
			{
				return this._site_fkey;
			}
			set
			{
				if ((this._site_fkey != value))
				{
					if (this._site.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onsite_fkeyChanging(value);
					this.SendPropertyChanging();
					this._site_fkey = value;
					this.SendPropertyChanged("site_fkey");
					this.Onsite_fkeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_host_name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string host_name
		{
			get
			{
				return this._host_name;
			}
			set
			{
				if ((this._host_name != value))
				{
					this.Onhost_nameChanging(value);
					this.SendPropertyChanging();
					this._host_name = value;
					this.SendPropertyChanged("host_name");
					this.Onhost_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active", DbType="Bit NOT NULL")]
		public bool active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_body", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string body
		{
			get
			{
				return this._body;
			}
			set
			{
				if ((this._body != value))
				{
					this.OnbodyChanging(value);
					this.SendPropertyChanging();
					this._body = value;
					this.SendPropertyChanged("body");
					this.OnbodyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_short_description", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string short_description
		{
			get
			{
				return this._short_description;
			}
			set
			{
				if ((this._short_description != value))
				{
					this.Onshort_descriptionChanging(value);
					this.SendPropertyChanging();
					this._short_description = value;
					this.SendPropertyChanged("short_description");
					this.Onshort_descriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_template_lookup", DbType="Int NOT NULL")]
		public int template_lookup
		{
			get
			{
				return this._template_lookup;
			}
			set
			{
				if ((this._template_lookup != value))
				{
					if (this._lookup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ontemplate_lookupChanging(value);
					this.SendPropertyChanging();
					this._template_lookup = value;
					this.SendPropertyChanged("template_lookup");
					this.Ontemplate_lookupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="lookup_marketingsite", Storage="_lookup", ThisKey="template_lookup", OtherKey="lookup_key", IsForeignKey=true)]
		public lookup lookup
		{
			get
			{
				return this._lookup.Entity;
			}
			set
			{
				lookup previousValue = this._lookup.Entity;
				if (((previousValue != value) 
							|| (this._lookup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._lookup.Entity = null;
						previousValue.marketingsites.Remove(this);
					}
					this._lookup.Entity = value;
					if ((value != null))
					{
						value.marketingsites.Add(this);
						this._template_lookup = value.lookup_key;
					}
					else
					{
						this._template_lookup = default(int);
					}
					this.SendPropertyChanged("lookup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="site_marketingsite", Storage="_site", ThisKey="site_fkey", OtherKey="site_key", IsForeignKey=true)]
		public site site
		{
			get
			{
				return this._site.Entity;
			}
			set
			{
				site previousValue = this._site.Entity;
				if (((previousValue != value) 
							|| (this._site.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._site.Entity = null;
						previousValue.marketingsites.Remove(this);
					}
					this._site.Entity = value;
					if ((value != null))
					{
						value.marketingsites.Add(this);
						this._site_fkey = value.site_key;
					}
					else
					{
						this._site_fkey = default(int);
					}
					this.SendPropertyChanged("site");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class aspnet_UsersInRoles_AddUsersToRolesResult
	{
		
		private string _Name;
		
		public aspnet_UsersInRoles_AddUsersToRolesResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
	}
	
	public partial class aspnet_UsersInRoles_RemoveUsersFromRolesResult
	{
		
		private char _Column1;
		
		private string _Name;
		
		public aspnet_UsersInRoles_RemoveUsersFromRolesResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Column1", DbType="NVarChar(1) NOT NULL")]
		public char Column1
		{
			get
			{
				return this._Column1;
			}
			set
			{
				if ((this._Column1 != value))
				{
					this._Column1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
