#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace mjjames.AdminSystem.DataContexts
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="Abellandscapes.co.uk")]
	public partial class AdminDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Inserttestimony(mjjames.AdminSystem.DataEntities.testimony instance);
    partial void Updatetestimony(mjjames.AdminSystem.DataEntities.testimony instance);
    partial void Deletetestimony(mjjames.AdminSystem.DataEntities.testimony instance);
    partial void Insertbanner(mjjames.AdminSystem.DataEntities.banner instance);
    partial void Updatebanner(mjjames.AdminSystem.DataEntities.banner instance);
    partial void Deletebanner(mjjames.AdminSystem.DataEntities.banner instance);
    partial void Insertlookup(mjjames.AdminSystem.DataEntities.lookup instance);
    partial void Updatelookup(mjjames.AdminSystem.DataEntities.lookup instance);
    partial void Deletelookup(mjjames.AdminSystem.DataEntities.lookup instance);
    partial void Insertmedia(mjjames.AdminSystem.DataEntities.media instance);
    partial void Updatemedia(mjjames.AdminSystem.DataEntities.media instance);
    partial void Deletemedia(mjjames.AdminSystem.DataEntities.media instance);
    partial void Insertmedia_link(mjjames.AdminSystem.DataEntities.media_link instance);
    partial void Updatemedia_link(mjjames.AdminSystem.DataEntities.media_link instance);
    partial void Deletemedia_link(mjjames.AdminSystem.DataEntities.media_link instance);
    partial void InsertNewsletterReciprient(mjjames.AdminSystem.DataEntities.NewsletterReciprient instance);
    partial void UpdateNewsletterReciprient(mjjames.AdminSystem.DataEntities.NewsletterReciprient instance);
    partial void DeleteNewsletterReciprient(mjjames.AdminSystem.DataEntities.NewsletterReciprient instance);
    partial void InsertNewsletter(mjjames.AdminSystem.DataEntities.Newsletter instance);
    partial void UpdateNewsletter(mjjames.AdminSystem.DataEntities.Newsletter instance);
    partial void DeleteNewsletter(mjjames.AdminSystem.DataEntities.Newsletter instance);
    partial void Insertproject(mjjames.AdminSystem.DataEntities.project instance);
    partial void Updateproject(mjjames.AdminSystem.DataEntities.project instance);
    partial void Deleteproject(mjjames.AdminSystem.DataEntities.project instance);
    partial void Insertpage(mjjames.AdminSystem.DataEntities.page instance);
    partial void Updatepage(mjjames.AdminSystem.DataEntities.page instance);
    partial void Deletepage(mjjames.AdminSystem.DataEntities.page instance);
    partial void Insertarticle(mjjames.AdminSystem.DataEntities.article instance);
    partial void Updatearticle(mjjames.AdminSystem.DataEntities.article instance);
    partial void Deletearticle(mjjames.AdminSystem.DataEntities.article instance);
    partial void Insertoffer(mjjames.AdminSystem.DataEntities.offer instance);
    partial void Updateoffer(mjjames.AdminSystem.DataEntities.offer instance);
    partial void Deleteoffer(mjjames.AdminSystem.DataEntities.offer instance);
    partial void Insertaspnet_Membership(mjjames.AdminSystem.DataEntities.aspnet_Membership instance);
    partial void Updateaspnet_Membership(mjjames.AdminSystem.DataEntities.aspnet_Membership instance);
    partial void Deleteaspnet_Membership(mjjames.AdminSystem.DataEntities.aspnet_Membership instance);
    partial void Insertaspnet_UsersInRole(mjjames.AdminSystem.DataEntities.aspnet_UsersInRole instance);
    partial void Updateaspnet_UsersInRole(mjjames.AdminSystem.DataEntities.aspnet_UsersInRole instance);
    partial void Deleteaspnet_UsersInRole(mjjames.AdminSystem.DataEntities.aspnet_UsersInRole instance);
    partial void Insertaspnet_User(mjjames.AdminSystem.DataEntities.aspnet_User instance);
    partial void Updateaspnet_User(mjjames.AdminSystem.DataEntities.aspnet_User instance);
    partial void Deleteaspnet_User(mjjames.AdminSystem.DataEntities.aspnet_User instance);
    partial void Insertaspnet_Role(mjjames.AdminSystem.DataEntities.aspnet_Role instance);
    partial void Updateaspnet_Role(mjjames.AdminSystem.DataEntities.aspnet_Role instance);
    partial void Deleteaspnet_Role(mjjames.AdminSystem.DataEntities.aspnet_Role instance);
    #endregion
		
		public AdminDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["Abellandscapes_co_ukConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public AdminDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AdminDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AdminDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AdminDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<mjjames.AdminSystem.DataEntities.testimony> testimonies
		{
			get
			{
				return this.GetTable<mjjames.AdminSystem.DataEntities.testimony>();
			}
		}
		
		public System.Data.Linq.Table<mjjames.AdminSystem.DataEntities.banner> banners
		{
			get
			{
				return this.GetTable<mjjames.AdminSystem.DataEntities.banner>();
			}
		}
		
		public System.Data.Linq.Table<mjjames.AdminSystem.DataEntities.lookup> lookups
		{
			get
			{
				return this.GetTable<mjjames.AdminSystem.DataEntities.lookup>();
			}
		}
		
		public System.Data.Linq.Table<mjjames.AdminSystem.DataEntities.media> medias
		{
			get
			{
				return this.GetTable<mjjames.AdminSystem.DataEntities.media>();
			}
		}
		
		public System.Data.Linq.Table<mjjames.AdminSystem.DataEntities.media_link> media_links
		{
			get
			{
				return this.GetTable<mjjames.AdminSystem.DataEntities.media_link>();
			}
		}
		
		public System.Data.Linq.Table<mjjames.AdminSystem.DataEntities.NewsletterReciprient> NewsletterReciprients
		{
			get
			{
				return this.GetTable<mjjames.AdminSystem.DataEntities.NewsletterReciprient>();
			}
		}
		
		public System.Data.Linq.Table<mjjames.AdminSystem.DataEntities.Newsletter> Newsletters
		{
			get
			{
				return this.GetTable<mjjames.AdminSystem.DataEntities.Newsletter>();
			}
		}
		
		public System.Data.Linq.Table<mjjames.AdminSystem.DataEntities.project> projects
		{
			get
			{
				return this.GetTable<mjjames.AdminSystem.DataEntities.project>();
			}
		}
		
		public System.Data.Linq.Table<mjjames.AdminSystem.DataEntities.page> pages
		{
			get
			{
				return this.GetTable<mjjames.AdminSystem.DataEntities.page>();
			}
		}
		
		public System.Data.Linq.Table<mjjames.AdminSystem.DataEntities.article> articles
		{
			get
			{
				return this.GetTable<mjjames.AdminSystem.DataEntities.article>();
			}
		}
		
		public System.Data.Linq.Table<mjjames.AdminSystem.DataEntities.offer> offers
		{
			get
			{
				return this.GetTable<mjjames.AdminSystem.DataEntities.offer>();
			}
		}
		
		public System.Data.Linq.Table<mjjames.AdminSystem.DataEntities.vw_aspnet_MembershipUser> vw_aspnet_MembershipUsers
		{
			get
			{
				return this.GetTable<mjjames.AdminSystem.DataEntities.vw_aspnet_MembershipUser>();
			}
		}
		
		public System.Data.Linq.Table<mjjames.AdminSystem.DataEntities.vw_aspnet_Role> vw_aspnet_Roles
		{
			get
			{
				return this.GetTable<mjjames.AdminSystem.DataEntities.vw_aspnet_Role>();
			}
		}
		
		public System.Data.Linq.Table<mjjames.AdminSystem.DataEntities.vw_aspnet_UsersInRole> vw_aspnet_UsersInRoles
		{
			get
			{
				return this.GetTable<mjjames.AdminSystem.DataEntities.vw_aspnet_UsersInRole>();
			}
		}
		
		public System.Data.Linq.Table<mjjames.AdminSystem.DataEntities.vw_aspnet_Application> vw_aspnet_Applications
		{
			get
			{
				return this.GetTable<mjjames.AdminSystem.DataEntities.vw_aspnet_Application>();
			}
		}
		
		public System.Data.Linq.Table<mjjames.AdminSystem.DataEntities.aspnet_Membership> aspnet_Memberships
		{
			get
			{
				return this.GetTable<mjjames.AdminSystem.DataEntities.aspnet_Membership>();
			}
		}
		
		public System.Data.Linq.Table<mjjames.AdminSystem.DataEntities.aspnet_UsersInRole> aspnet_UsersInRoles
		{
			get
			{
				return this.GetTable<mjjames.AdminSystem.DataEntities.aspnet_UsersInRole>();
			}
		}
		
		public System.Data.Linq.Table<mjjames.AdminSystem.DataEntities.aspnet_User> aspnet_Users
		{
			get
			{
				return this.GetTable<mjjames.AdminSystem.DataEntities.aspnet_User>();
			}
		}
		
		public System.Data.Linq.Table<mjjames.AdminSystem.DataEntities.aspnet_Role> aspnet_Roles
		{
			get
			{
				return this.GetTable<mjjames.AdminSystem.DataEntities.aspnet_Role>();
			}
		}
		
		[Function(Name="dbo.getFeatured")]
		public int getFeatured([Parameter(DbType="Int")] System.Nullable<int> maxnumber, [Parameter(DbType="TinyInt")] System.Nullable<byte> randomize)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), maxnumber, randomize);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.proc_GetSiteMap")]
		public int proc_GetSiteMap([Parameter(DbType="NVarChar(MAX)")] string filter, [Parameter(DbType="NVarChar(50)")] string urlprefix, [Parameter(DbType="Bit")] System.Nullable<bool> urlwriting)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), filter, urlprefix, urlwriting);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.aspnet_Membership_UnlockUser")]
		public int aspnet_Membership_UnlockUser([Parameter(Name="ApplicationName", DbType="NVarChar(256)")] string applicationName, [Parameter(Name="UserName", DbType="NVarChar(256)")] string userName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), applicationName, userName);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.aspnet_UsersInRoles_AddUsersToRoles")]
		public ISingleResult<mjjames.AdminSystem.DataEntities.aspnet_UsersInRoles_AddUsersToRolesResult> aspnet_UsersInRoles_AddUsersToRoles([Parameter(Name="ApplicationName", DbType="NVarChar(256)")] string applicationName, [Parameter(Name="UserNames", DbType="NVarChar(4000)")] string userNames, [Parameter(Name="RoleNames", DbType="NVarChar(4000)")] string roleNames, [Parameter(Name="CurrentTimeUtc", DbType="DateTime")] System.Nullable<System.DateTime> currentTimeUtc)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), applicationName, userNames, roleNames, currentTimeUtc);
			return ((ISingleResult<mjjames.AdminSystem.DataEntities.aspnet_UsersInRoles_AddUsersToRolesResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.aspnet_UsersInRoles_RemoveUsersFromRoles")]
		public ISingleResult<mjjames.AdminSystem.DataEntities.aspnet_UsersInRoles_RemoveUsersFromRolesResult> aspnet_UsersInRoles_RemoveUsersFromRoles([Parameter(Name="ApplicationName", DbType="NVarChar(256)")] string applicationName, [Parameter(Name="UserNames", DbType="NVarChar(4000)")] string userNames, [Parameter(Name="RoleNames", DbType="NVarChar(4000)")] string roleNames)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), applicationName, userNames, roleNames);
			return ((ISingleResult<mjjames.AdminSystem.DataEntities.aspnet_UsersInRoles_RemoveUsersFromRolesResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.aspnet_Membership_GetAllUsers")]
		public int aspnet_Membership_GetAllUsers([Parameter(Name="ApplicationName", DbType="NVarChar(256)")] string applicationName, [Parameter(Name="PageIndex", DbType="Int")] System.Nullable<int> pageIndex, [Parameter(Name="PageSize", DbType="Int")] System.Nullable<int> pageSize)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), applicationName, pageIndex, pageSize);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.aspnet_Membership_SetPassword")]
		public int aspnet_Membership_SetPassword([Parameter(Name="ApplicationName", DbType="NVarChar(256)")] string applicationName, [Parameter(Name="UserName", DbType="NVarChar(256)")] string userName, [Parameter(Name="NewPassword", DbType="NVarChar(128)")] string newPassword, [Parameter(Name="PasswordSalt", DbType="NVarChar(128)")] string passwordSalt, [Parameter(Name="CurrentTimeUtc", DbType="DateTime")] System.Nullable<System.DateTime> currentTimeUtc, [Parameter(Name="PasswordFormat", DbType="Int")] System.Nullable<int> passwordFormat)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), applicationName, userName, newPassword, passwordSalt, currentTimeUtc, passwordFormat);
			return ((int)(result.ReturnValue));
		}
	}
}
namespace mjjames.AdminSystem.DataEntities
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.ComponentModel;
	using System;
	
	
	[Table(Name="dbo.testimonies")]
	public partial class testimony : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _testimony_key;
		
		private string _title;
		
		private string _description;
		
		private System.Nullable<int> _project_fkey;
		
		private bool _active;
		
		private string _video_id;
		
		private string _url;
		
		private EntityRef<project> _project;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ontestimony_keyChanging(int value);
    partial void Ontestimony_keyChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void Onproject_fkeyChanging(System.Nullable<int> value);
    partial void Onproject_fkeyChanged();
    partial void OnactiveChanging(bool value);
    partial void OnactiveChanged();
    partial void Onvideo_idChanging(string value);
    partial void Onvideo_idChanged();
    partial void OnurlChanging(string value);
    partial void OnurlChanged();
    #endregion
		
		public testimony()
		{
			this._project = default(EntityRef<project>);
			OnCreated();
		}
		
		[Column(Storage="_testimony_key", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int testimony_key
		{
			get
			{
				return this._testimony_key;
			}
			set
			{
				if ((this._testimony_key != value))
				{
					this.Ontestimony_keyChanging(value);
					this.SendPropertyChanging();
					this._testimony_key = value;
					this.SendPropertyChanged("testimony_key");
					this.Ontestimony_keyChanged();
				}
			}
		}
		
		[Column(Storage="_title", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[Column(Storage="_description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_project_fkey", DbType="Int NULL")]
		public System.Nullable<int> project_fkey
		{
			get
			{
				return this._project_fkey;
			}
			set
			{
				if ((this._project_fkey != value))
				{
					if (this._project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onproject_fkeyChanging(value);
					this.SendPropertyChanging();
					this._project_fkey = value;
					this.SendPropertyChanged("project_fkey");
					this.Onproject_fkeyChanged();
				}
			}
		}
		
		[Column(Storage="_active", DbType="Bit NOT NULL")]
		public bool active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[Column(Storage="_video_id", DbType="NVarChar(50)")]
		public string video_id
		{
			get
			{
				return this._video_id;
			}
			set
			{
				if ((this._video_id != value))
				{
					this.Onvideo_idChanging(value);
					this.SendPropertyChanging();
					this._video_id = value;
					this.SendPropertyChanged("video_id");
					this.Onvideo_idChanged();
				}
			}
		}
		
		[Column(Storage="_url", DbType="NVarChar(MAX)")]
		public string url
		{
			get
			{
				return this._url;
			}
			set
			{
				if ((this._url != value))
				{
					this.OnurlChanging(value);
					this.SendPropertyChanging();
					this._url = value;
					this.SendPropertyChanged("url");
					this.OnurlChanged();
				}
			}
		}
		
		[Association(Name="project_testimony", Storage="_project", ThisKey="project_fkey", OtherKey="project_key", IsForeignKey=true)]
		public project project
		{
			get
			{
				return this._project.Entity;
			}
			set
			{
				project previousValue = this._project.Entity;
				if (((previousValue != value) 
							|| (this._project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._project.Entity = null;
						previousValue.testimonies.Remove(this);
					}
					this._project.Entity = value;
					if ((value != null))
					{
						value.testimonies.Add(this);
						this._project_fkey = value.project_key;
					}
					else
					{
						this._project_fkey = default(Nullable<int>);
					}
					this.SendPropertyChanged("project");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.banners")]
	public partial class banner : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _bannerdid;
		
		private string _name;
		
		private string _image;
		
		private string _alttext;
		
		private string _url;
		
		private string _category;
		
		private int _randomness;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnbannerdidChanging(int value);
    partial void OnbannerdidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnimageChanging(string value);
    partial void OnimageChanged();
    partial void OnalttextChanging(string value);
    partial void OnalttextChanged();
    partial void OnurlChanging(string value);
    partial void OnurlChanged();
    partial void OncategoryChanging(string value);
    partial void OncategoryChanged();
    partial void OnrandomnessChanging(int value);
    partial void OnrandomnessChanged();
    #endregion
		
		public banner()
		{
			OnCreated();
		}
		
		[Column(Storage="_bannerdid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int bannerdid
		{
			get
			{
				return this._bannerdid;
			}
			set
			{
				if ((this._bannerdid != value))
				{
					this.OnbannerdidChanging(value);
					this.SendPropertyChanging();
					this._bannerdid = value;
					this.SendPropertyChanged("bannerdid");
					this.OnbannerdidChanged();
				}
			}
		}
		
		[Column(Storage="_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[Column(Storage="_image", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string image
		{
			get
			{
				return this._image;
			}
			set
			{
				if ((this._image != value))
				{
					this.OnimageChanging(value);
					this.SendPropertyChanging();
					this._image = value;
					this.SendPropertyChanged("image");
					this.OnimageChanged();
				}
			}
		}
		
		[Column(Storage="_alttext", DbType="NVarChar(MAX)")]
		public string alttext
		{
			get
			{
				return this._alttext;
			}
			set
			{
				if ((this._alttext != value))
				{
					this.OnalttextChanging(value);
					this.SendPropertyChanging();
					this._alttext = value;
					this.SendPropertyChanged("alttext");
					this.OnalttextChanged();
				}
			}
		}
		
		[Column(Storage="_url", DbType="NVarChar(255)")]
		public string url
		{
			get
			{
				return this._url;
			}
			set
			{
				if ((this._url != value))
				{
					this.OnurlChanging(value);
					this.SendPropertyChanging();
					this._url = value;
					this.SendPropertyChanged("url");
					this.OnurlChanged();
				}
			}
		}
		
		[Column(Storage="_category", DbType="NVarChar(20)")]
		public string category
		{
			get
			{
				return this._category;
			}
			set
			{
				if ((this._category != value))
				{
					this.OncategoryChanging(value);
					this.SendPropertyChanging();
					this._category = value;
					this.SendPropertyChanged("category");
					this.OncategoryChanged();
				}
			}
		}
		
		[Column(Storage="_randomness", DbType="Int NOT NULL")]
		public int randomness
		{
			get
			{
				return this._randomness;
			}
			set
			{
				if ((this._randomness != value))
				{
					this.OnrandomnessChanging(value);
					this.SendPropertyChanging();
					this._randomness = value;
					this.SendPropertyChanged("randomness");
					this.OnrandomnessChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.lookup")]
	public partial class lookup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _lookup_key;
		
		private string _lookup_id;
		
		private string _title;
		
		private string _type;
		
		private string _value;
		
		private byte _active;
		
		private EntitySet<media> _medias;
		
		private EntitySet<media_link> _media_links;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onlookup_keyChanging(int value);
    partial void Onlookup_keyChanged();
    partial void Onlookup_idChanging(string value);
    partial void Onlookup_idChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OntypeChanging(string value);
    partial void OntypeChanged();
    partial void OnvalueChanging(string value);
    partial void OnvalueChanged();
    partial void OnactiveChanging(byte value);
    partial void OnactiveChanged();
    #endregion
		
		public lookup()
		{
			this._medias = new EntitySet<media>(new Action<media>(this.attach_medias), new Action<media>(this.detach_medias));
			this._media_links = new EntitySet<media_link>(new Action<media_link>(this.attach_media_links), new Action<media_link>(this.detach_media_links));
			OnCreated();
		}
		
		[Column(Storage="_lookup_key", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int lookup_key
		{
			get
			{
				return this._lookup_key;
			}
			set
			{
				if ((this._lookup_key != value))
				{
					this.Onlookup_keyChanging(value);
					this.SendPropertyChanging();
					this._lookup_key = value;
					this.SendPropertyChanged("lookup_key");
					this.Onlookup_keyChanged();
				}
			}
		}
		
		[Column(Storage="_lookup_id", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string lookup_id
		{
			get
			{
				return this._lookup_id;
			}
			set
			{
				if ((this._lookup_id != value))
				{
					this.Onlookup_idChanging(value);
					this.SendPropertyChanging();
					this._lookup_id = value;
					this.SendPropertyChanged("lookup_id");
					this.Onlookup_idChanged();
				}
			}
		}
		
		[Column(Storage="_title", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[Column(Storage="_type", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[Column(Storage="_value", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string value
		{
			get
			{
				return this._value;
			}
			set
			{
				if ((this._value != value))
				{
					this.OnvalueChanging(value);
					this.SendPropertyChanging();
					this._value = value;
					this.SendPropertyChanged("value");
					this.OnvalueChanged();
				}
			}
		}
		
		[Column(Storage="_active", DbType="TinyInt NOT NULL")]
		public byte active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[Association(Name="lookup_media", Storage="_medias", ThisKey="lookup_key", OtherKey="mediatype_lookup")]
		public EntitySet<media> medias
		{
			get
			{
				return this._medias;
			}
			set
			{
				this._medias.Assign(value);
			}
		}
		
		[Association(Name="lookup_media_link", Storage="_media_links", ThisKey="lookup_key", OtherKey="linktype_lookup")]
		public EntitySet<media_link> media_links
		{
			get
			{
				return this._media_links;
			}
			set
			{
				this._media_links.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_medias(media entity)
		{
			this.SendPropertyChanging();
			entity.lookup = this;
		}
		
		private void detach_medias(media entity)
		{
			this.SendPropertyChanging();
			entity.lookup = null;
		}
		
		private void attach_media_links(media_link entity)
		{
			this.SendPropertyChanging();
			entity.lookup = this;
		}
		
		private void detach_media_links(media_link entity)
		{
			this.SendPropertyChanging();
			entity.lookup = null;
		}
	}
	
	[Table(Name="dbo.media")]
	public partial class media : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _media_key;
		
		private string _title;
		
		private string _description;
		
		private string _filename;
		
		private int _mediatype_lookup;
		
		private bool _active;
		
		private EntitySet<media_link> _media_links;
		
		private EntityRef<lookup> _lookup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onmedia_keyChanging(int value);
    partial void Onmedia_keyChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnfilenameChanging(string value);
    partial void OnfilenameChanged();
    partial void Onmediatype_lookupChanging(int value);
    partial void Onmediatype_lookupChanged();
    partial void OnactiveChanging(bool value);
    partial void OnactiveChanged();
    #endregion
		
		public media()
		{
			this._media_links = new EntitySet<media_link>(new Action<media_link>(this.attach_media_links), new Action<media_link>(this.detach_media_links));
			this._lookup = default(EntityRef<lookup>);
			OnCreated();
		}
		
		[Column(Storage="_media_key", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int media_key
		{
			get
			{
				return this._media_key;
			}
			set
			{
				if ((this._media_key != value))
				{
					this.Onmedia_keyChanging(value);
					this.SendPropertyChanging();
					this._media_key = value;
					this.SendPropertyChanged("media_key");
					this.Onmedia_keyChanged();
				}
			}
		}
		
		[Column(Storage="_title", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[Column(Storage="_description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_filename", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string filename
		{
			get
			{
				return this._filename;
			}
			set
			{
				if ((this._filename != value))
				{
					this.OnfilenameChanging(value);
					this.SendPropertyChanging();
					this._filename = value;
					this.SendPropertyChanged("filename");
					this.OnfilenameChanged();
				}
			}
		}
		
		[Column(Storage="_mediatype_lookup", DbType="Int NOT NULL")]
		public int mediatype_lookup
		{
			get
			{
				return this._mediatype_lookup;
			}
			set
			{
				if ((this._mediatype_lookup != value))
				{
					if (this._lookup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onmediatype_lookupChanging(value);
					this.SendPropertyChanging();
					this._mediatype_lookup = value;
					this.SendPropertyChanged("mediatype_lookup");
					this.Onmediatype_lookupChanged();
				}
			}
		}
		
		[Column(Storage="_active", DbType="Bit NOT NULL")]
		public bool active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[Association(Name="media_media_link", Storage="_media_links", ThisKey="media_key", OtherKey="media_fkey")]
		public EntitySet<media_link> media_links
		{
			get
			{
				return this._media_links;
			}
			set
			{
				this._media_links.Assign(value);
			}
		}
		
		[Association(Name="lookup_media", Storage="_lookup", ThisKey="mediatype_lookup", OtherKey="lookup_key", IsForeignKey=true)]
		public lookup lookup
		{
			get
			{
				return this._lookup.Entity;
			}
			set
			{
				lookup previousValue = this._lookup.Entity;
				if (((previousValue != value) 
							|| (this._lookup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._lookup.Entity = null;
						previousValue.medias.Remove(this);
					}
					this._lookup.Entity = value;
					if ((value != null))
					{
						value.medias.Add(this);
						this._mediatype_lookup = value.lookup_key;
					}
					else
					{
						this._mediatype_lookup = default(int);
					}
					this.SendPropertyChanged("lookup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_media_links(media_link entity)
		{
			this.SendPropertyChanging();
			entity.media = this;
		}
		
		private void detach_media_links(media_link entity)
		{
			this.SendPropertyChanging();
			entity.media = null;
		}
	}
	
	[Table(Name="dbo.media_links")]
	public partial class media_link : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _medialink_key;
		
		private int _media_fkey;
		
		private int _link_fkey;
		
		private int _linktype_lookup;
		
		private EntityRef<lookup> _lookup;
		
		private EntityRef<media> _media;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onmedialink_keyChanging(int value);
    partial void Onmedialink_keyChanged();
    partial void Onmedia_fkeyChanging(int value);
    partial void Onmedia_fkeyChanged();
    partial void Onlink_fkeyChanging(int value);
    partial void Onlink_fkeyChanged();
    partial void Onlinktype_lookupChanging(int value);
    partial void Onlinktype_lookupChanged();
    #endregion
		
		public media_link()
		{
			this._lookup = default(EntityRef<lookup>);
			this._media = default(EntityRef<media>);
			OnCreated();
		}
		
		[Column(Storage="_medialink_key", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int medialink_key
		{
			get
			{
				return this._medialink_key;
			}
			set
			{
				if ((this._medialink_key != value))
				{
					this.Onmedialink_keyChanging(value);
					this.SendPropertyChanging();
					this._medialink_key = value;
					this.SendPropertyChanged("medialink_key");
					this.Onmedialink_keyChanged();
				}
			}
		}
		
		[Column(Storage="_media_fkey", DbType="Int NOT NULL")]
		public int media_fkey
		{
			get
			{
				return this._media_fkey;
			}
			set
			{
				if ((this._media_fkey != value))
				{
					if (this._media.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onmedia_fkeyChanging(value);
					this.SendPropertyChanging();
					this._media_fkey = value;
					this.SendPropertyChanged("media_fkey");
					this.Onmedia_fkeyChanged();
				}
			}
		}
		
		[Column(Storage="_link_fkey", DbType="Int NOT NULL")]
		public int link_fkey
		{
			get
			{
				return this._link_fkey;
			}
			set
			{
				if ((this._link_fkey != value))
				{
					this.Onlink_fkeyChanging(value);
					this.SendPropertyChanging();
					this._link_fkey = value;
					this.SendPropertyChanged("link_fkey");
					this.Onlink_fkeyChanged();
				}
			}
		}
		
		[Column(Storage="_linktype_lookup", DbType="Int NOT NULL")]
		public int linktype_lookup
		{
			get
			{
				return this._linktype_lookup;
			}
			set
			{
				if ((this._linktype_lookup != value))
				{
					if (this._lookup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onlinktype_lookupChanging(value);
					this.SendPropertyChanging();
					this._linktype_lookup = value;
					this.SendPropertyChanged("linktype_lookup");
					this.Onlinktype_lookupChanged();
				}
			}
		}
		
		[Association(Name="lookup_media_link", Storage="_lookup", ThisKey="linktype_lookup", OtherKey="lookup_key", IsForeignKey=true)]
		public lookup lookup
		{
			get
			{
				return this._lookup.Entity;
			}
			set
			{
				lookup previousValue = this._lookup.Entity;
				if (((previousValue != value) 
							|| (this._lookup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._lookup.Entity = null;
						previousValue.media_links.Remove(this);
					}
					this._lookup.Entity = value;
					if ((value != null))
					{
						value.media_links.Add(this);
						this._linktype_lookup = value.lookup_key;
					}
					else
					{
						this._linktype_lookup = default(int);
					}
					this.SendPropertyChanged("lookup");
				}
			}
		}
		
		[Association(Name="media_media_link", Storage="_media", ThisKey="media_fkey", OtherKey="media_key", IsForeignKey=true)]
		public media media
		{
			get
			{
				return this._media.Entity;
			}
			set
			{
				media previousValue = this._media.Entity;
				if (((previousValue != value) 
							|| (this._media.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._media.Entity = null;
						previousValue.media_links.Remove(this);
					}
					this._media.Entity = value;
					if ((value != null))
					{
						value.media_links.Add(this);
						this._media_fkey = value.media_key;
					}
					else
					{
						this._media_fkey = default(int);
					}
					this.SendPropertyChanged("media");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.NewsletterReciprients")]
	public partial class NewsletterReciprient : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _reciprient_key;
		
		private string _name;
		
		private string _email;
		
		private bool _active;
		
		private bool _confirmed;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onreciprient_keyChanging(int value);
    partial void Onreciprient_keyChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnactiveChanging(bool value);
    partial void OnactiveChanged();
    partial void OnconfirmedChanging(bool value);
    partial void OnconfirmedChanged();
    #endregion
		
		public NewsletterReciprient()
		{
			OnCreated();
		}
		
		[Column(Storage="_reciprient_key", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int reciprient_key
		{
			get
			{
				return this._reciprient_key;
			}
			set
			{
				if ((this._reciprient_key != value))
				{
					this.Onreciprient_keyChanging(value);
					this.SendPropertyChanging();
					this._reciprient_key = value;
					this.SendPropertyChanged("reciprient_key");
					this.Onreciprient_keyChanged();
				}
			}
		}
		
		[Column(Storage="_name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[Column(Storage="_email", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[Column(Storage="_active", DbType="Bit NOT NULL")]
		public bool active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[Column(Storage="_confirmed", DbType="Bit NOT NULL")]
		public bool confirmed
		{
			get
			{
				return this._confirmed;
			}
			set
			{
				if ((this._confirmed != value))
				{
					this.OnconfirmedChanging(value);
					this.SendPropertyChanging();
					this._confirmed = value;
					this.SendPropertyChanged("confirmed");
					this.OnconfirmedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Newsletters")]
	public partial class Newsletter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _newsletter_key;
		
		private string _subject;
		
		private string _body;
		
		private System.Nullable<System.DateTime> _date_sent;
		
		private System.DateTime _date_created;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onnewsletter_keyChanging(int value);
    partial void Onnewsletter_keyChanged();
    partial void OnsubjectChanging(string value);
    partial void OnsubjectChanged();
    partial void OnbodyChanging(string value);
    partial void OnbodyChanged();
    partial void Ondate_sentChanging(System.Nullable<System.DateTime> value);
    partial void Ondate_sentChanged();
    partial void Ondate_createdChanging(System.DateTime value);
    partial void Ondate_createdChanged();
    #endregion
		
		public Newsletter()
		{
			OnCreated();
		}
		
		[Column(Storage="_newsletter_key", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int newsletter_key
		{
			get
			{
				return this._newsletter_key;
			}
			set
			{
				if ((this._newsletter_key != value))
				{
					this.Onnewsletter_keyChanging(value);
					this.SendPropertyChanging();
					this._newsletter_key = value;
					this.SendPropertyChanged("newsletter_key");
					this.Onnewsletter_keyChanged();
				}
			}
		}
		
		[Column(Storage="_subject", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string subject
		{
			get
			{
				return this._subject;
			}
			set
			{
				if ((this._subject != value))
				{
					this.OnsubjectChanging(value);
					this.SendPropertyChanging();
					this._subject = value;
					this.SendPropertyChanged("subject");
					this.OnsubjectChanged();
				}
			}
		}
		
		[Column(Storage="_body", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string body
		{
			get
			{
				return this._body;
			}
			set
			{
				if ((this._body != value))
				{
					this.OnbodyChanging(value);
					this.SendPropertyChanging();
					this._body = value;
					this.SendPropertyChanged("body");
					this.OnbodyChanged();
				}
			}
		}
		
		[Column(Storage="_date_sent", DbType="DateTime")]
		public System.Nullable<System.DateTime> date_sent
		{
			get
			{
				return this._date_sent;
			}
			set
			{
				if ((this._date_sent != value))
				{
					this.Ondate_sentChanging(value);
					this.SendPropertyChanging();
					this._date_sent = value;
					this.SendPropertyChanged("date_sent");
					this.Ondate_sentChanged();
				}
			}
		}
		
		[Column(Storage="_date_created", DbType="DateTime", IsDbGenerated=true)]
		public System.DateTime date_created
		{
			get
			{
				return this._date_created;
			}
			set
			{
				if ((this._date_created != value))
				{
					this.Ondate_createdChanging(value);
					this.SendPropertyChanging();
					this._date_created = value;
					this.SendPropertyChanged("date_created");
					this.Ondate_createdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.projects")]
	public partial class project : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _project_key;
		
		private string _title;
		
		private string _description;
		
		private System.Nullable<System.DateTime> _start_date;
		
		private System.Nullable<System.DateTime> _end_date;
		
		private bool _active;
		
		private bool _include_in_rss;
		
		private string _photogallery_id;
		
		private string _video_id;
		
		private string _url;
		
		private EntitySet<testimony> _testimonies;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onproject_keyChanging(int value);
    partial void Onproject_keyChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void Onstart_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onstart_dateChanged();
    partial void Onend_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onend_dateChanged();
    partial void OnactiveChanging(bool value);
    partial void OnactiveChanged();
    partial void Oninclude_in_rssChanging(bool value);
    partial void Oninclude_in_rssChanged();
    partial void Onphotogallery_idChanging(string value);
    partial void Onphotogallery_idChanged();
    partial void Onvideo_idChanging(string value);
    partial void Onvideo_idChanged();
    partial void OnurlChanging(string value);
    partial void OnurlChanged();
    #endregion
		
		public project()
		{
			this._testimonies = new EntitySet<testimony>(new Action<testimony>(this.attach_testimonies), new Action<testimony>(this.detach_testimonies));
			OnCreated();
		}
		
		[Column(Storage="_project_key", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int project_key
		{
			get
			{
				return this._project_key;
			}
			set
			{
				if ((this._project_key != value))
				{
					this.Onproject_keyChanging(value);
					this.SendPropertyChanging();
					this._project_key = value;
					this.SendPropertyChanged("project_key");
					this.Onproject_keyChanged();
				}
			}
		}
		
		[Column(Storage="_title", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[Column(Storage="_description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_start_date", DbType="Date")]
		public System.Nullable<System.DateTime> start_date
		{
			get
			{
				return this._start_date;
			}
			set
			{
				if ((this._start_date != value))
				{
					this.Onstart_dateChanging(value);
					this.SendPropertyChanging();
					this._start_date = value;
					this.SendPropertyChanged("start_date");
					this.Onstart_dateChanged();
				}
			}
		}
		
		[Column(Storage="_end_date", DbType="Date")]
		public System.Nullable<System.DateTime> end_date
		{
			get
			{
				return this._end_date;
			}
			set
			{
				if ((this._end_date != value))
				{
					this.Onend_dateChanging(value);
					this.SendPropertyChanging();
					this._end_date = value;
					this.SendPropertyChanged("end_date");
					this.Onend_dateChanged();
				}
			}
		}
		
		[Column(Storage="_active", DbType="Bit NOT NULL")]
		public bool active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[Column(Storage="_include_in_rss", DbType="Bit NOT NULL")]
		public bool include_in_rss
		{
			get
			{
				return this._include_in_rss;
			}
			set
			{
				if ((this._include_in_rss != value))
				{
					this.Oninclude_in_rssChanging(value);
					this.SendPropertyChanging();
					this._include_in_rss = value;
					this.SendPropertyChanged("include_in_rss");
					this.Oninclude_in_rssChanged();
				}
			}
		}
		
		[Column(Storage="_photogallery_id", DbType="NVarChar(50)")]
		public string photogallery_id
		{
			get
			{
				return this._photogallery_id;
			}
			set
			{
				if ((this._photogallery_id != value))
				{
					this.Onphotogallery_idChanging(value);
					this.SendPropertyChanging();
					this._photogallery_id = value;
					this.SendPropertyChanged("photogallery_id");
					this.Onphotogallery_idChanged();
				}
			}
		}
		
		[Column(Storage="_video_id", DbType="NVarChar(50)")]
		public string video_id
		{
			get
			{
				return this._video_id;
			}
			set
			{
				if ((this._video_id != value))
				{
					this.Onvideo_idChanging(value);
					this.SendPropertyChanging();
					this._video_id = value;
					this.SendPropertyChanged("video_id");
					this.Onvideo_idChanged();
				}
			}
		}
		
		[Column(Storage="_url", DbType="NVarChar(MAX)")]
		public string url
		{
			get
			{
				return this._url;
			}
			set
			{
				if ((this._url != value))
				{
					this.OnurlChanging(value);
					this.SendPropertyChanging();
					this._url = value;
					this.SendPropertyChanged("url");
					this.OnurlChanged();
				}
			}
		}
		
		[Association(Name="project_testimony", Storage="_testimonies", ThisKey="project_key", OtherKey="project_fkey")]
		public EntitySet<testimony> testimonies
		{
			get
			{
				return this._testimonies;
			}
			set
			{
				this._testimonies.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_testimonies(testimony entity)
		{
			this.SendPropertyChanging();
			entity.project = this;
		}
		
		private void detach_testimonies(testimony entity)
		{
			this.SendPropertyChanging();
			entity.project = null;
		}
	}
	
	[Table(Name="dbo.pages")]
	public partial class page : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _page_key;
		
		private System.Nullable<int> _page_fkey;
		
		private string _pageid;
		
		private string _navtitle;
		
		private System.Nullable<char> _accesskey;
		
		private string _metadescription;
		
		private string _metakeywords;
		
		private string _title;
		
		private string _body;
		
		private string _thumbnailimage;
		
		private System.Nullable<bool> _showinnav;
		
		private System.Nullable<bool> _showinfeaturednav;
		
		private System.Nullable<bool> _showonhome;
		
		private System.Nullable<bool> _showinfooter;
		
		private System.Nullable<bool> _active;
		
		private System.Nullable<int> _sortorder;
		
		private string _linkurl;
		
		private System.DateTime _lastmodified = default(System.DateTime);
		
		private string _page_url;
		
		private string _password;
		
		private System.Nullable<bool> _passwordprotect;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onpage_keyChanging(int value);
    partial void Onpage_keyChanged();
    partial void Onpage_fkeyChanging(System.Nullable<int> value);
    partial void Onpage_fkeyChanged();
    partial void OnpageidChanging(string value);
    partial void OnpageidChanged();
    partial void OnnavtitleChanging(string value);
    partial void OnnavtitleChanged();
    partial void OnaccesskeyChanging(System.Nullable<char> value);
    partial void OnaccesskeyChanged();
    partial void OnmetadescriptionChanging(string value);
    partial void OnmetadescriptionChanged();
    partial void OnmetakeywordsChanging(string value);
    partial void OnmetakeywordsChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OnbodyChanging(string value);
    partial void OnbodyChanged();
    partial void OnthumbnailimageChanging(string value);
    partial void OnthumbnailimageChanged();
    partial void OnshowinnavChanging(System.Nullable<bool> value);
    partial void OnshowinnavChanged();
    partial void OnshowinfeaturednavChanging(System.Nullable<bool> value);
    partial void OnshowinfeaturednavChanged();
    partial void OnshowonhomeChanging(System.Nullable<bool> value);
    partial void OnshowonhomeChanged();
    partial void OnshowinfooterChanging(System.Nullable<bool> value);
    partial void OnshowinfooterChanged();
    partial void OnactiveChanging(System.Nullable<bool> value);
    partial void OnactiveChanged();
    partial void OnsortorderChanging(System.Nullable<int> value);
    partial void OnsortorderChanged();
    partial void OnlinkurlChanging(string value);
    partial void OnlinkurlChanged();
    partial void Onpage_urlChanging(string value);
    partial void Onpage_urlChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnpasswordprotectChanging(System.Nullable<bool> value);
    partial void OnpasswordprotectChanged();
    #endregion
		
		public page()
		{
			OnCreated();
		}
		
		[Column(Storage="_page_key", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int page_key
		{
			get
			{
				return this._page_key;
			}
			set
			{
				if ((this._page_key != value))
				{
					this.Onpage_keyChanging(value);
					this.SendPropertyChanging();
					this._page_key = value;
					this.SendPropertyChanged("page_key");
					this.Onpage_keyChanged();
				}
			}
		}
		
		[Column(Storage="_page_fkey", DbType="Int")]
		public System.Nullable<int> page_fkey
		{
			get
			{
				return this._page_fkey;
			}
			set
			{
				if ((this._page_fkey != value))
				{
					this.Onpage_fkeyChanging(value);
					this.SendPropertyChanging();
					this._page_fkey = value;
					this.SendPropertyChanged("page_fkey");
					this.Onpage_fkeyChanged();
				}
			}
		}
		
		[Column(Storage="_pageid", DbType="NVarChar(50)")]
		public string pageid
		{
			get
			{
				return this._pageid;
			}
			set
			{
				if ((this._pageid != value))
				{
					this.OnpageidChanging(value);
					this.SendPropertyChanging();
					this._pageid = value;
					this.SendPropertyChanged("pageid");
					this.OnpageidChanged();
				}
			}
		}
		
		[Column(Storage="_navtitle", DbType="NVarChar(50)")]
		public string navtitle
		{
			get
			{
				return this._navtitle;
			}
			set
			{
				if ((this._navtitle != value))
				{
					this.OnnavtitleChanging(value);
					this.SendPropertyChanging();
					this._navtitle = value;
					this.SendPropertyChanged("navtitle");
					this.OnnavtitleChanged();
				}
			}
		}
		
		[Column(Storage="_accesskey", DbType="NChar(1)")]
		public System.Nullable<char> accesskey
		{
			get
			{
				return this._accesskey;
			}
			set
			{
				if ((this._accesskey != value))
				{
					this.OnaccesskeyChanging(value);
					this.SendPropertyChanging();
					this._accesskey = value;
					this.SendPropertyChanged("accesskey");
					this.OnaccesskeyChanged();
				}
			}
		}
		
		[Column(Storage="_metadescription", DbType="NVarChar(MAX)")]
		public string metadescription
		{
			get
			{
				return this._metadescription;
			}
			set
			{
				if ((this._metadescription != value))
				{
					this.OnmetadescriptionChanging(value);
					this.SendPropertyChanging();
					this._metadescription = value;
					this.SendPropertyChanged("metadescription");
					this.OnmetadescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_metakeywords", DbType="NVarChar(MAX)")]
		public string metakeywords
		{
			get
			{
				return this._metakeywords;
			}
			set
			{
				if ((this._metakeywords != value))
				{
					this.OnmetakeywordsChanging(value);
					this.SendPropertyChanging();
					this._metakeywords = value;
					this.SendPropertyChanged("metakeywords");
					this.OnmetakeywordsChanged();
				}
			}
		}
		
		[Column(Storage="_title", DbType="NVarChar(50)")]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[Column(Storage="_body", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string body
		{
			get
			{
				return this._body;
			}
			set
			{
				if ((this._body != value))
				{
					this.OnbodyChanging(value);
					this.SendPropertyChanging();
					this._body = value;
					this.SendPropertyChanged("body");
					this.OnbodyChanged();
				}
			}
		}
		
		[Column(Storage="_thumbnailimage", DbType="NVarChar(128)")]
		public string thumbnailimage
		{
			get
			{
				return this._thumbnailimage;
			}
			set
			{
				if ((this._thumbnailimage != value))
				{
					this.OnthumbnailimageChanging(value);
					this.SendPropertyChanging();
					this._thumbnailimage = value;
					this.SendPropertyChanged("thumbnailimage");
					this.OnthumbnailimageChanged();
				}
			}
		}
		
		[Column(Storage="_showinnav", DbType="Bit")]
		public System.Nullable<bool> showinnav
		{
			get
			{
				return this._showinnav;
			}
			set
			{
				if ((this._showinnav != value))
				{
					this.OnshowinnavChanging(value);
					this.SendPropertyChanging();
					this._showinnav = value;
					this.SendPropertyChanged("showinnav");
					this.OnshowinnavChanged();
				}
			}
		}
		
		[Column(Storage="_showinfeaturednav", DbType="Bit")]
		public System.Nullable<bool> showinfeaturednav
		{
			get
			{
				return this._showinfeaturednav;
			}
			set
			{
				if ((this._showinfeaturednav != value))
				{
					this.OnshowinfeaturednavChanging(value);
					this.SendPropertyChanging();
					this._showinfeaturednav = value;
					this.SendPropertyChanged("showinfeaturednav");
					this.OnshowinfeaturednavChanged();
				}
			}
		}
		
		[Column(Storage="_showonhome", DbType="Bit")]
		public System.Nullable<bool> showonhome
		{
			get
			{
				return this._showonhome;
			}
			set
			{
				if ((this._showonhome != value))
				{
					this.OnshowonhomeChanging(value);
					this.SendPropertyChanging();
					this._showonhome = value;
					this.SendPropertyChanged("showonhome");
					this.OnshowonhomeChanged();
				}
			}
		}
		
		[Column(Storage="_showinfooter", DbType="Bit")]
		public System.Nullable<bool> showinfooter
		{
			get
			{
				return this._showinfooter;
			}
			set
			{
				if ((this._showinfooter != value))
				{
					this.OnshowinfooterChanging(value);
					this.SendPropertyChanging();
					this._showinfooter = value;
					this.SendPropertyChanged("showinfooter");
					this.OnshowinfooterChanged();
				}
			}
		}
		
		[Column(Storage="_active", DbType="Bit")]
		public System.Nullable<bool> active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[Column(Storage="_sortorder", DbType="Int")]
		public System.Nullable<int> sortorder
		{
			get
			{
				return this._sortorder;
			}
			set
			{
				if ((this._sortorder != value))
				{
					this.OnsortorderChanging(value);
					this.SendPropertyChanging();
					this._sortorder = value;
					this.SendPropertyChanged("sortorder");
					this.OnsortorderChanged();
				}
			}
		}
		
		[Column(Storage="_linkurl", DbType="NVarChar(50)")]
		public string linkurl
		{
			get
			{
				return this._linkurl;
			}
			set
			{
				if ((this._linkurl != value))
				{
					this.OnlinkurlChanging(value);
					this.SendPropertyChanging();
					this._linkurl = value;
					this.SendPropertyChanged("linkurl");
					this.OnlinkurlChanged();
				}
			}
		}
		
		[Column(Storage="_lastmodified", DbType="DateTime NOT NULL", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.DateTime lastmodified
		{
			get
			{
				return this._lastmodified;
			}
		}
		
		[Column(Storage="_page_url", DbType="NVarChar(MAX)")]
		public string page_url
		{
			get
			{
				return this._page_url;
			}
			set
			{
				if ((this._page_url != value))
				{
					this.Onpage_urlChanging(value);
					this.SendPropertyChanging();
					this._page_url = value;
					this.SendPropertyChanged("page_url");
					this.Onpage_urlChanged();
				}
			}
		}
		
		[Column(Storage="_password", DbType="nvarchar(12)")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[Column(Storage="_passwordprotect", DbType="bit")]
		public System.Nullable<bool> passwordprotect
		{
			get
			{
				return this._passwordprotect;
			}
			set
			{
				if ((this._passwordprotect != value))
				{
					this.OnpasswordprotectChanging(value);
					this.SendPropertyChanging();
					this._passwordprotect = value;
					this.SendPropertyChanged("passwordprotect");
					this.OnpasswordprotectChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.articles")]
	public partial class article : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _article_key;
		
		private string _title;
		
		private string _body;
		
		private bool _showonhome;
		
		private string _shortdescription;
		
		private string _thumbnailimage;
		
		private bool _active;
		
		private int _sortorder;
		
		private System.Nullable<System.DateTime> _start_date;
		
		private System.Nullable<System.DateTime> _end_date;
		
		private bool _include_in_feed;
		
		private string _url;
		
		private string _virtualurl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onarticle_keyChanging(int value);
    partial void Onarticle_keyChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OnbodyChanging(string value);
    partial void OnbodyChanged();
    partial void OnshowonhomeChanging(bool value);
    partial void OnshowonhomeChanged();
    partial void OnshortdescriptionChanging(string value);
    partial void OnshortdescriptionChanged();
    partial void OnthumbnailimageChanging(string value);
    partial void OnthumbnailimageChanged();
    partial void OnactiveChanging(bool value);
    partial void OnactiveChanged();
    partial void OnsortorderChanging(int value);
    partial void OnsortorderChanged();
    partial void Onstart_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onstart_dateChanged();
    partial void Onend_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onend_dateChanged();
    partial void Oninclude_in_feedChanging(bool value);
    partial void Oninclude_in_feedChanged();
    partial void OnurlChanging(string value);
    partial void OnurlChanged();
    partial void OnvirtualurlChanging(string value);
    partial void OnvirtualurlChanged();
    #endregion
		
		public article()
		{
			OnCreated();
		}
		
		[Column(Storage="_article_key", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int article_key
		{
			get
			{
				return this._article_key;
			}
			set
			{
				if ((this._article_key != value))
				{
					this.Onarticle_keyChanging(value);
					this.SendPropertyChanging();
					this._article_key = value;
					this.SendPropertyChanged("article_key");
					this.Onarticle_keyChanged();
				}
			}
		}
		
		[Column(Storage="_title", DbType="NVarChar(50)")]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[Column(Storage="_body", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string body
		{
			get
			{
				return this._body;
			}
			set
			{
				if ((this._body != value))
				{
					this.OnbodyChanging(value);
					this.SendPropertyChanging();
					this._body = value;
					this.SendPropertyChanged("body");
					this.OnbodyChanged();
				}
			}
		}
		
		[Column(Storage="_showonhome", DbType="Bit NOT NULL")]
		public bool showonhome
		{
			get
			{
				return this._showonhome;
			}
			set
			{
				if ((this._showonhome != value))
				{
					this.OnshowonhomeChanging(value);
					this.SendPropertyChanging();
					this._showonhome = value;
					this.SendPropertyChanged("showonhome");
					this.OnshowonhomeChanged();
				}
			}
		}
		
		[Column(Storage="_shortdescription", DbType="NVarChar(MAX)")]
		public string shortdescription
		{
			get
			{
				return this._shortdescription;
			}
			set
			{
				if ((this._shortdescription != value))
				{
					this.OnshortdescriptionChanging(value);
					this.SendPropertyChanging();
					this._shortdescription = value;
					this.SendPropertyChanged("shortdescription");
					this.OnshortdescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_thumbnailimage", DbType="NVarChar(50)")]
		public string thumbnailimage
		{
			get
			{
				return this._thumbnailimage;
			}
			set
			{
				if ((this._thumbnailimage != value))
				{
					this.OnthumbnailimageChanging(value);
					this.SendPropertyChanging();
					this._thumbnailimage = value;
					this.SendPropertyChanged("thumbnailimage");
					this.OnthumbnailimageChanged();
				}
			}
		}
		
		[Column(Storage="_active", DbType="Bit NOT NULL")]
		public bool active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[Column(Storage="_sortorder", DbType="Int NOT NULL")]
		public int sortorder
		{
			get
			{
				return this._sortorder;
			}
			set
			{
				if ((this._sortorder != value))
				{
					this.OnsortorderChanging(value);
					this.SendPropertyChanging();
					this._sortorder = value;
					this.SendPropertyChanged("sortorder");
					this.OnsortorderChanged();
				}
			}
		}
		
		[Column(Storage="_start_date", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> start_date
		{
			get
			{
				return this._start_date;
			}
			set
			{
				if ((this._start_date != value))
				{
					this.Onstart_dateChanging(value);
					this.SendPropertyChanging();
					this._start_date = value;
					this.SendPropertyChanged("start_date");
					this.Onstart_dateChanged();
				}
			}
		}
		
		[Column(Storage="_end_date", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> end_date
		{
			get
			{
				return this._end_date;
			}
			set
			{
				if ((this._end_date != value))
				{
					this.Onend_dateChanging(value);
					this.SendPropertyChanging();
					this._end_date = value;
					this.SendPropertyChanged("end_date");
					this.Onend_dateChanged();
				}
			}
		}
		
		[Column(Storage="_include_in_feed", DbType="Bit NOT NULL")]
		public bool include_in_feed
		{
			get
			{
				return this._include_in_feed;
			}
			set
			{
				if ((this._include_in_feed != value))
				{
					this.Oninclude_in_feedChanging(value);
					this.SendPropertyChanging();
					this._include_in_feed = value;
					this.SendPropertyChanged("include_in_feed");
					this.Oninclude_in_feedChanged();
				}
			}
		}
		
		[Column(Storage="_url", DbType="NVarChar(MAX)")]
		public string url
		{
			get
			{
				return this._url;
			}
			set
			{
				if ((this._url != value))
				{
					this.OnurlChanging(value);
					this.SendPropertyChanging();
					this._url = value;
					this.SendPropertyChanged("url");
					this.OnurlChanged();
				}
			}
		}
		
		[Column(Storage="_virtualurl", DbType="NVarChar(MAX)")]
		public string virtualurl
		{
			get
			{
				return this._virtualurl;
			}
			set
			{
				if ((this._virtualurl != value))
				{
					this.OnvirtualurlChanging(value);
					this.SendPropertyChanging();
					this._virtualurl = value;
					this.SendPropertyChanged("virtualurl");
					this.OnvirtualurlChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.offers")]
	public partial class offer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _offer_key;
		
		private string _title;
		
		private string _description;
		
		private System.Nullable<System.DateTime> _offer_start;
		
		private System.Nullable<System.DateTime> _offer_end;
		
		private bool _active;
		
		private bool _showonhome;
		
		private bool _showinfeed;
		
		private string _url;
		
		private string _shortdescription;
		
		private string _thumbnailimage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onoffer_keyChanging(int value);
    partial void Onoffer_keyChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void Onoffer_startChanging(System.Nullable<System.DateTime> value);
    partial void Onoffer_startChanged();
    partial void Onoffer_endChanging(System.Nullable<System.DateTime> value);
    partial void Onoffer_endChanged();
    partial void OnactiveChanging(bool value);
    partial void OnactiveChanged();
    partial void OnshowonhomeChanging(bool value);
    partial void OnshowonhomeChanged();
    partial void OnshowinfeedChanging(bool value);
    partial void OnshowinfeedChanged();
    partial void OnurlChanging(string value);
    partial void OnurlChanged();
    partial void OnshortdescriptionChanging(string value);
    partial void OnshortdescriptionChanged();
    partial void OnthumbnailimageChanging(string value);
    partial void OnthumbnailimageChanged();
    #endregion
		
		public offer()
		{
			OnCreated();
		}
		
		[Column(Storage="_offer_key", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int offer_key
		{
			get
			{
				return this._offer_key;
			}
			set
			{
				if ((this._offer_key != value))
				{
					this.Onoffer_keyChanging(value);
					this.SendPropertyChanging();
					this._offer_key = value;
					this.SendPropertyChanged("offer_key");
					this.Onoffer_keyChanged();
				}
			}
		}
		
		[Column(Storage="_title", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[Column(Storage="_description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_offer_start", DbType="Date")]
		public System.Nullable<System.DateTime> offer_start
		{
			get
			{
				return this._offer_start;
			}
			set
			{
				if ((this._offer_start != value))
				{
					this.Onoffer_startChanging(value);
					this.SendPropertyChanging();
					this._offer_start = value;
					this.SendPropertyChanged("offer_start");
					this.Onoffer_startChanged();
				}
			}
		}
		
		[Column(Storage="_offer_end", DbType="Date")]
		public System.Nullable<System.DateTime> offer_end
		{
			get
			{
				return this._offer_end;
			}
			set
			{
				if ((this._offer_end != value))
				{
					this.Onoffer_endChanging(value);
					this.SendPropertyChanging();
					this._offer_end = value;
					this.SendPropertyChanged("offer_end");
					this.Onoffer_endChanged();
				}
			}
		}
		
		[Column(Storage="_active", DbType="Bit NOT NULL")]
		public bool active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[Column(Storage="_showonhome", DbType="Bit NOT NULL")]
		public bool showonhome
		{
			get
			{
				return this._showonhome;
			}
			set
			{
				if ((this._showonhome != value))
				{
					this.OnshowonhomeChanging(value);
					this.SendPropertyChanging();
					this._showonhome = value;
					this.SendPropertyChanged("showonhome");
					this.OnshowonhomeChanged();
				}
			}
		}
		
		[Column(Storage="_showinfeed", DbType="Bit NOT NULL")]
		public bool showinfeed
		{
			get
			{
				return this._showinfeed;
			}
			set
			{
				if ((this._showinfeed != value))
				{
					this.OnshowinfeedChanging(value);
					this.SendPropertyChanging();
					this._showinfeed = value;
					this.SendPropertyChanged("showinfeed");
					this.OnshowinfeedChanged();
				}
			}
		}
		
		[Column(Storage="_url", DbType="NVarChar(MAX)")]
		public string url
		{
			get
			{
				return this._url;
			}
			set
			{
				if ((this._url != value))
				{
					this.OnurlChanging(value);
					this.SendPropertyChanging();
					this._url = value;
					this.SendPropertyChanged("url");
					this.OnurlChanged();
				}
			}
		}
		
		[Column(Storage="_shortdescription", DbType="NVarChar(MAX)")]
		public string shortdescription
		{
			get
			{
				return this._shortdescription;
			}
			set
			{
				if ((this._shortdescription != value))
				{
					this.OnshortdescriptionChanging(value);
					this.SendPropertyChanging();
					this._shortdescription = value;
					this.SendPropertyChanged("shortdescription");
					this.OnshortdescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_thumbnailimage", DbType="NVarChar(50)")]
		public string thumbnailimage
		{
			get
			{
				return this._thumbnailimage;
			}
			set
			{
				if ((this._thumbnailimage != value))
				{
					this.OnthumbnailimageChanging(value);
					this.SendPropertyChanging();
					this._thumbnailimage = value;
					this.SendPropertyChanged("thumbnailimage");
					this.OnthumbnailimageChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.vw_aspnet_MembershipUsers")]
	public partial class vw_aspnet_MembershipUser
	{
		
		private System.Guid _UserId;
		
		private int _PasswordFormat;
		
		private string _MobilePIN;
		
		private string _Email;
		
		private string _LoweredEmail;
		
		private string _PasswordQuestion;
		
		private string _PasswordAnswer;
		
		private bool _IsApproved;
		
		private bool _IsLockedOut;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _LastLoginDate;
		
		private System.DateTime _LastPasswordChangedDate;
		
		private System.DateTime _LastLockoutDate;
		
		private int _FailedPasswordAttemptCount;
		
		private System.DateTime _FailedPasswordAttemptWindowStart;
		
		private int _FailedPasswordAnswerAttemptCount;
		
		private System.DateTime _FailedPasswordAnswerAttemptWindowStart;
		
		private string _Comment;
		
		private System.Guid _ApplicationId;
		
		private string _UserName;
		
		private string _MobileAlias;
		
		private bool _IsAnonymous;
		
		private System.DateTime _LastActivityDate;
		
		public vw_aspnet_MembershipUser()
		{
		}
		
		[Column(Storage="_UserId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[Column(Storage="_PasswordFormat", DbType="Int NOT NULL")]
		public int PasswordFormat
		{
			get
			{
				return this._PasswordFormat;
			}
			set
			{
				if ((this._PasswordFormat != value))
				{
					this._PasswordFormat = value;
				}
			}
		}
		
		[Column(Storage="_MobilePIN", DbType="NVarChar(16)")]
		public string MobilePIN
		{
			get
			{
				return this._MobilePIN;
			}
			set
			{
				if ((this._MobilePIN != value))
				{
					this._MobilePIN = value;
				}
			}
		}
		
		[Column(Storage="_Email", DbType="NVarChar(256)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
		
		[Column(Storage="_LoweredEmail", DbType="NVarChar(256)")]
		public string LoweredEmail
		{
			get
			{
				return this._LoweredEmail;
			}
			set
			{
				if ((this._LoweredEmail != value))
				{
					this._LoweredEmail = value;
				}
			}
		}
		
		[Column(Storage="_PasswordQuestion", DbType="NVarChar(256)")]
		public string PasswordQuestion
		{
			get
			{
				return this._PasswordQuestion;
			}
			set
			{
				if ((this._PasswordQuestion != value))
				{
					this._PasswordQuestion = value;
				}
			}
		}
		
		[Column(Storage="_PasswordAnswer", DbType="NVarChar(128)")]
		public string PasswordAnswer
		{
			get
			{
				return this._PasswordAnswer;
			}
			set
			{
				if ((this._PasswordAnswer != value))
				{
					this._PasswordAnswer = value;
				}
			}
		}
		
		[Column(Storage="_IsApproved", DbType="Bit NOT NULL")]
		public bool IsApproved
		{
			get
			{
				return this._IsApproved;
			}
			set
			{
				if ((this._IsApproved != value))
				{
					this._IsApproved = value;
				}
			}
		}
		
		[Column(Storage="_IsLockedOut", DbType="Bit NOT NULL")]
		public bool IsLockedOut
		{
			get
			{
				return this._IsLockedOut;
			}
			set
			{
				if ((this._IsLockedOut != value))
				{
					this._IsLockedOut = value;
				}
			}
		}
		
		[Column(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this._CreateDate = value;
				}
			}
		}
		
		[Column(Storage="_LastLoginDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastLoginDate
		{
			get
			{
				return this._LastLoginDate;
			}
			set
			{
				if ((this._LastLoginDate != value))
				{
					this._LastLoginDate = value;
				}
			}
		}
		
		[Column(Storage="_LastPasswordChangedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastPasswordChangedDate
		{
			get
			{
				return this._LastPasswordChangedDate;
			}
			set
			{
				if ((this._LastPasswordChangedDate != value))
				{
					this._LastPasswordChangedDate = value;
				}
			}
		}
		
		[Column(Storage="_LastLockoutDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastLockoutDate
		{
			get
			{
				return this._LastLockoutDate;
			}
			set
			{
				if ((this._LastLockoutDate != value))
				{
					this._LastLockoutDate = value;
				}
			}
		}
		
		[Column(Storage="_FailedPasswordAttemptCount", DbType="Int NOT NULL")]
		public int FailedPasswordAttemptCount
		{
			get
			{
				return this._FailedPasswordAttemptCount;
			}
			set
			{
				if ((this._FailedPasswordAttemptCount != value))
				{
					this._FailedPasswordAttemptCount = value;
				}
			}
		}
		
		[Column(Storage="_FailedPasswordAttemptWindowStart", DbType="DateTime NOT NULL")]
		public System.DateTime FailedPasswordAttemptWindowStart
		{
			get
			{
				return this._FailedPasswordAttemptWindowStart;
			}
			set
			{
				if ((this._FailedPasswordAttemptWindowStart != value))
				{
					this._FailedPasswordAttemptWindowStart = value;
				}
			}
		}
		
		[Column(Storage="_FailedPasswordAnswerAttemptCount", DbType="Int NOT NULL")]
		public int FailedPasswordAnswerAttemptCount
		{
			get
			{
				return this._FailedPasswordAnswerAttemptCount;
			}
			set
			{
				if ((this._FailedPasswordAnswerAttemptCount != value))
				{
					this._FailedPasswordAnswerAttemptCount = value;
				}
			}
		}
		
		[Column(Storage="_FailedPasswordAnswerAttemptWindowStart", DbType="DateTime NOT NULL")]
		public System.DateTime FailedPasswordAnswerAttemptWindowStart
		{
			get
			{
				return this._FailedPasswordAnswerAttemptWindowStart;
			}
			set
			{
				if ((this._FailedPasswordAnswerAttemptWindowStart != value))
				{
					this._FailedPasswordAnswerAttemptWindowStart = value;
				}
			}
		}
		
		[Column(Storage="_Comment", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this._Comment = value;
				}
			}
		}
		
		[Column(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this._ApplicationId = value;
				}
			}
		}
		
		[Column(Storage="_UserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[Column(Storage="_MobileAlias", DbType="NVarChar(16)")]
		public string MobileAlias
		{
			get
			{
				return this._MobileAlias;
			}
			set
			{
				if ((this._MobileAlias != value))
				{
					this._MobileAlias = value;
				}
			}
		}
		
		[Column(Storage="_IsAnonymous", DbType="Bit NOT NULL")]
		public bool IsAnonymous
		{
			get
			{
				return this._IsAnonymous;
			}
			set
			{
				if ((this._IsAnonymous != value))
				{
					this._IsAnonymous = value;
				}
			}
		}
		
		[Column(Storage="_LastActivityDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastActivityDate
		{
			get
			{
				return this._LastActivityDate;
			}
			set
			{
				if ((this._LastActivityDate != value))
				{
					this._LastActivityDate = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.vw_aspnet_Roles")]
	public partial class vw_aspnet_Role
	{
		
		private System.Guid _ApplicationId;
		
		private System.Guid _RoleId;
		
		private string _RoleName;
		
		private string _LoweredRoleName;
		
		private string _Description;
		
		public vw_aspnet_Role()
		{
		}
		
		[Column(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this._ApplicationId = value;
				}
			}
		}
		
		[Column(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this._RoleId = value;
				}
			}
		}
		
		[Column(Storage="_RoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this._RoleName = value;
				}
			}
		}
		
		[Column(Storage="_LoweredRoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredRoleName
		{
			get
			{
				return this._LoweredRoleName;
			}
			set
			{
				if ((this._LoweredRoleName != value))
				{
					this._LoweredRoleName = value;
				}
			}
		}
		
		[Column(Storage="_Description", DbType="NVarChar(256)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.vw_aspnet_UsersInRoles")]
	public partial class vw_aspnet_UsersInRole
	{
		
		private System.Guid _UserId;
		
		private System.Guid _RoleId;
		
		public vw_aspnet_UsersInRole()
		{
		}
		
		[Column(Storage="_UserId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[Column(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this._RoleId = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.vw_aspnet_Applications")]
	public partial class vw_aspnet_Application
	{
		
		private string _ApplicationName;
		
		private string _LoweredApplicationName;
		
		private System.Guid _ApplicationId;
		
		private string _Description;
		
		public vw_aspnet_Application()
		{
		}
		
		[Column(Storage="_ApplicationName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string ApplicationName
		{
			get
			{
				return this._ApplicationName;
			}
			set
			{
				if ((this._ApplicationName != value))
				{
					this._ApplicationName = value;
				}
			}
		}
		
		[Column(Storage="_LoweredApplicationName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredApplicationName
		{
			get
			{
				return this._LoweredApplicationName;
			}
			set
			{
				if ((this._LoweredApplicationName != value))
				{
					this._LoweredApplicationName = value;
				}
			}
		}
		
		[Column(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this._ApplicationId = value;
				}
			}
		}
		
		[Column(Storage="_Description", DbType="NVarChar(256)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.aspnet_Membership")]
	public partial class aspnet_Membership : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _UserId;
		
		private string _Password;
		
		private int _PasswordFormat;
		
		private string _PasswordSalt;
		
		private string _MobilePIN;
		
		private string _Email;
		
		private string _LoweredEmail;
		
		private string _PasswordQuestion;
		
		private string _PasswordAnswer;
		
		private bool _IsApproved;
		
		private bool _IsLockedOut;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _LastLoginDate;
		
		private System.DateTime _LastPasswordChangedDate;
		
		private System.DateTime _LastLockoutDate;
		
		private int _FailedPasswordAttemptCount;
		
		private System.DateTime _FailedPasswordAttemptWindowStart;
		
		private int _FailedPasswordAnswerAttemptCount;
		
		private System.DateTime _FailedPasswordAnswerAttemptWindowStart;
		
		private string _Comment;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnPasswordFormatChanging(int value);
    partial void OnPasswordFormatChanged();
    partial void OnPasswordSaltChanging(string value);
    partial void OnPasswordSaltChanged();
    partial void OnMobilePINChanging(string value);
    partial void OnMobilePINChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnLoweredEmailChanging(string value);
    partial void OnLoweredEmailChanged();
    partial void OnPasswordQuestionChanging(string value);
    partial void OnPasswordQuestionChanged();
    partial void OnPasswordAnswerChanging(string value);
    partial void OnPasswordAnswerChanged();
    partial void OnIsApprovedChanging(bool value);
    partial void OnIsApprovedChanged();
    partial void OnIsLockedOutChanging(bool value);
    partial void OnIsLockedOutChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnLastLoginDateChanging(System.DateTime value);
    partial void OnLastLoginDateChanged();
    partial void OnLastPasswordChangedDateChanging(System.DateTime value);
    partial void OnLastPasswordChangedDateChanged();
    partial void OnLastLockoutDateChanging(System.DateTime value);
    partial void OnLastLockoutDateChanged();
    partial void OnFailedPasswordAttemptCountChanging(int value);
    partial void OnFailedPasswordAttemptCountChanged();
    partial void OnFailedPasswordAttemptWindowStartChanging(System.DateTime value);
    partial void OnFailedPasswordAttemptWindowStartChanged();
    partial void OnFailedPasswordAnswerAttemptCountChanging(int value);
    partial void OnFailedPasswordAnswerAttemptCountChanged();
    partial void OnFailedPasswordAnswerAttemptWindowStartChanging(System.DateTime value);
    partial void OnFailedPasswordAnswerAttemptWindowStartChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public aspnet_Membership()
		{
			this._aspnet_User = default(EntityRef<aspnet_User>);
			OnCreated();
		}
		
		[Column(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[Column(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[Column(Storage="_Password", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[Column(Storage="_PasswordFormat", DbType="Int NOT NULL")]
		public int PasswordFormat
		{
			get
			{
				return this._PasswordFormat;
			}
			set
			{
				if ((this._PasswordFormat != value))
				{
					this.OnPasswordFormatChanging(value);
					this.SendPropertyChanging();
					this._PasswordFormat = value;
					this.SendPropertyChanged("PasswordFormat");
					this.OnPasswordFormatChanged();
				}
			}
		}
		
		[Column(Storage="_PasswordSalt", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string PasswordSalt
		{
			get
			{
				return this._PasswordSalt;
			}
			set
			{
				if ((this._PasswordSalt != value))
				{
					this.OnPasswordSaltChanging(value);
					this.SendPropertyChanging();
					this._PasswordSalt = value;
					this.SendPropertyChanged("PasswordSalt");
					this.OnPasswordSaltChanged();
				}
			}
		}
		
		[Column(Storage="_MobilePIN", DbType="NVarChar(16)")]
		public string MobilePIN
		{
			get
			{
				return this._MobilePIN;
			}
			set
			{
				if ((this._MobilePIN != value))
				{
					this.OnMobilePINChanging(value);
					this.SendPropertyChanging();
					this._MobilePIN = value;
					this.SendPropertyChanged("MobilePIN");
					this.OnMobilePINChanged();
				}
			}
		}
		
		[Column(Storage="_Email", DbType="NVarChar(256)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[Column(Storage="_LoweredEmail", DbType="NVarChar(256)")]
		public string LoweredEmail
		{
			get
			{
				return this._LoweredEmail;
			}
			set
			{
				if ((this._LoweredEmail != value))
				{
					this.OnLoweredEmailChanging(value);
					this.SendPropertyChanging();
					this._LoweredEmail = value;
					this.SendPropertyChanged("LoweredEmail");
					this.OnLoweredEmailChanged();
				}
			}
		}
		
		[Column(Storage="_PasswordQuestion", DbType="NVarChar(256)")]
		public string PasswordQuestion
		{
			get
			{
				return this._PasswordQuestion;
			}
			set
			{
				if ((this._PasswordQuestion != value))
				{
					this.OnPasswordQuestionChanging(value);
					this.SendPropertyChanging();
					this._PasswordQuestion = value;
					this.SendPropertyChanged("PasswordQuestion");
					this.OnPasswordQuestionChanged();
				}
			}
		}
		
		[Column(Storage="_PasswordAnswer", DbType="NVarChar(128)")]
		public string PasswordAnswer
		{
			get
			{
				return this._PasswordAnswer;
			}
			set
			{
				if ((this._PasswordAnswer != value))
				{
					this.OnPasswordAnswerChanging(value);
					this.SendPropertyChanging();
					this._PasswordAnswer = value;
					this.SendPropertyChanged("PasswordAnswer");
					this.OnPasswordAnswerChanged();
				}
			}
		}
		
		[Column(Storage="_IsApproved", DbType="Bit NOT NULL")]
		public bool IsApproved
		{
			get
			{
				return this._IsApproved;
			}
			set
			{
				if ((this._IsApproved != value))
				{
					this.OnIsApprovedChanging(value);
					this.SendPropertyChanging();
					this._IsApproved = value;
					this.SendPropertyChanged("IsApproved");
					this.OnIsApprovedChanged();
				}
			}
		}
		
		[Column(Storage="_IsLockedOut", DbType="Bit NOT NULL")]
		public bool IsLockedOut
		{
			get
			{
				return this._IsLockedOut;
			}
			set
			{
				if ((this._IsLockedOut != value))
				{
					this.OnIsLockedOutChanging(value);
					this.SendPropertyChanging();
					this._IsLockedOut = value;
					this.SendPropertyChanged("IsLockedOut");
					this.OnIsLockedOutChanged();
				}
			}
		}
		
		[Column(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[Column(Storage="_LastLoginDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastLoginDate
		{
			get
			{
				return this._LastLoginDate;
			}
			set
			{
				if ((this._LastLoginDate != value))
				{
					this.OnLastLoginDateChanging(value);
					this.SendPropertyChanging();
					this._LastLoginDate = value;
					this.SendPropertyChanged("LastLoginDate");
					this.OnLastLoginDateChanged();
				}
			}
		}
		
		[Column(Storage="_LastPasswordChangedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastPasswordChangedDate
		{
			get
			{
				return this._LastPasswordChangedDate;
			}
			set
			{
				if ((this._LastPasswordChangedDate != value))
				{
					this.OnLastPasswordChangedDateChanging(value);
					this.SendPropertyChanging();
					this._LastPasswordChangedDate = value;
					this.SendPropertyChanged("LastPasswordChangedDate");
					this.OnLastPasswordChangedDateChanged();
				}
			}
		}
		
		[Column(Storage="_LastLockoutDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastLockoutDate
		{
			get
			{
				return this._LastLockoutDate;
			}
			set
			{
				if ((this._LastLockoutDate != value))
				{
					this.OnLastLockoutDateChanging(value);
					this.SendPropertyChanging();
					this._LastLockoutDate = value;
					this.SendPropertyChanged("LastLockoutDate");
					this.OnLastLockoutDateChanged();
				}
			}
		}
		
		[Column(Storage="_FailedPasswordAttemptCount", DbType="Int NOT NULL")]
		public int FailedPasswordAttemptCount
		{
			get
			{
				return this._FailedPasswordAttemptCount;
			}
			set
			{
				if ((this._FailedPasswordAttemptCount != value))
				{
					this.OnFailedPasswordAttemptCountChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAttemptCount = value;
					this.SendPropertyChanged("FailedPasswordAttemptCount");
					this.OnFailedPasswordAttemptCountChanged();
				}
			}
		}
		
		[Column(Storage="_FailedPasswordAttemptWindowStart", DbType="DateTime NOT NULL")]
		public System.DateTime FailedPasswordAttemptWindowStart
		{
			get
			{
				return this._FailedPasswordAttemptWindowStart;
			}
			set
			{
				if ((this._FailedPasswordAttemptWindowStart != value))
				{
					this.OnFailedPasswordAttemptWindowStartChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAttemptWindowStart = value;
					this.SendPropertyChanged("FailedPasswordAttemptWindowStart");
					this.OnFailedPasswordAttemptWindowStartChanged();
				}
			}
		}
		
		[Column(Storage="_FailedPasswordAnswerAttemptCount", DbType="Int NOT NULL")]
		public int FailedPasswordAnswerAttemptCount
		{
			get
			{
				return this._FailedPasswordAnswerAttemptCount;
			}
			set
			{
				if ((this._FailedPasswordAnswerAttemptCount != value))
				{
					this.OnFailedPasswordAnswerAttemptCountChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAnswerAttemptCount = value;
					this.SendPropertyChanged("FailedPasswordAnswerAttemptCount");
					this.OnFailedPasswordAnswerAttemptCountChanged();
				}
			}
		}
		
		[Column(Storage="_FailedPasswordAnswerAttemptWindowStart", DbType="DateTime NOT NULL")]
		public System.DateTime FailedPasswordAnswerAttemptWindowStart
		{
			get
			{
				return this._FailedPasswordAnswerAttemptWindowStart;
			}
			set
			{
				if ((this._FailedPasswordAnswerAttemptWindowStart != value))
				{
					this.OnFailedPasswordAnswerAttemptWindowStartChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAnswerAttemptWindowStart = value;
					this.SendPropertyChanged("FailedPasswordAnswerAttemptWindowStart");
					this.OnFailedPasswordAnswerAttemptWindowStartChanged();
				}
			}
		}
		
		[Column(Storage="_Comment", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[Association(Name="aspnet_User_aspnet_Membership", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.aspnet_Membership = null;
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.aspnet_Membership = this;
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.aspnet_UsersInRoles")]
	public partial class aspnet_UsersInRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserId;
		
		private System.Guid _RoleId;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
		private EntityRef<aspnet_Role> _aspnet_Role;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    #endregion
		
		public aspnet_UsersInRole()
		{
			this._aspnet_User = default(EntityRef<aspnet_User>);
			this._aspnet_Role = default(EntityRef<aspnet_Role>);
			OnCreated();
		}
		
		[Column(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[Column(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._aspnet_Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[Association(Name="aspnet_User_aspnet_UsersInRole", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.aspnet_UsersInRoles.Remove(this);
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.aspnet_UsersInRoles.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		[Association(Name="aspnet_Role_aspnet_UsersInRole", Storage="_aspnet_Role", ThisKey="RoleId", OtherKey="RoleId", IsForeignKey=true)]
		public aspnet_Role aspnet_Role
		{
			get
			{
				return this._aspnet_Role.Entity;
			}
			set
			{
				aspnet_Role previousValue = this._aspnet_Role.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Role.Entity = null;
						previousValue.aspnet_UsersInRoles.Remove(this);
					}
					this._aspnet_Role.Entity = value;
					if ((value != null))
					{
						value.aspnet_UsersInRoles.Add(this);
						this._RoleId = value.RoleId;
					}
					else
					{
						this._RoleId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Role");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.aspnet_Users")]
	public partial class aspnet_User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _UserId;
		
		private string _UserName;
		
		private string _LoweredUserName;
		
		private string _MobileAlias;
		
		private bool _IsAnonymous;
		
		private System.DateTime _LastActivityDate;
		
		private EntityRef<aspnet_Membership> _aspnet_Membership;
		
		private EntitySet<aspnet_UsersInRole> _aspnet_UsersInRoles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnLoweredUserNameChanging(string value);
    partial void OnLoweredUserNameChanged();
    partial void OnMobileAliasChanging(string value);
    partial void OnMobileAliasChanged();
    partial void OnIsAnonymousChanging(bool value);
    partial void OnIsAnonymousChanged();
    partial void OnLastActivityDateChanging(System.DateTime value);
    partial void OnLastActivityDateChanged();
    #endregion
		
		public aspnet_User()
		{
			this._aspnet_Membership = default(EntityRef<aspnet_Membership>);
			this._aspnet_UsersInRoles = new EntitySet<aspnet_UsersInRole>(new Action<aspnet_UsersInRole>(this.attach_aspnet_UsersInRoles), new Action<aspnet_UsersInRole>(this.detach_aspnet_UsersInRoles));
			OnCreated();
		}
		
		[Column(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[Column(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[Column(Storage="_UserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[Column(Storage="_LoweredUserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredUserName
		{
			get
			{
				return this._LoweredUserName;
			}
			set
			{
				if ((this._LoweredUserName != value))
				{
					this.OnLoweredUserNameChanging(value);
					this.SendPropertyChanging();
					this._LoweredUserName = value;
					this.SendPropertyChanged("LoweredUserName");
					this.OnLoweredUserNameChanged();
				}
			}
		}
		
		[Column(Storage="_MobileAlias", DbType="NVarChar(16)")]
		public string MobileAlias
		{
			get
			{
				return this._MobileAlias;
			}
			set
			{
				if ((this._MobileAlias != value))
				{
					this.OnMobileAliasChanging(value);
					this.SendPropertyChanging();
					this._MobileAlias = value;
					this.SendPropertyChanged("MobileAlias");
					this.OnMobileAliasChanged();
				}
			}
		}
		
		[Column(Storage="_IsAnonymous", DbType="Bit NOT NULL")]
		public bool IsAnonymous
		{
			get
			{
				return this._IsAnonymous;
			}
			set
			{
				if ((this._IsAnonymous != value))
				{
					this.OnIsAnonymousChanging(value);
					this.SendPropertyChanging();
					this._IsAnonymous = value;
					this.SendPropertyChanged("IsAnonymous");
					this.OnIsAnonymousChanged();
				}
			}
		}
		
		[Column(Storage="_LastActivityDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastActivityDate
		{
			get
			{
				return this._LastActivityDate;
			}
			set
			{
				if ((this._LastActivityDate != value))
				{
					this.OnLastActivityDateChanging(value);
					this.SendPropertyChanging();
					this._LastActivityDate = value;
					this.SendPropertyChanged("LastActivityDate");
					this.OnLastActivityDateChanged();
				}
			}
		}
		
		[Association(Name="aspnet_User_aspnet_Membership", Storage="_aspnet_Membership", ThisKey="UserId", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
		public aspnet_Membership aspnet_Membership
		{
			get
			{
				return this._aspnet_Membership.Entity;
			}
			set
			{
				aspnet_Membership previousValue = this._aspnet_Membership.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Membership.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Membership.Entity = null;
						previousValue.aspnet_User = null;
					}
					this._aspnet_Membership.Entity = value;
					if ((value != null))
					{
						value.aspnet_User = this;
					}
					this.SendPropertyChanged("aspnet_Membership");
				}
			}
		}
		
		[Association(Name="aspnet_User_aspnet_UsersInRole", Storage="_aspnet_UsersInRoles", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<aspnet_UsersInRole> aspnet_UsersInRoles
		{
			get
			{
				return this._aspnet_UsersInRoles;
			}
			set
			{
				this._aspnet_UsersInRoles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = this;
		}
		
		private void detach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = null;
		}
	}
	
	[Table(Name="dbo.aspnet_Roles")]
	public partial class aspnet_Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _RoleId;
		
		private string _RoleName;
		
		private string _LoweredRoleName;
		
		private string _Description;
		
		private EntitySet<aspnet_UsersInRole> _aspnet_UsersInRoles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    partial void OnLoweredRoleNameChanging(string value);
    partial void OnLoweredRoleNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public aspnet_Role()
		{
			this._aspnet_UsersInRoles = new EntitySet<aspnet_UsersInRole>(new Action<aspnet_UsersInRole>(this.attach_aspnet_UsersInRoles), new Action<aspnet_UsersInRole>(this.detach_aspnet_UsersInRoles));
			OnCreated();
		}
		
		[Column(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[Column(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[Column(Storage="_RoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[Column(Storage="_LoweredRoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredRoleName
		{
			get
			{
				return this._LoweredRoleName;
			}
			set
			{
				if ((this._LoweredRoleName != value))
				{
					this.OnLoweredRoleNameChanging(value);
					this.SendPropertyChanging();
					this._LoweredRoleName = value;
					this.SendPropertyChanged("LoweredRoleName");
					this.OnLoweredRoleNameChanged();
				}
			}
		}
		
		[Column(Storage="_Description", DbType="NVarChar(256)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Association(Name="aspnet_Role_aspnet_UsersInRole", Storage="_aspnet_UsersInRoles", ThisKey="RoleId", OtherKey="RoleId")]
		public EntitySet<aspnet_UsersInRole> aspnet_UsersInRoles
		{
			get
			{
				return this._aspnet_UsersInRoles;
			}
			set
			{
				this._aspnet_UsersInRoles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Role = this;
		}
		
		private void detach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Role = null;
		}
	}
	
	public partial class aspnet_UsersInRoles_AddUsersToRolesResult
	{
		
		private string _Name;
		
		public aspnet_UsersInRoles_AddUsersToRolesResult()
		{
		}
		
		[Column(Storage="_Name", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
	}
	
	public partial class aspnet_UsersInRoles_RemoveUsersFromRolesResult
	{
		
		private char _Column1;
		
		private string _Name;
		
		public aspnet_UsersInRoles_RemoveUsersFromRolesResult()
		{
		}
		
		[Column(Storage="_Column1", DbType="NVarChar(1) NOT NULL")]
		public char Column1
		{
			get
			{
				return this._Column1;
			}
			set
			{
				if ((this._Column1 != value))
				{
					this._Column1 = value;
				}
			}
		}
		
		[Column(Storage="_Name", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
